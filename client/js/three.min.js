var THREE={REVISION:"71"};"object"==typeof module&&(module.exports=THREE),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),THREE.log=function(){console.log.apply(console,arguments)},THREE.warn=function(){console.warn.apply(console,arguments)},THREE.error=function(){console.error.apply(console,arguments)},THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.Projector=function(){THREE.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){THREE.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){THREE.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(e,t){THREE.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){THREE.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return(r<0&&(r+=1),r>1&&(r-=1),r<1/6)?e+(t-e)*6*r:r<.5?t:r<2/3?e+(t-e)*6*(2/3-r):e},n=r<=.5?r*(1+t):r+t-r*t,o=2*r-n;this.r=i(o,n,e+1/3),this.g=i(o,n,e),this.b=i(o,n,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,r,i=e||{h:0,s:0,l:0},n=this.r,o=this.g,a=this.b,s=Math.max(n,o,a),h=Math.min(n,o,a),l=(h+s)/2;if(h===s)t=0,r=0;else{var c=s-h;switch(r=l<=.5?c/(s+h):c/(2-s-h),s){case n:t=(o-a)/c+(o<a?6:0);break;case o:t=(a-n)/c+2;break;case a:t=(n-o)/c+4}t/=6}return i.h=t,i.s=r,i.l=l,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},clone:function(){return new THREE.Color().setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(value){this._x=value,this.onChangeCallback()},get y(){return this._y},set y(value){this._y=value,this.onChangeCallback()},get z(){return this._z},set z(value){this._z=value,this.onChangeCallback()},get w(){return this._w},set w(value){this._w=value,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===e.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],h=r[9],l=r[2],c=r[6],u=r[10],E=i+s+u;return E>0?(t=.5/Math.sqrt(E+1),this._w=.25/t,this._x=(c-h)*t,this._y=(o-l)*t,this._z=(a-n)*t):i>s&&i>u?(t=2*Math.sqrt(1+i-s-u),this._w=(c-h)/t,this._x=.25*t,this._y=(n+a)/t,this._z=(o+l)/t):s>u?(t=2*Math.sqrt(1+s-i-u),this._w=(o-l)/t,this._x=(n+a)/t,this._y=.25*t,this._z=(h+c)/t):(t=2*Math.sqrt(1+u-i-s),this._w=(a-n)/t,this._x=(o+l)/t,this._y=(h+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3),(t=r.dot(i)+1)<1e-6?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(e){return THREE.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,i=this._y,n=this._z,o=this._w,a=o*e._w+r*e._x+i*e._y+n*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);if(.001>Math.abs(h))return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;var l=Math.sin((1-t)*s)/h,c=Math.sin(t*s)/h;return this._w=o*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=n*l+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return t instanceof THREE.Euler==!1&&THREE.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6]*i,this.y=n[1]*t+n[4]*r+n[7]*i,this.z=n[2]*t+n[5]*r+n[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i+n[12],this.y=n[1]*t+n[5]*r+n[9]*i+n[13],this.z=n[2]*t+n[6]*r+n[10]*i+n[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements,o=1/(n[3]*t+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*t+n[4]*r+n[8]*i+n[12])*o,this.y=(n[1]*t+n[5]*r+n[9]*i+n[13])*o,this.z=(n[2]*t+n[6]*r+n[10]*i+n[14])*o,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,o=e.y,a=e.z,s=e.w,h=s*t+o*i-a*r,l=s*r+a*t-n*i,c=s*i+n*r-o*t,u=-n*t-o*r-a*i;return this.x=h*s+-(u*n)+-(l*a)- -(c*o),this.y=l*s+-(u*o)+-(c*n)- -(h*a),this.z=c*s+-(u*a)+-(h*o)- -(l*n),this},project:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i,this.y=n[1]*t+n[5]*r+n[9]*i,this.z=n[2]*t+n[6]*r+n[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},cross:function(e,t){if(void 0!==t)return THREE.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},setEulerFromRotationMatrix:function(e,t){THREE.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){THREE.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return THREE.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return THREE.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return THREE.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*t+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*t+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*t+o[7]*r+o[11]*i+o[15]*n,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,n,o=e.elements,a=o[0],s=o[4],h=o[8],l=o[1],c=o[5],u=o[9],E=o[2],f=o[6],p=o[10];if(.01>Math.abs(s-l)&&.01>Math.abs(h-E)&&.01>Math.abs(u-f)){if(.1>Math.abs(s+l)&&.1>Math.abs(h+E)&&.1>Math.abs(u+f)&&.1>Math.abs(a+c+p-3))return this.set(1,0,0,0),this;t=Math.PI;var d=(a+1)/2,m=(c+1)/2,T=(p+1)/2,$=(s+l)/4,g=(h+E)/4,v=(u+f)/4;return d>m&&d>T?d<.01?(r=0,i=.707106781,n=.707106781):(i=$/(r=Math.sqrt(d)),n=g/r):m>T?m<.01?(r=.707106781,i=0,n=.707106781):(r=$/(i=Math.sqrt(m)),n=v/i):T<.01?(r=.707106781,i=.707106781,n=0):(r=g/(n=Math.sqrt(T)),i=v/n),this.set(r,i,n,t),this}var R=Math.sqrt((f-u)*(f-u)+(h-E)*(h-E)+(l-s)*(l-s));return .001>Math.abs(R)&&(R=1),this.x=(f-u)/R,this.y=(h-E)/R,this.z=(l-s)/R,this.w=Math.acos((a+c+p-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(value){this._x=value,this.onChangeCallback()},get y(){return this._y},set y(value){this._y=value,this.onChangeCallback()},get z(){return this._z},set z(value){this._z=value,this.onChangeCallback()},get order(){return this._order},set order(value){this._order=value,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var i=THREE.Math.clamp,n=e.elements,o=n[0],a=n[4],s=n[8],h=n[1],l=n[5],c=n[9],u=n[2],E=n[6],f=n[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(i(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(E,l),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(c,-1,1)),.99999>Math.abs(c)?(this._y=Math.atan2(s,f),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-u,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(E,-1,1)),.99999>Math.abs(E)?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(h,o))):"ZYX"===t?(this._y=Math.asin(-i(u,-1,1)),.99999>Math.abs(u)?(this._x=Math.atan2(E,f),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-a,l))):"YZX"===t?(this._z=Math.asin(i(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(s,f))):"XZY"===t?(this._z=Math.asin(-i(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(E,l),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-c,f),this._y=0)):THREE.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,r,i){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,i),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),o=t.dot(e)/n;return i&&(o=THREE.Math.clamp(o,0,1)),o}}(),closestPointToPoint:function(e,t,r){var i=this.closestPointToPointParameter(e,t),n=r||new THREE.Vector3;return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return new THREE.Line3().copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)},containsBox:function(e){return!!(this.min.x<=e.min.x)&&!!(e.max.x<=this.max.x)&&!!(this.min.y<=e.min.y)&&!!(e.max.y<=this.max.y)},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return new THREE.Box2().copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var i=t.geometry;if(void 0!==i){if(i instanceof THREE.Geometry)for(var n=i.vertices,o=0,a=n.length;o<a;o++)e.copy(n[o]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e);else if(i instanceof THREE.BufferGeometry&&void 0!==i.attributes.position)for(var s=i.attributes.position.array,o=0,a=s.length;o<a;o+=3)e.set(s[o],s[o+1],s[o+2]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)},containsBox:function(e){return!!(this.min.x<=e.min.x)&&!!(e.max.x<=this.max.x)&&!!(this.min.y<=e.min.y)&&!!(e.max.y<=this.max.y)&&!!(this.min.z<=e.min.z)&&!!(e.max.z<=this.max.z)},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return new THREE.Box3().copy(this)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&THREE.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return THREE.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return THREE.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0,o=r;n<i;n+=3,o+=3)e.x=t[o],e.y=t[o+1],e.z=t[o+2],e.applyMatrix3(this),t[o]=e.x,t[o+1]=e.y,t[o+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],l=e[8];return t*o*l-t*a*h-r*n*l+r*a*s+i*n*h-i*o*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var o="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(o);return THREE.warn(o),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){return new THREE.Matrix3().fromArray(this.elements)}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&THREE.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,h,l,c,u,E,f,p,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=E,m[7]=f,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return THREE.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){var i=this.elements;return e.set(i[0],i[1],i[2]),t.set(i[4],i[5],i[6]),r.set(i[8],i[9],i[10]),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,n=1/e.set(i[0],i[1],i[2]).length(),o=1/e.set(i[4],i[5],i[6]).length(),a=1/e.set(i[8],i[9],i[10]).length();return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[8]=i[8]*a,r[9]=i[9]*a,r[10]=i[10]*a,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&THREE.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,i=e.y,n=e.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(n),c=Math.sin(n);if("XYZ"===e.order){var u=o*l,E=o*c,f=a*l,p=a*c;t[0]=s*l,t[4]=-s*c,t[8]=h,t[1]=E+f*h,t[5]=u-p*h,t[9]=-a*s,t[2]=p-u*h,t[6]=f+E*h,t[10]=o*s}else if("YXZ"===e.order){var d=s*l,m=s*c,T=h*l,$=h*c;t[0]=d+$*a,t[4]=T*a-m,t[8]=o*h,t[1]=o*c,t[5]=o*l,t[9]=-a,t[2]=m*a-T,t[6]=$+d*a,t[10]=o*s}else if("ZXY"===e.order){var d=s*l,m=s*c,T=h*l,$=h*c;t[0]=d-$*a,t[4]=-o*c,t[8]=T+m*a,t[1]=m+T*a,t[5]=o*l,t[9]=$-d*a,t[2]=-o*h,t[6]=a,t[10]=o*s}else if("ZYX"===e.order){var u=o*l,E=o*c,f=a*l,p=a*c;t[0]=s*l,t[4]=f*h-E,t[8]=u*h+p,t[1]=s*c,t[5]=p*h+u,t[9]=E*h-f,t[2]=-h,t[6]=a*s,t[10]=o*s}else if("YZX"===e.order){var g=o*s,v=o*h,R=a*s,y=a*h;t[0]=s*l,t[4]=y-g*c,t[8]=R*c+v,t[1]=c,t[5]=o*l,t[9]=-a*l,t[2]=-h*l,t[6]=v*c+R,t[10]=g-y*c}else if("XZY"===e.order){var g=o*s,v=o*h,R=a*s,y=a*h;t[0]=s*l,t[4]=-c,t[8]=h*l,t[1]=g*c+y,t[5]=o*l,t[9]=v*c-R,t[2]=R*c-v,t[6]=a*l,t[10]=y*c+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return THREE.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=r+r,s=i+i,h=n+n,l=r*a,c=r*s,u=r*h,E=i*s,f=i*h,p=n*h,d=o*a,m=o*s,T=o*h;return t[0]=1-(E+p),t[4]=c-T,t[8]=u+m,t[1]=c+T,t[5]=1-(l+p),t[9]=f-d,t[2]=u-m,t[6]=f+d,t[10]=1-(l+E),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),e.crossVectors(o,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(o,r).normalize()),t.crossVectors(r,e),a[0]=e.x,a[4]=t.x,a[8]=r.x,a[1]=e.y,a[5]=t.y,a[9]=r.y,a[2]=e.z,a[6]=t.z,a[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],E=r[13],f=r[2],p=r[6],d=r[10],m=r[14],T=r[3],$=r[7],g=r[11],v=r[15],R=i[0],y=i[4],H=i[8],x=i[12],_=i[1],b=i[5],w=i[9],S=i[13],M=i[2],C=i[6],A=i[10],L=i[14],F=i[3],P=i[7],B=i[11],D=i[15];return n[0]=o*R+a*_+s*M+h*F,n[4]=o*y+a*b+s*C+h*P,n[8]=o*H+a*w+s*A+h*B,n[12]=o*x+a*S+s*L+h*D,n[1]=l*R+c*_+u*M+E*F,n[5]=l*y+c*b+u*C+E*P,n[9]=l*H+c*w+u*A+E*B,n[13]=l*x+c*S+u*L+E*D,n[2]=f*R+p*_+d*M+m*F,n[6]=f*y+p*b+d*C+m*P,n[10]=f*H+p*w+d*A+m*B,n[14]=f*x+p*S+d*L+m*D,n[3]=T*R+$*_+g*M+v*F,n[7]=T*y+$*b+g*C+v*P,n[11]=T*H+$*w+g*A+v*B,n[15]=T*x+$*S+g*L+v*D,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0,o=r;n<i;n+=3,o+=3)e.x=t[o],e.y=t[o+1],e.z=t[o+2],e.applyMatrix4(this),t[o]=e.x,t[o+1]=e.y,t[o+2]=e.z;return t}}(),rotateAxis:function(e){THREE.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return THREE.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e,t=this.elements,r=t[0],i=t[4],n=t[8],o=t[12],a=t[1],s=t[5],h=t[9],l=t[13],c=t[2],u=t[6],E=t[10],f=t[14],p=t[3],d=t[7];return p*(+o*h*u-n*l*u-o*s*E+i*l*E+n*s*f-i*h*f)+d*(+r*h*f-r*l*E+o*a*E-n*a*f+n*l*c-o*h*c)+t[11]*(+r*l*u-r*s*f-o*a*u+i*a*f+o*s*c-i*l*c)+t[15]*(-n*s*c-r*h*u+r*s*E+n*a*u-i*a*E+i*h*c)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){THREE.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],E=i[2],f=i[6],p=i[10],d=i[14],m=i[3],T=i[7],$=i[11],g=i[15];r[0]=c*d*T-u*p*T+u*f*$-l*d*$-c*f*g+l*p*g,r[4]=s*p*T-a*d*T-s*f*$+o*d*$+a*f*g-o*p*g,r[8]=a*u*T-s*c*T+s*l*$-o*u*$-a*l*g+o*c*g,r[12]=s*c*f-a*u*f-s*l*p+o*u*p+a*l*d-o*c*d,r[1]=u*p*m-c*d*m-u*E*$+h*d*$+c*E*g-h*p*g,r[5]=a*d*m-s*p*m+s*E*$-n*d*$-a*E*g+n*p*g,r[9]=s*c*m-a*u*m-s*h*$+n*u*$+a*h*g-n*c*g,r[13]=a*u*E-s*c*E+s*h*p-n*u*p-a*h*d+n*c*d,r[2]=l*d*m-u*f*m+u*E*T-h*d*T-l*E*g+h*f*g,r[6]=s*f*m-o*d*m-s*E*T+n*d*T+o*E*g-n*f*g,r[10]=o*u*m-s*l*m+s*h*T-n*u*T-o*h*g+n*l*g,r[14]=s*l*E-o*u*E-s*h*f+n*u*f+o*h*d-n*l*d,r[3]=c*f*m-l*p*m-c*E*T+h*p*T+l*E*$-h*f*$,r[7]=o*p*m-a*f*m+a*E*T-n*p*T-o*E*$+n*f*$,r[11]=a*l*m-o*c*m-a*h*T+n*c*T+o*h*$-n*l*$,r[15]=o*c*E-a*l*E+a*h*f-n*c*f-o*h*p+n*l*p;var v=n*r[0]+h*r[4]+E*r[8]+m*r[12];if(0==v){var R="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(R);return THREE.warn(R),this.identity(),this}return this.multiplyScalar(1/v),this},translate:function(e){THREE.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){THREE.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){THREE.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){THREE.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){THREE.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[0]*=r,t[4]*=i,t[8]*=n,t[1]*=r,t[5]*=i,t[9]*=n,t[2]*=r,t[6]*=i,t[10]*=n,t[3]*=r,t[7]*=i,t[11]*=n,this},getMaxScaleOnAxis:function(){var e,t=this.elements,r=t[0]*t[0]+t[1]*t[1]+t[2]*t[2];return Math.sqrt(Math.max(r,Math.max(t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10])))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],t.elements.set(this.elements);var l=1/a,c=1/s,u=1/h;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=u,t.elements[9]*=u,t.elements[10]*=u,i.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,r,i,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*e)),o=-n;return this.makeFrustum(o*t,n*t,o,n,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,h=r-i,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((r+i)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){return new THREE.Matrix4().fromArray(this.elements)}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a){e.copy(i).add(n).multiplyScalar(.5),t.copy(n).sub(i).normalize(),r.copy(this.origin).sub(e);var s,h,l,c,u=.5*i.distanceTo(n),E=-this.direction.dot(t),f=r.dot(this.direction),p=-r.dot(t),d=r.lengthSq(),m=Math.abs(1-E*E);if(m>0){if(s=E*p-f,h=E*f-p,c=u*m,s>=0){if(h>=-c){if(h<=c){var T=1/m;s*=T,h*=T,l=s*(s+E*h+2*f)+h*(E*s+h+2*p)+d}else l=-(s=Math.max(0,-(E*(h=u)+f)))*s+h*(h+2*p)+d}else l=-(s=Math.max(0,-(E*(h=-u)+f)))*s+h*(h+2*p)+d}else h<=-c?(h=(s=Math.max(0,-(-E*u+f)))>0?-u:Math.min(Math.max(-u,-p),u),l=-s*s+h*(h+2*p)+d):h<=c?(s=0,l=(h=Math.min(Math.max(-u,-p),u))*(h+2*p)+d):(h=(s=Math.max(0,-(E*u+f)))>0?u:Math.min(Math.max(-u,-p),u),l=-s*s+h*(h+2*p)+d)}else h=E>0?-u:u,l=-(s=Math.max(0,-(E*h+f)))*s+h*(h+2*p)+d;return o&&o.copy(this.direction).multiplyScalar(s).add(this.origin),a&&a.copy(t).multiplyScalar(h).add(e),l}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var i=e.dot(this.direction),n=e.dot(e)-i*i,o=t.radius*t.radius;if(n>o)return null;var a=Math.sqrt(o-n),s=i-a,h=i+a;return s<0&&h<0?null:s<0?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,n,o,a,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return(h>=0?(r=(e.min.x-u.x)*h,i=(e.max.x-u.x)*h):(r=(e.max.x-u.x)*h,i=(e.min.x-u.x)*h),l>=0?(n=(e.min.y-u.y)*l,o=(e.max.y-u.y)*l):(n=(e.max.y-u.y)*l,o=(e.min.y-u.y)*l),r>o||n>i)?null:((n>r||r!=r)&&(r=n),(o<i||i!=i)&&(i=o),c>=0?(a=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(a=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),r>s||a>i)?null:((a>r||r!=r)&&(r=a),(s<i||i!=i)&&(i=s),i<0)?null:this.at(r>=0?r:i,t)},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){t.subVectors(o,n),r.subVectors(a,n),i.crossVectors(t,r);var l,c=this.direction.dot(i);if(c>0){if(s)return null;l=1}else{if(!(c<0))return null;l=-1,c=-c}e.subVectors(this.origin,n);var u=l*this.direction.dot(r.crossVectors(e,r));if(u<0)return null;var E=l*this.direction.dot(t.cross(e));if(E<0||u+E>c)return null;var f=-l*e.dot(i);return f<0?null:this.at(f/c,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return new THREE.Ray().copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var n=0,o=0,a=t.length;o<a;o++)n=Math.max(n,i.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return new THREE.Sphere().copy(this)}},THREE.Frustum=function(e,t,r,i,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],E=r[9],f=r[10],p=r[11],d=r[12],m=r[13],T=r[14],$=r[15];return t[0].setComponents(a-i,c-s,p-u,$-d).normalize(),t[1].setComponents(a+i,c+s,p+u,$+d).normalize(),t[2].setComponents(a+n,c+h,p+E,$+m).normalize(),t[3].setComponents(a-n,c-h,p-E,$-m).normalize(),t[4].setComponents(a-o,c-l,p-f,$-T).normalize(),t[5].setComponents(a+o,c+l,p+f,$+T).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,n=0;n<6;n++)if(t[n].distanceToPoint(r)<i)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;n<6;n++){var o=i[n];e.x=o.normal.x>0?r.min.x:r.max.x,t.x=o.normal.x>0?r.max.x:r.min.x,e.y=o.normal.y>0?r.min.y:r.max.y,t.y=o.normal.y>0?r.max.y:r.min.y,e.z=o.normal.z>0?r.min.z:r.max.z,t.z=o.normal.z>0?r.max.z:r.min.z;var a=o.distanceToPoint(e),s=o.distanceToPoint(t);if(a<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;r<6;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return new THREE.Frustum().copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){var o=e.subVectors(n,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);if(0==o)return 0==this.distanceToPoint(t.start)?i.copy(t.start):void 0;var a=-(t.start.dot(this.normal)+this.constant)/o;if(!(a<0)&&!(a>1))return i.copy(n).multiplyScalar(a).add(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),a=e.copy(this.normal).applyMatrix3(o),s=this.coplanarPoint(t);return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(a,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return new THREE.Plane().copy(this)}},THREE.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=Array(36),i=0;return function(){for(var n=0;n<36;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,r[n]=t[19==n?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return Math.floor(this.randFloat(e,t))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return(e&e-1)==0&&0!==e},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}},THREE.Spline=function(e){this.points=e;var t,r,i,n,o,a,s,h,l,c=[],u={x:0,y:0,z:0};function E(e,t,r,i,n,o,a){var s=(r-e)*.5,h=(i-t)*.5;return(2*(t-r)+s+h)*a+(-3*(t-r)-2*s-h)*o+s*n+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=Math.floor(t=(this.points.length-1)*e),i=t-r,c[0]=0===r?r:r-1,c[1]=r,c[2]=r>this.points.length-2?this.points.length-1:r+1,c[3]=r>this.points.length-3?this.points.length-1:r+2,a=this.points[c[0]],s=this.points[c[1]],h=this.points[c[2]],l=this.points[c[3]],n=i*i,o=i*n,u.x=E(a.x,s.x,h.x,l.x,i,n,o),u.y=E(a.y,s.y,h.y,l.y,i,n,o),u.z=E(a.z,s.z,h.z,l.z,i,n,o),u},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n,o=0,a=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,h.copy(this.points[0]),t=1;t<i;t++)r=t/i,n=this.getPoint(r),l.copy(n),u+=l.distanceTo(h),h.copy(n),(a=Math.floor(o=(this.points.length-1)*r))!=s&&(c[a]=u,s=a);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s,h,l=[],c=new THREE.Vector3,u=this.getLength();for(l.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(r=1,s=Math.ceil(e*(a=u.chunks[t]-u.chunks[t-1])/u.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1);r<s-1;r++)i=n+r*(1/s)*(o-n),h=this.getPoint(i),l.push(c.copy(h).clone());l.push(c.copy(this.points[t]).clone())}this.points=l}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,n){var o=n||new THREE.Vector3;o.subVectors(i,r),e.subVectors(t,r),o.cross(e);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),r.subVectors(i,n);var h=e.dot(e),l=e.dot(t),c=e.dot(r),u=t.dot(t),E=t.dot(r),f=h*u-l*l,p=s||new THREE.Vector3;if(0==f)return p.set(-2,-1,-1);var d=1/f,m=(u*c-l*E)*d,T=(h*E-l*c)*d;return p.set(1-m-T,T,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,n){var o=THREE.Triangle.barycoordFromPoint(t,r,i,n,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return new THREE.Triangle().copy(this)}},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=[],i=t.length,n=0;n<i;n++)r[n]=t[n];for(var n=0;n<i;n++)r[n].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance},r=function(e,t,i,n){if(e.raycast(t,i),!0===n)for(var o=e.children,a=0,s=o.length;a<s;a++)r(o[a],t,i,!0)};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){r instanceof e.PerspectiveCamera?(this.ray.origin.copy(r.position),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(r.position).normalize()):r instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):e.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,i){var n=[];return r(e,this,n,i),n.sort(t),n},intersectObjects:function(i,n){var o=[];if(i instanceof Array==!1)return e.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),o;for(var a=0,s=i.length;a<s;a++)r(i[a],this,o,n);return o.sort(t),o}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1),n=function(){r.setFromEuler(t,!1)},o=function(){t.setFromQuaternion(r,void 0,!1)};t.onChange(n),r.onChange(o),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(value){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=value},get useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(value){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return THREE.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(THREE.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof THREE.Object3D?(void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):THREE.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var r=this.children.indexOf(e);-1!==r&&(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(r,1))},getChildByName:function(e){return THREE.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){var t=e||new THREE.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var i=r||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,i,t),i}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Euler;return this.getWorldQuaternion(e),r.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(r){var i=r||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,i),i}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverseVisible(e)}},traverseAncestors:function(e){this.parent&&(e(this.parent),this.parent.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(){var e={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},t={},r=function(r){if(void 0===e.geometries&&(e.geometries=[]),void 0===t[r.uuid]){var i=r.toJSON();delete i.metadata,t[r.uuid]=i,e.geometries.push(i)}return r.uuid},i={},n=function(t){if(void 0===e.materials&&(e.materials=[]),void 0===i[t.uuid]){var r=t.toJSON();delete r.metadata,i[t.uuid]=r,e.materials.push(r)}return t.uuid},o=function(e){var t={};if(t.uuid=e.uuid,t.type=e.type,""!==e.name&&(t.name=e.name),"{}"!==JSON.stringify(e.userData)&&(t.userData=e.userData),!0!==e.visible&&(t.visible=e.visible),e instanceof THREE.PerspectiveCamera?(t.fov=e.fov,t.aspect=e.aspect,t.near=e.near,t.far=e.far):e instanceof THREE.OrthographicCamera?(t.left=e.left,t.right=e.right,t.top=e.top,t.bottom=e.bottom,t.near=e.near,t.far=e.far):e instanceof THREE.AmbientLight?t.color=e.color.getHex():e instanceof THREE.DirectionalLight?(t.color=e.color.getHex(),t.intensity=e.intensity):e instanceof THREE.PointLight?(t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance,t.decay=e.decay):e instanceof THREE.SpotLight?(t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance,t.angle=e.angle,t.exponent=e.exponent,t.decay=e.decay):e instanceof THREE.HemisphereLight?(t.color=e.color.getHex(),t.groundColor=e.groundColor.getHex()):e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.PointCloud?(t.geometry=r(e.geometry),t.material=n(e.material),e instanceof THREE.Line&&(t.mode=e.mode)):e instanceof THREE.Sprite&&(t.material=n(e.material)),t.matrix=e.matrix.toArray(),e.children.length>0){t.children=[];for(var i=0;i<e.children.length;i++)t.children.push(o(e.children[i]))}return t};return e.object=o(this),e},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var r=0;r<this.children.length;r++){var i=this.children[r];e.add(i.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(e,t,r,i,n,o){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.materialIndex=this.materialIndex;for(var t=0,r=this.vertexNormals.length;t<r;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(var t=0,r=this.vertexColors.length;t<r;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(var t=0,r=this.vertexTangents.length;t<r;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,o,a){return THREE.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,n,o,a)},THREE.BufferAttribute=function(e,t){this.array=e,this.itemSize=t,this.needsUpdate=!1},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[e+i]=t.array[r+i];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},setX:function(e,t){return this.array[e*this.itemSize]=t,this},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,i){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this},setXYZW:function(e,t,r,i,n){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n,this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}},THREE.Int8Attribute=function(e,t){return THREE.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8Attribute=function(e,t){return THREE.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8ClampedAttribute=function(e,t){return THREE.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int16Attribute=function(e,t){return THREE.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint16Attribute=function(e,t){return THREE.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int32Attribute=function(e,t){return THREE.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint32Attribute=function(e,t){return THREE.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float32Attribute=function(e,t){return THREE.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float64Attribute=function(e,t){return THREE.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.DynamicBufferAttribute=function(e,t){THREE.BufferAttribute.call(this,e,t),this.updateRange={offset:0,count:-1}},THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute,THREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)},THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.attributes={},this.attributesKeys=[],this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t){if(t instanceof THREE.BufferAttribute==!1){THREE.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:arguments[1],itemSize:arguments[2]};return}this.attributes[e]=t,this.attributesKeys=Object.keys(this.attributes)},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&(new THREE.Matrix3().getNormalMatrix(e).applyToVector3Array(r.array),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.applyMatrix(new THREE.Matrix4().setPosition(e)),e},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var r=e.vertices,i=e.faces,n=e.faceVertexUvs,o=t.vertexColors,a=n[0].length>0,s=3==i[0].vertexNormals.length,h=new Float32Array(9*i.length);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(9*i.length);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),o!==THREE.NoColors){var c=new Float32Array(9*i.length);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(!0===a){var u=new Float32Array(6*i.length);this.addAttribute("uv",new THREE.BufferAttribute(u,2))}for(var E=0,f=0,p=0;E<i.length;E++,f+=6,p+=9){var d=i[E],m=r[d.a],T=r[d.b],$=r[d.c];if(h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=T.x,h[p+4]=T.y,h[p+5]=T.z,h[p+6]=$.x,h[p+7]=$.y,h[p+8]=$.z,!0===s){var g=d.vertexNormals[0],v=d.vertexNormals[1],R=d.vertexNormals[2];l[p]=g.x,l[p+1]=g.y,l[p+2]=g.z,l[p+3]=v.x,l[p+4]=v.y,l[p+5]=v.z,l[p+6]=R.x,l[p+7]=R.y,l[p+8]=R.z}else{var y=d.normal;l[p]=y.x,l[p+1]=y.y,l[p+2]=y.z,l[p+3]=y.x,l[p+4]=y.y,l[p+5]=y.z,l[p+6]=y.x,l[p+7]=y.y,l[p+8]=y.z}if(o===THREE.FaceColors){var H=d.color;c[p]=H.r,c[p+1]=H.g,c[p+2]=H.b,c[p+3]=H.r,c[p+4]=H.g,c[p+5]=H.b,c[p+6]=H.r,c[p+7]=H.g,c[p+8]=H.b}else if(o===THREE.VertexColors){var x=d.vertexColors[0],_=d.vertexColors[1],b=d.vertexColors[2];c[p]=x.r,c[p+1]=x.g,c[p+2]=x.b,c[p+3]=_.r,c[p+4]=_.g,c[p+5]=_.b,c[p+6]=b.r,c[p+7]=b.g,c[p+8]=b.b}if(!0===a){var w=n[0][E][0],S=n[0][E][1],M=n[0][E][2];u[f]=w.x,u[f+1]=w.y,u[f+2]=S.x,u[f+3]=S.y,u[f+4]=M.x,u[f+5]=M.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var e=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var r=this.boundingBox;r.makeEmpty();for(var i=0,n=t.length;i<n;i+=3)e.set(t[i],t[i+1],t[i+2]),r.expandByPoint(e)}(void 0===t||0===t.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;n<o;n+=3)t.set(r[n],r[n+1],r[n+2]),e.expandByPoint(t);e.center(i);for(var a=0,n=0,o=r.length;n<o;n+=3)t.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&THREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.attributes;if(e.position){var t=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t.length),3));else for(var r=e.normal.array,i=0,n=r.length;i<n;i++)r[i]=0;var o,a,s,r=e.normal.array,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,E=new THREE.Vector3;if(e.index)for(var f=e.index.array,p=this.offsets.length>0?this.offsets:[{start:0,count:f.length,index:0}],d=0,m=p.length;d<m;++d)for(var T=p[d].start,$=p[d].count,g=p[d].index,i=T,n=T+$;i<n;i+=3)o=(g+f[i])*3,a=(g+f[i+1])*3,s=(g+f[i+2])*3,h.fromArray(t,o),l.fromArray(t,a),c.fromArray(t,s),u.subVectors(c,l),E.subVectors(h,l),u.cross(E),r[o]+=u.x,r[o+1]+=u.y,r[o+2]+=u.z,r[a]+=u.x,r[a+1]+=u.y,r[a+2]+=u.z,r[s]+=u.x,r[s+1]+=u.y,r[s+2]+=u.z;else for(var i=0,n=t.length;i<n;i+=9)h.fromArray(t,i),l.fromArray(t,i+3),c.fromArray(t,i+6),u.subVectors(c,l),E.subVectors(h,l),u.cross(E),r[i]=u.x,r[i+1]=u.y,r[i+2]=u.z,r[i+3]=u.x,r[i+4]=u.y,r[i+5]=u.z,r[i+6]=u.x,r[i+7]=u.y,r[i+8]=u.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},computeTangents:function(){if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){THREE.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var e,t,r,i,n,o,a,s,h,l,c=this.attributes.index.array,u=this.attributes.position.array,E=this.attributes.normal.array,f=this.attributes.uv.array,p=u.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*p),4));for(var d=this.attributes.tangent.array,m=[],T=[],$=0;$<p;$++)m[$]=new THREE.Vector3,T[$]=new THREE.Vector3;var g,v,R,y,H,x,_,b,w,S,M,C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,F=new THREE.Vector2,P=new THREE.Vector2,B=new THREE.Vector2,D=new THREE.Vector3,U=new THREE.Vector3;function V(e,t,r){C.fromArray(u,3*e),A.fromArray(u,3*t),L.fromArray(u,3*r),F.fromArray(f,2*e),P.fromArray(f,2*t),B.fromArray(f,2*r),g=A.x-C.x,v=L.x-C.x,R=A.y-C.y,y=L.y-C.y,H=A.z-C.z,x=L.z-C.z,_=P.x-F.x,b=B.x-F.x,w=P.y-F.y,M=1/(_*(S=B.y-F.y)-b*w),D.set((S*g-w*v)*M,(S*R-w*y)*M,(S*H-w*x)*M),U.set((_*v-b*g)*M,(_*y-b*R)*M,(_*x-b*H)*M),m[e].add(D),m[t].add(D),m[r].add(D),T[e].add(U),T[t].add(U),T[r].add(U)}0===this.drawcalls.length&&this.addDrawCall(0,c.length,0);var z=this.drawcalls;for(r=0,i=z.length;r<i;++r){var k=z[r].start,N=z[r].count,O=z[r].index;for(e=k,t=k+N;e<t;e+=3)n=O+c[e],V(n,o=O+c[e+1],a=O+c[e+2])}var G=new THREE.Vector3,I=new THREE.Vector3,W=new THREE.Vector3,j=new THREE.Vector3;function X(e){W.fromArray(E,3*e),j.copy(W),h=m[e],G.copy(h),G.sub(W.multiplyScalar(W.dot(h))).normalize(),I.crossVectors(j,h),s=(l=I.dot(T[e]))<0?-1:1,d[4*e]=G.x,d[4*e+1]=G.y,d[4*e+2]=G.z,d[4*e+3]=s}for(r=0,i=z.length;r<i;++r){var k=z[r].start,N=z[r].count,O=z[r].index;for(e=k,t=k+N;e<t;e+=3)n=O+c[e],o=O+c[e+1],a=O+c[e+2],X(n),X(o),X(a)}},computeOffsets:function(e){void 0===e&&(e=65535);for(var t=this.attributes.index.array,r=this.attributes.position.array,i=t.length/3,n=new Uint16Array(t.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),E=new Int32Array(r.length),f=new Int32Array(r.length),p=0;p<r.length;p++)E[p]=-1,f[p]=-1;for(var d=0;d<i;d++){c=0;for(var m=0;m<3;m++){var T=t[3*d+m];-1==E[T]?(u[2*m]=T,u[2*m+1]=-1,c++):E[T]<h.index?(u[2*m]=T,u[2*m+1]=-1,l++):(u[2*m]=T,u[2*m+1]=E[T])}if(a+c>h.index+e){var $={start:o,count:0,index:a};s.push($),h=$;for(var g=0;g<6;g+=2){var v=u[g+1];v>-1&&v<h.index&&(u[g+1]=-1)}}for(var g=0;g<6;g+=2){var T=u[g],v=u[g+1];-1===v&&(v=a++),E[T]=v,f[v]=T,n[o++]=v-h.index,h.count++}}return this.reorderBuffers(n,f,a),this.offsets=s,this.drawcalls=s,s},merge:function(e,t){if(e instanceof THREE.BufferGeometry==!1){THREE.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0);var r=this.attributes;for(var i in r)if(void 0!==e.attributes[i])for(var n=r[i].array,o=e.attributes[i],a=o.array,s=o.itemSize,h=0,l=s*t;h<a.length;h++,l++)n[l]=a[h];return this},normalizeNormals:function(){for(var e,t,r,i,n=this.attributes.normal.array,o=0,a=n.length;o<a;o+=3)e=n[o],i=1/Math.sqrt(e*e+(t=n[o+1])*t+(r=n[o+2])*r),n[o]*=i,n[o+1]*=i,n[o+2]*=i},reorderBuffers:function(e,t,r){var i={};for(var n in this.attributes)if("index"!=n){var o=this.attributes[n].array;i[n]=new o.constructor(this.attributes[n].itemSize*r)}for(var a=0;a<r;a++){var s=t[a];for(var n in this.attributes)if("index"!=n)for(var h=this.attributes[n].array,l=this.attributes[n].itemSize,c=i[n],u=0;u<l;u++)c[a*l+u]=h[s*l+u]}for(var n in this.attributes.index.array=e,this.attributes)"index"!=n&&(this.attributes[n].array=i[n],this.attributes[n].numItems=this.attributes[n].itemSize*r)},toJSON:function(){var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},t=this.attributes,r=this.offsets,i=this.boundingSphere;for(var n in t){var o=t[n],a=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:a}}return r.length>0&&(e.data.offsets=JSON.parse(JSON.stringify(r))),null!==i&&(e.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),e},clone:function(){var e=new THREE.BufferGeometry;for(var t in this.attributes){var r=this.attributes[t];e.addAttribute(t,r.clone())}for(var i=0,n=this.offsets.length;i<n;i++){var o=this.offsets[i];e.offsets.push({start:o.start,index:o.index,count:o.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=new THREE.Matrix3().getNormalMatrix(e),r=0,i=this.vertices.length;r<i;r++)this.vertices[r].applyMatrix4(e);for(var r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(t).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0},fromBufferGeometry:function(e){for(var t=this,r=e.attributes,i=r.position.array,n=void 0!==r.index?r.index.array:void 0,o=void 0!==r.normal?r.normal.array:void 0,a=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,h=[],l=[],c=0,u=0;c<i.length;c+=3,u+=2)t.vertices.push(new THREE.Vector3(i[c],i[c+1],i[c+2])),void 0!==o&&h.push(new THREE.Vector3(o[c],o[c+1],o[c+2])),void 0!==a&&t.colors.push(new THREE.Color(a[c],a[c+1],a[c+2])),void 0!==s&&l.push(new THREE.Vector2(s[u],s[u+1]));var E=function(e,r,i){var n=void 0!==o?[h[e].clone(),h[r].clone(),h[i].clone()]:[],c=void 0!==a?[t.colors[e].clone(),t.colors[r].clone(),t.colors[i].clone()]:[];t.faces.push(new THREE.Face3(e,r,i,n,c)),void 0!==s&&t.faceVertexUvs[0].push([l[e].clone(),l[r].clone(),l[i].clone()])};if(void 0!==n){var f=e.drawcalls;if(f.length>0)for(var c=0;c<f.length;c++)for(var p=f[c],d=p.start,m=p.count,T=p.index,u=d,$=d+m;u<$;u+=3)E(T+n[u],T+n[u+1],T+n[u+2]);else for(var c=0;c<n.length;c+=3)E(n[c],n[c+1],n[c+2])}else for(var c=0;c<i.length/3;c+=3)E(c,c+1,c+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.applyMatrix(new THREE.Matrix4().setPosition(e)),e},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];e.subVectors(s,a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i,n,o,a;for(t=0,a=Array(this.vertices.length),r=this.vertices.length;t<r;t++)a[t]=new THREE.Vector3;if(e){var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3;for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],s=this.vertices[o.a],h=this.vertices[o.b],l=this.vertices[o.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),a[o.a].add(c),a[o.b].add(c),a[o.c].add(c)}else for(i=0,n=this.faces.length;i<n;i++)a[(o=this.faces[i]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(t=0,r=this.vertices.length;t<r;t++)a[t].normalize();for(i=0,n=this.faces.length;i<n;i++)(o=this.faces[i]).vertexNormals[0]=a[o.a].clone(),o.vertexNormals[1]=a[o.b].clone(),o.vertexNormals[2]=a[o.c].clone()},computeMorphNormals:function(){for(i=0,n=this.faces.length;i<n;i++)for((o=this.faces[i]).__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),t=0,r=o.vertexNormals.length;t<r;t++)o.__originalVertexNormals[t]?o.__originalVertexNormals[t].copy(o.vertexNormals[t]):o.__originalVertexNormals[t]=o.vertexNormals[t].clone();var e=new THREE.Geometry;for(t=0,e.faces=this.faces,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var t,r,i,n,o,a,s,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(a),l.push(s)}var c=this.morphNormals[t];for(e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals(),i=0,n=this.faces.length;i<n;i++)o=this.faces[i],a=c.faceNormals[i],s=c.vertexNormals[i],a.copy(o.normal),s.a.copy(o.vertexNormals[0]),s.b.copy(o.vertexNormals[1]),s.c.copy(o.vertexNormals[2])}for(i=0,n=this.faces.length;i<n;i++)(o=this.faces[i]).normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){var e,t,r,i,n,o,a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_,b,w,S=[],M=[],C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,F=new THREE.Vector3,P=new THREE.Vector3;for(r=0,i=this.vertices.length;r<i;r++)S[r]=new THREE.Vector3,M[r]=new THREE.Vector3;function B(e,t,r,i,n,o,a){h=e.vertices[t],l=e.vertices[r],c=e.vertices[i],u=s[n],E=s[o],f=s[a],p=l.x-h.x,d=c.x-h.x,m=l.y-h.y,T=c.y-h.y,$=l.z-h.z,g=c.z-h.z,v=E.x-u.x,R=f.x-u.x,y=E.y-u.y,x=1/(v*(H=f.y-u.y)-R*y),C.set((H*p-y*d)*x,(H*m-y*T)*x,(H*$-y*g)*x),A.set((v*d-R*p)*x,(v*T-R*m)*x,(v*g-R*$)*x),S[t].add(C),S[r].add(C),S[i].add(C),M[t].add(A),M[r].add(A),M[i].add(A)}for(e=0,t=this.faces.length;e<t;e++)a=this.faces[e],s=this.faceVertexUvs[0][e],B(this,a.a,a.b,a.c,0,1,2);var D=["a","b","c","d"];for(e=0,t=this.faces.length;e<t;e++)for(n=0,a=this.faces[e];n<Math.min(a.vertexNormals.length,3);n++)P.copy(a.vertexNormals[n]),_=S[o=a[D[n]]],L.copy(_),L.sub(P.multiplyScalar(P.dot(_))).normalize(),F.crossVectors(a.vertexNormals[n],_),w=(b=F.dot(M[o]))<0?-1:1,a.vertexTangents[n]=new THREE.Vector4(L.x,L.y,L.z,w);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;r<i;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e instanceof THREE.Geometry==!1){THREE.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var i,n=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,h=e.faces,l=this.faceVertexUvs[0],c=e.faceVertexUvs[0];void 0===r&&(r=0),void 0!==t&&(i=new THREE.Matrix3().getNormalMatrix(t));for(var u=0,E=a.length;u<E;u++){var f=a[u].clone();void 0!==t&&f.applyMatrix4(t),o.push(f)}for(u=0,E=h.length;u<E;u++){var p,d,m,T=h[u],$=T.vertexNormals,g=T.vertexColors;(p=new THREE.Face3(T.a+n,T.b+n,T.c+n)).normal.copy(T.normal),void 0!==i&&p.normal.applyMatrix3(i).normalize();for(var v=0,R=$.length;v<R;v++)d=$[v].clone(),void 0!==i&&d.applyMatrix3(i).normalize(),p.vertexNormals.push(d);p.color.copy(T.color);for(var v=0,R=g.length;v<R;v++)m=g[v],p.vertexColors.push(m.clone());p.materialIndex=T.materialIndex+r,s.push(p)}for(u=0,E=c.length;u<E;u++){var y=c[u],H=[];if(void 0!==y){for(var v=0,R=y.length;v<R;v++)H.push(y[v].clone());l.push(H)}}},mergeMesh:function(e){if(e instanceof THREE.Mesh==!1){THREE.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e,t,r,i,n,o,a,s,h={},l=[],c=[];for(r=0,i=this.vertices.length;r<i;r++)void 0===h[t=Math.round(1e4*(e=this.vertices[r]).x)+"_"+Math.round(1e4*e.y)+"_"+Math.round(1e4*e.z)]?(h[t]=r,l.push(this.vertices[r]),c[r]=l.length-1):c[r]=c[h[t]];var u=[];for(r=0,i=this.faces.length;r<i;r++){(n=this.faces[r]).a=c[n.a],n.b=c[n.b],n.c=c[n.c],o=[n.a,n.b,n.c];for(var E=-1,f=0;f<3;f++)if(o[f]==o[(f+1)%3]){E=f,u.push(r);break}}for(r=u.length-1;r>=0;r--){var p=u[r];for(this.faces.splice(p,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(p,1)}var d=this.vertices.length-l.length;return this.vertices=l,d},toJSON:function(){var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};if(""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}for(var i=[],n=0;n<this.vertices.length;n++){var o=this.vertices[n];i.push(o.x,o.y,o.z)}for(var a=[],s=[],h={},l=[],c={},u=[],E={},n=0;n<this.faces.length;n++){var f=this.faces[n],p=void 0!==this.faceVertexUvs[0][n],d=f.normal.length()>0,m=f.vertexNormals.length>0,T=1!==f.color.r||1!==f.color.g||1!==f.color.b,$=f.vertexColors.length>0,g=0;if(g=H(g,0,0),g=H(g,1,!1),g=H(g,2,!1),g=H(g,3,p),g=H(g,4,d),g=H(g,5,m),g=H(g,6,T),g=H(g,7,$),a.push(g),a.push(f.a,f.b,f.c),p){var v=this.faceVertexUvs[0][n];a.push(b(v[0]),b(v[1]),b(v[2]))}if(d&&a.push(x(f.normal)),m){var R=f.vertexNormals;a.push(x(R[0]),x(R[1]),x(R[2]))}if(T&&a.push(_(f.color)),$){var y=f.vertexColors;a.push(_(y[0]),_(y[1]),_(y[2]))}}function H(e,t,r){return r?e|1<<t:e&~(1<<t)}function x(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==h[t]||(h[t]=s.length/3,s.push(e.x,e.y,e.z)),h[t]}function _(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==c[t]||(c[t]=l.length,l.push(e.getHex())),c[t]}function b(e){var t=e.x.toString()+e.y.toString();return void 0!==E[t]||(E[t]=u.length/2,u.push(e.x,e.y)),E[t]}return e.data={},e.data.vertices=i,e.data.normals=s,l.length>0&&(e.data.colors=l),u.length>0&&(e.data.uvs=[u]),e.data.faces=a,e},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;r<i;r++)e.vertices.push(t[r].clone());for(var n=this.faces,r=0,i=n.length;r<i;r++)e.faces.push(n[r].clone());for(var r=0,i=this.faceVertexUvs.length;r<i;r++){var o=this.faceVertexUvs[r];void 0===e.faceVertexUvs[r]&&(e.faceVertexUvs[r]=[]);for(var a=0,s=o.length;a<s;a++){for(var h=o[a],l=[],c=0,u=h.length;c<u;c++){var E=h[c];l.push(E.clone())}e.faceVertexUvs[r].push(l)}}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this),this.type="CubeCamera";var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,i,r),r.activeCubeFace=1,e.render(t,n,r),r.activeCubeFace=2,e.render(t,o,r),r.activeCubeFace=3,e.render(t,a,r),r.activeCubeFace=4,e.render(t,s,r),r.generateMipmaps=l,r.activeCubeFace=5,e.render(t,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-e,r+e,i+t,i-t,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.zoom=this.zoom,e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e.projectionMatrix.copy(this.projectionMatrix),e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,r=Math.tan(THREE.Math.degToRad(.5*e))*this.near,i=-r,n=t*i,o=Math.abs(t*r-n),a=Math.abs(r-i);this.projectionMatrix.makeFrustum(n+this.x*o/this.fullWidth,n+(this.x+this.width)*o/this.fullWidth,r-(this.y+this.height)*a/this.fullHeight,r-this.y*a/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.zoom=this.zoom,e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e.projectionMatrix.copy(this.projectionMatrix),e},THREE.Light=function(e){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e),this.type="AmbientLight"},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.type="AreaLight",this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight.prototype.constructor=THREE.AreaLight,THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.type="DirectionalLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraLeft=this.shadowCameraLeft,e.shadowCameraRight=this.shadowCameraRight,e.shadowCameraTop=this.shadowCameraTop,e.shadowCameraBottom=this.shadowCameraBottom,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e.shadowCascade=this.shadowCascade,e.shadowCascadeOffset.copy(this.shadowCascadeOffset),e.shadowCascadeCount=this.shadowCascadeCount,e.shadowCascadeBias=this.shadowCascadeBias.slice(0),e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.type="HemisphereLight",this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r,i){THREE.Light.call(this,e),this.type="PointLight",this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.decay=void 0!==i?i:1},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e.decay=this.decay,e},THREE.SpotLight=function(e,t,r,i,n,o){THREE.Light.call(this,e),this.type="SpotLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.decay=void 0!==o?o:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.decay=this.decay,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraFov=this.shadowCameraFov,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e},THREE.Cache={files:{},add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";e.total?t+=(100*e.loaded/e.total).toFixed(0)+"%":t+=(e.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;t<r;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){var r=this;function i(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function n(e,n,o,a,s,h,l){var c,u=t+o,E=THREE.Loader.Handlers.get(u);if(null!==E?c=E.load(u):(c=new THREE.Texture,(E=r.imageLoader).crossOrigin=r.crossOrigin,E.load(u,function(e){if(!1===THREE.Math.isPowerOfTwo(e.width)||!1===THREE.Math.isPowerOfTwo(e.height)){var t=i(e.width),r=i(e.height),n=document.createElement("canvas");n.width=t,n.height=r,n.getContext("2d").drawImage(e,0,0,t,r),c.image=n}else c.image=e;c.needsUpdate=!0})),c.sourceFile=o,a&&(c.repeat.set(a[0],a[1]),1!==a[0]&&(c.wrapS=THREE.RepeatWrapping),1!==a[1]&&(c.wrapT=THREE.RepeatWrapping)),s&&c.offset.set(s[0],s[1]),h){var f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==f[h[0]]&&(c.wrapS=f[h[0]]),void 0!==f[h[1]]&&(c.wrapT=f[h[1]])}l&&(c.anisotropy=l),e[n]=c}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(s.blending=THREE[e.blending]),void 0!==e.transparent&&(s.transparent=e.transparent),void 0!==e.opacity&&e.opacity<1&&(s.transparent=!0),void 0!==e.depthTest&&(s.depthTest=e.depthTest),void 0!==e.depthWrite&&(s.depthWrite=e.depthWrite),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.flipSided&&(s.side=THREE.BackSide),void 0!==e.doubleSided&&(s.side=THREE.DoubleSide),void 0!==e.wireframe&&(s.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?s.vertexColors=THREE.FaceColors:e.vertexColors&&(s.vertexColors=THREE.VertexColors)),e.colorDiffuse?s.color=o(e.colorDiffuse):e.DbgColor&&(s.color=e.DbgColor),e.colorSpecular&&(s.specular=o(e.colorSpecular)),e.colorEmissive&&(s.emissive=o(e.colorEmissive)),void 0!==e.transparency&&(console.warn("THREE.Loader: transparency has been renamed to opacity"),e.opacity=e.transparency),void 0!==e.opacity&&(s.opacity=e.opacity),e.specularCoef&&(s.shininess=e.specularCoef),e.mapDiffuse&&t&&n(s,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&n(s,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&n(s,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&n(s,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&n(s,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapAlpha&&t&&n(s,"alphaMap",e.mapAlpha,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy),e.mapBumpScale&&(s.bumpScale=e.mapBumpScale),e.mapNormalFactor&&(s.normalScale=new THREE.Vector2(e.mapNormalFactor,e.mapNormalFactor));var l=new THREE[a](s);return void 0!==e.DbgName&&(l.name=e.DbgName),l}},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=0,r=this.handlers.length;t<r;t+=2){var i=this.handlers[t],n=this.handlers[t+1];if(i.test(e))return n}return null}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var n=this,o=THREE.Cache.get(e);if(void 0!==o){t&&t(o);return}var a=new XMLHttpRequest;a.open("GET",e,!0),a.addEventListener("load",function(r){THREE.Cache.add(e,this.response),t&&t(this.response),n.manager.itemEnd(e)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(a.responseType=this.responseType),a.send(null),n.manager.itemStart(e)},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var n=this,o=THREE.Cache.get(e);if(void 0!==o){t(o);return}var a=document.createElement("img");return a.addEventListener("load",function(r){THREE.Cache.add(e,this),t&&t(this),n.manager.itemEnd(e)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.src=e,n.manager.itemStart(e),a},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE){if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText),h=s.metadata;if(void 0!==h){if("object"===h.type){THREE.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===h.type){THREE.error("THREE.JSONLoader: "+t+" seems to be a Scene. Use THREE.SceneLoader instead.");return}}var l=e.parse(s,i);r(l.geometry,l.materials)}else THREE.error("THREE.JSONLoader: "+t+" seems to be unreachable or the file is empty.");e.onLoadComplete()}else THREE.error("THREE.JSONLoader: Couldn't load "+t+" ("+o.status+")")}else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;if(function t(i){function n(e,t){return e&1<<t}var o,a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_,b,w,S,M,C,A,L,F,P,B,D,U,V,z=e.faces,k=e.vertices,N=e.normals,O=e.colors,G=0;if(void 0!==e.uvs){for(E=0;E<e.uvs.length;E++)e.uvs[E].length&&G++;for(E=0;E<G;E++)r.faceVertexUvs[E]=[]}for(d=0,m=k.length;d<m;)(M=new THREE.Vector3).x=k[d++]*i,M.y=k[d++]*i,M.z=k[d++]*i,r.vertices.push(M);for(d=0,m=z.length;d<m;){if(y=1&(o=R=z[d++]),H=2&(a=R),x=8&(s=R),_=16&(h=R),b=32&(l=R),w=64&(c=R),S=128&(u=R),y){if((A=new THREE.Face3).a=z[d],A.b=z[d+1],A.c=z[d+3],(L=new THREE.Face3).a=z[d+1],L.b=z[d+2],L.c=z[d+3],d+=4,H&&(v=z[d++],A.materialIndex=v,L.materialIndex=v),p=r.faces.length,x)for(E=0;E<G;E++)for(f=0,B=e.uvs[E],r.faceVertexUvs[E][p]=[],r.faceVertexUvs[E][p+1]=[];f<4;f++)U=B[2*(g=z[d++])],V=B[2*g+1],D=new THREE.Vector2(U,V),2!==f&&r.faceVertexUvs[E][p].push(D),0!==f&&r.faceVertexUvs[E][p+1].push(D);if(_&&($=3*z[d++],A.normal.set(N[$++],N[$++],N[$]),L.normal.copy(A.normal)),b)for(E=0;E<4;E++)$=3*z[d++],P=new THREE.Vector3(N[$++],N[$++],N[$]),2!==E&&A.vertexNormals.push(P),0!==E&&L.vertexNormals.push(P);if(w&&(F=O[T=z[d++]],A.color.setHex(F),L.color.setHex(F)),S)for(E=0;E<4;E++)F=O[T=z[d++]],2!==E&&A.vertexColors.push(new THREE.Color(F)),0!==E&&L.vertexColors.push(new THREE.Color(F));r.faces.push(A),r.faces.push(L)}else{if((C=new THREE.Face3).a=z[d++],C.b=z[d++],C.c=z[d++],H&&(v=z[d++],C.materialIndex=v),p=r.faces.length,x)for(E=0;E<G;E++)for(f=0,B=e.uvs[E],r.faceVertexUvs[E][p]=[];f<3;f++)U=B[2*(g=z[d++])],V=B[2*g+1],D=new THREE.Vector2(U,V),r.faceVertexUvs[E][p].push(D);if(_&&($=3*z[d++],C.normal.set(N[$++],N[$++],N[$])),b)for(E=0;E<3;E++)$=3*z[d++],P=new THREE.Vector3(N[$++],N[$++],N[$]),C.vertexNormals.push(P);if(w&&(T=z[d++],C.color.setHex(O[T])),S)for(E=0;E<3;E++)T=z[d++],C.vertexColors.push(new THREE.Color(O[T]));r.faces.push(C)}}}(i),function t(){var i=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var n=0,o=e.skinWeights.length;n<o;n+=i){var a=e.skinWeights[n],s=i>1?e.skinWeights[n+1]:0,h=i>2?e.skinWeights[n+2]:0,l=i>3?e.skinWeights[n+3]:0;r.skinWeights.push(new THREE.Vector4(a,s,h,l))}if(e.skinIndices)for(var n=0,o=e.skinIndices.length;n<o;n+=i){var c=e.skinIndices[n],u=i>1?e.skinIndices[n+1]:0,E=i>2?e.skinIndices[n+2]:0,f=i>3?e.skinIndices[n+3]:0;r.skinIndices.push(new THREE.Vector4(c,u,E,f))}r.bones=e.bones,r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&THREE.warn("THREE.JSONLoader: When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match."),r.animation=e.animation,r.animations=e.animations}(),function t(i){if(void 0!==e.morphTargets)for(n=0,o=e.morphTargets.length;n<o;n++)for(a=0,r.morphTargets[n]={},r.morphTargets[n].name=e.morphTargets[n].name,r.morphTargets[n].vertices=[],h=r.morphTargets[n].vertices,s=(l=e.morphTargets[n].vertices).length;a<s;a+=3){var n,o,a,s,h,l,c,u,E,f,p,d=new THREE.Vector3;d.x=l[a]*i,d.y=l[a+1]*i,d.z=l[a+2]*i,h.push(d)}if(void 0!==e.morphColors)for(n=0,o=e.morphColors.length;n<o;n++)for(c=0,r.morphColors[n]={},r.morphColors[n].name=e.morphColors[n].name,r.morphColors[n].colors=[],E=r.morphColors[n].colors,u=(f=e.morphColors[n].colors).length;c<u;c+=3)(p=new THREE.Color(16755200)).setRGB(f[c],f[c+1],f[c+2]),E.push(p)}(i),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:r};var n=this.initMaterials(e.materials,t);return this.needsTangents(n)&&r.computeTangents(),{geometry:r,materials:n}},THREE.LoadingManager=function(e,t,r){var i=this,n=0,o=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++},this.itemEnd=function(e){n++,void 0!==i.onProgress&&i.onProgress(e,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.data.attributes;for(var i in r){var n=r[i],o=new self[n.type](n.array);t.addAttribute(i,new THREE.BufferAttribute(o,n.itemSize))}var a=e.data.offsets;void 0!==a&&(t.offsets=JSON.parse(JSON.stringify(a)));var s=e.data.boundingSphere;if(void 0!==s){var h=new THREE.Vector3;void 0!==s.center&&h.fromArray(s.center),t.boundingSphere=new THREE.Sphere(h,s.radius)}return t}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.materials)for(var r=0,i=e.materials.length;r<i;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){n.parse(JSON.parse(e),t)},r,i)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var r=this.parseGeometries(e.geometries),i=this.parseImages(e.images,function(){void 0!==t&&t(a)}),n=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,n),a=this.parseObject(e.object,r,o);return(void 0===e.images||0===e.images.length)&&void 0!==t&&t(a),a},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=e.length;n<o;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e,t){var r={};if(void 0!==e)for(var i=function(e){return void 0===t[e]&&THREE.warn("THREE.ObjectLoader: Undefined texture",e),t[e]},n=new THREE.MaterialLoader,o=0,a=e.length;o<a;o++){var s=e[o],h=n.parse(s);h.uuid=s.uuid,void 0!==s.name&&(h.name=s.name),void 0!==s.map&&(h.map=i(s.map)),void 0!==s.bumpMap&&(h.bumpMap=i(s.bumpMap),s.bumpScale&&(h.bumpScale=new THREE.Vector2(s.bumpScale,s.bumpScale))),void 0!==s.alphaMap&&(h.alphaMap=i(s.alphaMap)),void 0!==s.envMap&&(h.envMap=i(s.envMap)),void 0!==s.normalMap&&(h.normalMap=i(s.normalMap),s.normalScale&&(h.normalScale=new THREE.Vector2(s.normalScale,s.normalScale))),void 0!==s.lightMap&&(h.lightMap=i(s.lightMap)),void 0!==s.specularMap&&(h.specularMap=i(s.specularMap)),r[s.uuid]=h}return r},parseImages:function(e,t){var r=this,i={};if(void 0!==e&&e.length>0){var n=new THREE.LoadingManager(t),o=new THREE.ImageLoader(n);o.setCrossOrigin(this.crossOrigin);for(var a=function(e){return r.manager.itemStart(e),o.load(e,function(){r.manager.itemEnd(e)})},s=0,h=e.length;s<h;s++){var l=e[s],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:r.texturePath+l.url;i[l.uuid]=a(c)}}return i},parseTextures:function(e,t){var r={};if(void 0!==e)for(var i=0,n=e.length;i<n;i++){var o=e[i];void 0===o.image&&THREE.warn('THREE.ObjectLoader: No "image" speficied for',o.uuid),void 0===t[o.image]&&THREE.warn("THREE.ObjectLoader: Undefined image",o.image);var a=new THREE.Texture(t[o.image]);a.needsUpdate=!0,a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),void 0!==o.repeat&&(a.repeat=new THREE.Vector2(o.repeat[0],o.repeat[1])),void 0!==o.minFilter&&(a.minFilter=THREE[o.minFilter]),void 0!==o.magFilter&&(a.magFilter=THREE[o.magFilter]),void 0!==o.anisotropy&&(a.anisotropy=o.anisotropy),o.wrap instanceof Array&&(a.wrapS=THREE[o.wrap[0]],a.wrapT=THREE[o.wrap[1]]),r[o.uuid]=a}return r},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var n,o=function(e){return void 0===r[e]&&THREE.warn("THREE.ObjectLoader: Undefined geometry",e),r[e]},a=function(e){return void 0===i[e]&&THREE.warn("THREE.ObjectLoader: Undefined material",e),i[e]};switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent,t.decay);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=new THREE.Mesh(o(t.geometry),a(t.material));break;case"Line":n=new THREE.Line(o(t.geometry),a(t.material),t.mode);break;case"PointCloud":n=new THREE.PointCloud(o(t.geometry),a(t.material));break;case"Sprite":n=new THREE.Sprite(a(t.material));break;case"Group":n=new THREE.Group;break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var s in t.children)n.add(this.parseObject(t.children[s],r,i));return n}}()},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin),n.load(e,function(e){var r=new THREE.Texture(e);r.needsUpdate=!0,void 0!==t&&t(r)},r,i)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(e,t,r,i){var n=this,o=new THREE.DataTexture,a=new THREE.XHRLoader;return a.setResponseType("arraybuffer"),a.load(e,function(e){var r=n._parser(e);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,o.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,o.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,o.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps),1===r.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.needsUpdate=!0,t&&t(o,r))},r,i),o}},THREE.CompressedTextureLoader=function(){this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(e,t,r){var i=this,n=[],o=new THREE.CompressedTexture;o.image=n;var a=new THREE.XHRLoader;if(a.setResponseType("arraybuffer"),e instanceof Array)for(var s=0,h=function(r){a.load(e[r],function(e){var a=i._parser(e,!0);n[r]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps},6===(s+=1)&&(1==a.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.format=a.format,o.needsUpdate=!0,t&&t(o))})},l=0,c=e.length;l<c;++l)h(l);else a.load(e,function(e){var r=i._parser(e,!0);if(r.isCubemap)for(var a=r.mipmaps.length/r.mipmapCount,s=0;s<a;s++){n[s]={mipmaps:[]};for(var h=0;h<r.mipmapCount;h++)n[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+h]),n[s].format=r.format,n[s].width=r.width,n[s].height=r.height}else o.image.width=r.width,o.image.height=r.height,o.mipmaps=r.mipmaps;1===r.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.format=r.format,o.needsUpdate=!0,t&&t(o)});return o}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(value){!0===value&&this.update(),this._needsUpdate=value},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r){THREE.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):"overdraw"==t?this[t]=Number(r):this[t]=r}}},toJSON:function(){var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return""!==this.name&&(e.name=this.name),this instanceof THREE.MeshBasicMaterial?(e.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshLambertMaterial?(e.color=this.color.getHex(),e.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(e.shading=this.shading),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshPhongMaterial?(e.color=this.color.getHex(),e.emissive=this.emissive.getHex(),e.specular=this.specular.getHex(),e.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(e.shading=this.shading),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.PointCloudMaterial?(e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending)):this instanceof THREE.ShaderMaterial?(e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(e.color=this.color.getHex()),this.opacity<1&&(e.opacity=this.opacity),!1!==this.transparent&&(e.transparent=this.transparent),!1!==this.wireframe&&(e.wireframe=this.wireframe),e},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.blendSrcAlpha=this.blendSrcAlpha,e.blendDstAlpha=this.blendDstAlpha,e.blendEquationAlpha=this.blendEquationAlpha,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.uuid=THREE.Math.generateUUID(),this.type="MeshFaceMaterial",this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},t=0,r=this.materials.length;t<r;t++)e.materials.push(this.materials[t].toJSON());return e},clone:function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e}},THREE.PointCloudMaterial=function(e){THREE.Material.call(this),this.type="PointCloudMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial,THREE.PointCloudMaterial.prototype.clone=function(){var e=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=function(e){return THREE.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ParticleSystemMaterial=function(e){return THREE.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,e),e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.Texture=function(e,t,r,i,n,o,a,s,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(value){!0===value&&this.update(),this._needsUpdate=value},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(e,t,r,i,n,o,a,s,h){t=void 0!==t?t:THREE.CubeReflectionMapping,THREE.Texture.call(this,e,t,r,i,n,o,a,s,h),this.images=e},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,THREE.CubeTexture.clone=function(e){return void 0===e&&(e=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,e),e.images=this.images,e},THREE.CompressedTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.VideoTexture=function(e,t,r,i,n,o,a,s,h){THREE.Texture.call(this,e,t,r,i,n,o,a,s,h),this.generateMipmaps=!1;var l=this,c=function(){requestAnimationFrame(c),e.readyState===e.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)};c()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.PointCloud=function(e,t){THREE.Object3D.call(this),this.type="PointCloud",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.PointCloudMaterial({color:16777215*Math.random()})},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.constructor=THREE.PointCloud,THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.PointCloud.threshold;if(e.getInverse(this.matrixWorld),t.copy(r.ray).applyMatrix4(e),null===o.boundingBox||!1!==t.isIntersectionBox(o.boundingBox)){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,l=function(e,o){var a=t.distanceToPoint(e);if(a<s){var h=t.closestPointToPoint(e);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:a,point:h.clone(),index:o,face:null,object:n})}};if(o instanceof THREE.BufferGeometry){var c=o.attributes,u=c.position.array;if(void 0!==c.index){var E=c.index.array,f=o.offsets;0===f.length&&(f=[{start:0,count:E.length,index:0}]);for(var p=0,d=f.length;p<d;++p)for(var m=f[p].start,T=f[p].count,$=f[p].index,g=m,v=m+T;g<v;g++){var R=$+E[g];h.fromArray(u,3*R),l(h,R)}}else for(var y=u.length/3,g=0;g<y;g++)h.set(u[3*g],u[3*g+1],u[3*g+2]),l(h,g)}else for(var H=this.geometry.vertices,g=0;g<H.length;g++)l(H[g],g)}}}(),THREE.PointCloud.prototype.clone=function(e){return void 0===e&&(e=new THREE.PointCloud(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){return THREE.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(e,t)},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.mode=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,a=o*o,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==i.ray.isIntersectionSphere(r)){e.getInverse(this.matrixWorld),t.copy(i.ray).applyMatrix4(e);var h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,E=this.mode===THREE.LineStrip?1:2;if(s instanceof THREE.BufferGeometry){var f=s.attributes;if(void 0!==f.index){var p=f.index.array,d=f.position.array,m=s.offsets;0===m.length&&(m=[{start:0,count:p.length,index:0}]);for(var T=0;T<m.length;T++)for(var $=m[T].start,g=m[T].count,v=m[T].index,R=$;R<$+g-1;R+=E){var y=v+p[R],H=v+p[R+1];h.fromArray(d,3*y),l.fromArray(d,3*H);var x=t.distanceSqToSegment(h,l,u,c);if(!(x>a)){var _=t.origin.distanceTo(u);_<i.near||_>i.far||n.push({distance:_,point:c.clone().applyMatrix4(this.matrixWorld),index:R,offsetIndex:T,face:null,faceIndex:null,object:this})}}}else for(var d=f.position.array,R=0;R<d.length/3-1;R+=E){h.fromArray(d,3*R),l.fromArray(d,3*R+3);var x=t.distanceSqToSegment(h,l,u,c);if(!(x>a)){var _=t.origin.distanceTo(u);_<i.near||_>i.far||n.push({distance:_,point:c.clone().applyMatrix4(this.matrixWorld),index:R,face:null,faceIndex:null,object:this})}}}else if(s instanceof THREE.Geometry)for(var b=s.vertices,w=b.length,R=0;R<w-1;R+=E){var x=t.distanceSqToSegment(b[R],b[R+1],u,c);if(!(x>a)){var _=t.origin.distanceTo(u);_<i.near||_>i.far||n.push({distance:_,point:c.clone().applyMatrix4(this.matrixWorld),index:R,face:null,faceIndex:null,object:this})}}}}}(),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.mode)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(THREE.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==a.ray.isIntersectionSphere(r)){if(e.getInverse(this.matrixWorld),t.copy(a.ray).applyMatrix4(e),null===h.boundingBox||!1!==t.isIntersectionBox(h.boundingBox)){if(h instanceof THREE.BufferGeometry){var l,c,u,E=this.material;if(void 0===E)return;var f=h.attributes,p=a.precision;if(void 0!==f.index){var d=f.index.array,m=f.position.array,T=h.offsets;0===T.length&&(T=[{start:0,count:d.length,index:0}]);for(var $=0,g=T.length;$<g;++$)for(var v=T[$].start,R=T[$].count,y=T[$].index,H=v,x=v+R;H<x;H+=3){if(l=y+d[H],c=y+d[H+1],u=y+d[H+2],i.fromArray(m,3*l),n.fromArray(m,3*c),o.fromArray(m,3*u),E.side===THREE.BackSide)var _=t.intersectTriangle(o,n,i,!0);else var _=t.intersectTriangle(i,n,o,E.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var b=a.ray.origin.distanceTo(_);b<p||b<a.near||b>a.far||s.push({distance:b,point:_,face:new THREE.Face3(l,c,u,THREE.Triangle.normal(i,n,o)),faceIndex:null,object:this})}}}else for(var m=f.position.array,H=0,w=0,x=m.length;H<x;H+=3,w+=9){if(l=H,c=H+1,u=H+2,i.fromArray(m,w),n.fromArray(m,w+3),o.fromArray(m,w+6),E.side===THREE.BackSide)var _=t.intersectTriangle(o,n,i,!0);else var _=t.intersectTriangle(i,n,o,E.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var b=a.ray.origin.distanceTo(_);b<p||b<a.near||b>a.far||s.push({distance:b,point:_,face:new THREE.Face3(l,c,u,THREE.Triangle.normal(i,n,o)),faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var l,c,u,S=this.material instanceof THREE.MeshFaceMaterial,M=!0===S?this.material.materials:null,p=a.precision,C=h.vertices,A=0,L=h.faces.length;A<L;A++){var F=h.faces[A],E=!0===S?M[F.materialIndex]:this.material;if(void 0!==E){if(l=C[F.a],c=C[F.b],u=C[F.c],!0===E.morphTargets){var P=h.morphTargets,B=this.morphTargetInfluences;i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var D=0,U=P.length;D<U;D++){var V=B[D];if(0!==V){var z=P[D].vertices;i.x+=(z[F.a].x-l.x)*V,i.y+=(z[F.a].y-l.y)*V,i.z+=(z[F.a].z-l.z)*V,n.x+=(z[F.b].x-c.x)*V,n.y+=(z[F.b].y-c.y)*V,n.z+=(z[F.b].z-c.z)*V,o.x+=(z[F.c].x-u.x)*V,o.y+=(z[F.c].y-u.y)*V,o.z+=(z[F.c].z-u.z)*V}}i.add(l),n.add(c),o.add(u),l=i,c=n,u=o}if(E.side===THREE.BackSide)var _=t.intersectTriangle(u,c,l,!0);else var _=t.intersectTriangle(l,c,u,E.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var b=a.ray.origin.distanceTo(_);b<p||b<a.near||b>a.far||s.push({distance:b,point:_,face:F,faceIndex:A,object:this})}}}}}}}(),THREE.Mesh.prototype.clone=function(e,t){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e,t),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.type="Bone",this.skin=e},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Skeleton=function(e,t,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var i;i=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{THREE.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var n=0,o=this.bones.length;n<o;n++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var r=new THREE.Matrix4;this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var e,t=0,r=this.bones.length;t<r;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(var t=0,r=this.bones.length;t<r;t++)(e=this.bones[t])&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},THREE.Skeleton.prototype.update=function(){var e=new THREE.Matrix4;return function(){for(var t=0,r=this.bones.length;t<r;t++){var i=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;e.multiplyMatrices(i,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var i,n,o,a,s,h=[];if(this.geometry&&void 0!==this.geometry.bones){for(var l=0,c=this.geometry.bones.length;l<c;++l)o=(n=this.geometry.bones[l]).pos,a=n.rotq,s=n.scl,i=new THREE.Bone(this),h.push(i),i.name=n.name,i.position.set(o[0],o[1],o[2]),i.quaternion.set(a[0],a[1],a[2],a[3]),void 0!==s?i.scale.set(s[0],s[1],s[2]):i.scale.set(1,1,1);for(var l=0,c=this.geometry.bones.length;l<c;++l)-1!==(n=this.geometry.bones[l]).parent?h[n.parent].add(h[l]):this.add(h[l])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(h,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();r!==1/0?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.type="MorphAnimMesh",this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)_?(\d+)/,n=0,o=e.morphTargets.length;n<o;n++){var a=e.morphTargets[n].name.match(i);if(a&&a.length>1){var s=a[1];r[s]||(r[s]={start:1/0,end:-1/0});var h=r[s];n<h.start&&(h.start=n),n>h.end&&(h.end=n),t||(t=s)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/t),this.time=0):THREE.warn("THREE.MorphAnimMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.interpolateTargets=function(e,t,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;n<o;n++)i[n]=0;e>-1&&(i[e]=1-r),t>-1&&(i[t]=r)},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;t<r&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(t,r)}}(),THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(this.objects.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);this.objects[0].object.visible=!0;for(var n=1,o=this.objects.length;n<o;n++)if(i>=this.objects[n].distance)this.objects[n-1].object.visible=!1,this.objects[n].object.visible=!0;else break;for(;n<o;n++)this.objects[n].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;t<r;t++){var i=this.objects[t].object.clone();i.visible=0===t,e.addLevel(i,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),i=new THREE.BufferGeometry;return i.addAttribute("index",new THREE.BufferAttribute(e,1)),i.addAttribute("position",new THREE.BufferAttribute(t,3)),i.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(e){THREE.Object3D.call(this),this.type="Sprite",this.geometry=i,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.distanceToPoint(e);!(i>this.scale.x)&&r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(e,t,r,i,n,o){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=-(2*this.positionScreen.x),n=-(2*this.positionScreen.y);for(t=0;t<r;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=(e.wantedRotation-e.rotation)*.25},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n	float distance = dot( planeNormal, point-pointOnPlane );\n	return point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n	if ( decayExponent > 0.0 ) {\n	  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n	}\n	return 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n	return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n	return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack += ambientLightColor;\n\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n\n#endif\n",THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="#ifndef FLAT_SHADED\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n	#endif\n\n#else\n\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			totalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n			// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			totalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		totalDiffuseLight += hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		totalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\n#ifdef METAL\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n	// Per-Pixel Tangent Space Normal Mapping\n	// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor.xyz = inputToLinear( texelColor.xyz );\n\n	diffuseColor *= texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	vColor.xyz = inputToLinear( color.xyz );\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="\n	outgoingLight = linearToOutput( outgoingLight );\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// Transforming Normal Vectors with the Inverse Transformation\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	envColor.xyz = inputToLinear( envColor.xyz );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n		fogFactor = whiteCompliment( fogFactor );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n	// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n	// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	outgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n	shadowColor = inputToLinear( shadowColor );\n\n	outgoingLight = outgoingLight * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(e){for(var t={},r=0;r<e.length;r++){var i=this.clone(e[r]);for(var n in i)t[n]=i[n]}return t},clone:function(e){var t={};for(var r in e)for(var i in t[r]={},e[r]){var n=e[r][i];n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix4||n instanceof THREE.Texture?t[r][i]=n.clone():n instanceof Array?t[r][i]=n.slice():t[r][i]=n}return t}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			outgoingLight += diffuseColor.rgb * vLightFront + emissive;","		else","			outgoingLight += diffuseColor.rgb * vLightBack + emissive;","	#else","		outgoingLight += diffuseColor.rgb * vLightFront + emissive;","	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","	vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},THREE.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",THREE.REVISION);var t,r=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),i=void 0!==e.context?e.context:null,n=1,o=void 0!==e.precision?e.precision:"highp",a=void 0!==e.alpha&&e.alpha,s=void 0===e.depth||e.depth,h=void 0===e.stencil||e.stencil,l=void 0!==e.antialias&&e.antialias,c=void 0===e.premultipliedAlpha||e.premultipliedAlpha,u=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,E=void 0!==e.logarithmicDepthBuffer&&e.logarithmicDepthBuffer,f=new THREE.Color(0),p=0,d=[],m={},T=[],$=[],g=[],v=[],R=[];this.domElement=r,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var y=this,H=[],x=null,_=null,b=-1,w="",S=null,M=0,C=0,A=0,L=r.width,F=r.height,P=0,B=0,D=new THREE.Frustum,U=new THREE.Matrix4,V=new THREE.Vector3,z=new THREE.Vector3,k=!0,N={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var O={alpha:a,depth:s,stencil:h,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:u};if(t=i||r.getContext("webgl",O)||r.getContext("experimental-webgl",O),null===t){if(null!==r.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}r.addEventListener("webglcontextlost",function(e){e.preventDefault(),q(),X(),m={}},!1)}catch(G){THREE.error("THREE.WebGLRenderer: "+G)}var I=new THREE.WebGLState(t,e5);void 0===t.getShaderPrecisionFormat&&(t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var W=new THREE.WebGLExtensions(t);W.get("OES_texture_float"),W.get("OES_texture_float_linear"),W.get("OES_texture_half_float"),W.get("OES_texture_half_float_linear"),W.get("OES_standard_derivatives"),E&&W.get("EXT_frag_depth");var j=function(e,r,i,n){!0===c&&(e*=n,r*=n,i*=n),t.clearColor(e,r,i,n)},X=function(){t.clearColor(0,0,0,1),t.clearDepth(1),t.clearStencil(0),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.frontFace(t.CCW),t.cullFace(t.BACK),t.enable(t.CULL_FACE),t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.viewport(C,A,L,F),j(f.r,f.g,f.b,p)},q=function(){x=null,S=null,w="",b=-1,k=!0,I.reset()};X(),this.context=t,this.state=I;var Y,K=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),Q=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Z=t.getParameter(t.MAX_TEXTURE_SIZE),J=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),ee=Q>0,et=ee&&W.get("OES_texture_float"),er=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT),ei=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT),en=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT),eo=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT),ea=function(){if(void 0!==Y)return Y;if(Y=[],W.get("WEBGL_compressed_texture_pvrtc")||W.get("WEBGL_compressed_texture_s3tc"))for(var e=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),r=0;r<e.length;r++)Y.push(e[r]);return Y},es=er.precision>0&&en.precision>0,eh=ei.precision>0&&eo.precision>0;"highp"!==o||es||(eh?(o="mediump",THREE.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(o="lowp",THREE.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==o||eh||(o="lowp",THREE.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var el,ec=new THREE.ShadowMapPlugin(this,d,m,T),eu=new THREE.SpritePlugin(this,v),eE=new THREE.LensFlarePlugin(this,R);function ef(e){e.__webglVertexBuffer=t.createBuffer(),e.__webglNormalBuffer=t.createBuffer(),e.__webglTangentBuffer=t.createBuffer(),e.__webglColorBuffer=t.createBuffer(),e.__webglUVBuffer=t.createBuffer(),e.__webglUV2Buffer=t.createBuffer(),e.__webglSkinIndicesBuffer=t.createBuffer(),e.__webglSkinWeightsBuffer=t.createBuffer(),e.__webglFaceBuffer=t.createBuffer(),e.__webglLineBuffer=t.createBuffer();var r=e.numMorphTargets;if(r){e.__webglMorphTargetsBuffers=[];for(var i=0,n=r;i<n;i++)e.__webglMorphTargetsBuffers.push(t.createBuffer())}var o=e.numMorphNormals;if(o){e.__webglMorphNormalsBuffers=[];for(var i=0,n=o;i<n;i++)e.__webglMorphNormalsBuffers.push(t.createBuffer())}y.info.memory.geometries++}this.getContext=function(){return t},this.forceContextLoss=function(){W.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return ee},this.supportsFloatTextures=function(){return W.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return W.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return W.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return W.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return W.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return W.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){if(void 0!==el)return el;var e=W.get("EXT_texture_filter_anisotropic");return el=null!==e?t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},this.getPrecision=function(){return o},this.getPixelRatio=function(){return n},this.setPixelRatio=function(e){n=e},this.setSize=function(e,t,i){r.width=e*n,r.height=t*n,!1!==i&&(r.style.width=e+"px",r.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,r,i,o){C=e*n,A=r*n,L=i*n,F=o*n,t.viewport(C,A,L,F)},this.setScissor=function(e,r,i,o){t.scissor(e*n,r*n,i*n,o*n)},this.enableScissorTest=function(e){e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)},this.getClearColor=function(){return f},this.setClearColor=function(e,t){f.set(e),p=void 0!==t?t:1,j(f.r,f.g,f.b,p)},this.getClearAlpha=function(){return p},this.setClearAlpha=function(e){p=e,j(f.r,f.g,f.b,p)},this.clear=function(e,r,i){var n=0;(void 0===e||e)&&(n|=t.COLOR_BUFFER_BIT),(void 0===r||r)&&(n|=t.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=t.STENCIL_BUFFER_BIT),t.clear(n)},this.clearColor=function(){t.clear(t.COLOR_BUFFER_BIT)},this.clearDepth=function(){t.clear(t.DEPTH_BUFFER_BIT)},this.clearStencil=function(){t.clear(t.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.resetGLState=q;var ep=function(e){e.target.traverse(function(e){var t;e.removeEventListener("remove",ep),(t=e)instanceof THREE.Mesh||t instanceof THREE.PointCloud||t instanceof THREE.Line?delete m[t.id]:(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&function e(t,r){for(var i=t.length-1;i>=0;i--)t[i].object===r&&t.splice(i,1)}(T,t),delete t.__webglInit,delete t._modelViewMatrix,delete t._normalMatrix,delete t.__webglActive})},ed=function(e){var t=e.target;t.removeEventListener("dispose",ed),ev(t)},em=function(e){var t=e.target;t.removeEventListener("dispose",em),eR(t),y.info.memory.textures--},eT=function(e){var t=e.target;t.removeEventListener("dispose",eT),ey(t),y.info.memory.textures--},e$=function(e){var t=e.target;t.removeEventListener("dispose",e$),eH(t)},eg=function(e){for(var r=["__webglVertexBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglLineDistanceBuffer"],i=0,n=r.length;i<n;i++){var o=r[i];void 0!==e[o]&&(t.deleteBuffer(e[o]),delete e[o])}if(void 0!==e.__webglCustomAttributesList){for(var o in e.__webglCustomAttributesList)t.deleteBuffer(e.__webglCustomAttributesList[o].buffer);delete e.__webglCustomAttributesList}y.info.memory.geometries--},ev=function(e){if(delete e.__webglInit,e instanceof THREE.BufferGeometry){for(var r in e.attributes){var i=e.attributes[r];void 0!==i.buffer&&(t.deleteBuffer(i.buffer),delete i.buffer)}y.info.memory.geometries--}else{var n=e0[e.id];if(void 0!==n){for(var o=0,a=n.length;o<a;o++){var s=n[o];if(void 0!==s.numMorphTargets){for(var h=0,l=s.numMorphTargets;h<l;h++)t.deleteBuffer(s.__webglMorphTargetsBuffers[h]);delete s.__webglMorphTargetsBuffers}if(void 0!==s.numMorphNormals){for(var h=0,l=s.numMorphNormals;h<l;h++)t.deleteBuffer(s.__webglMorphNormalsBuffers[h]);delete s.__webglMorphNormalsBuffers}eg(s)}delete e0[e.id]}else eg(e)}w=""},eR=function(e){if(e.image&&e.image.__webglTextureCube)t.deleteTexture(e.image.__webglTextureCube),delete e.image.__webglTextureCube;else{if(void 0===e.__webglInit)return;t.deleteTexture(e.__webglTexture),delete e.__webglTexture,delete e.__webglInit}},ey=function(e){if(e&&void 0!==e.__webglTexture){if(t.deleteTexture(e.__webglTexture),delete e.__webglTexture,e instanceof THREE.WebGLRenderTargetCube)for(var r=0;r<6;r++)t.deleteFramebuffer(e.__webglFramebuffer[r]),t.deleteRenderbuffer(e.__webglRenderbuffer[r]);else t.deleteFramebuffer(e.__webglFramebuffer),t.deleteRenderbuffer(e.__webglRenderbuffer);delete e.__webglFramebuffer,delete e.__webglRenderbuffer}},eH=function(e){var r,i,n,o=e.program.program;if(void 0!==o){e.program=void 0;var a=!1;for(r=0,i=H.length;r<i;r++)if((n=H[r]).program===o){n.usedTimes--,0===n.usedTimes&&(a=!0);break}if(!0===a){var s=[];for(r=0,i=H.length;r<i;r++)(n=H[r]).program!==o&&s.push(n);H=s,t.deleteProgram(o),y.info.memory.programs--}}};function ex(e){var r=e.geometry,i=e.material,n=r.vertices.length;if(i.attributes)for(var o in void 0===r.__webglCustomAttributesList&&(r.__webglCustomAttributesList=[]),i.attributes){var a=i.attributes[o];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var s=1;"v2"===a.type?s=2:"v3"===a.type?s=3:"v4"===a.type?s=4:"c"===a.type&&(s=3),a.size=s,a.array=new Float32Array(n*s),a.buffer=t.createBuffer(),a.buffer.belongsToAttribute=o,a.needsUpdate=!0}r.__webglCustomAttributesList.push(a)}}function e_(e,r){var i=r.geometry,n=e.faces3,o=3*n.length,a=1*n.length,s=3*n.length,h=e8(r,e);e.__vertexArray=new Float32Array(3*o),e.__normalArray=new Float32Array(3*o),e.__colorArray=new Float32Array(3*o),e.__uvArray=new Float32Array(2*o),i.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*o)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*o)),r.geometry.skinWeights.length&&r.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*o),e.__skinWeightArray=new Float32Array(4*o));var l=null!==W.get("OES_element_index_uint")&&a>21845?Uint32Array:Uint16Array;e.__typeArray=l,e.__faceArray=new l(3*a),e.__lineArray=new l(2*s);var c=e.numMorphTargets;if(c){e.__morphTargetsArrays=[];for(var u=0,E=c;u<E;u++)e.__morphTargetsArrays.push(new Float32Array(3*o))}var f=e.numMorphNormals;if(f){e.__morphNormalsArrays=[];for(var u=0,E=f;u<E;u++)e.__morphNormalsArrays.push(new Float32Array(3*o))}if(e.__webglFaceCount=3*a,e.__webglLineCount=2*s,h.attributes)for(var p in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),h.attributes){var d=h.attributes[p],m={};for(var T in d)m[T]=d[T];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var $=1;"v2"===m.type?$=2:"v3"===m.type?$=3:"v4"===m.type?$=4:"c"===m.type&&($=3),m.size=$,m.array=new Float32Array(o*$),m.buffer=t.createBuffer(),m.buffer.belongsToAttribute=p,d.needsUpdate=!0,m.__original=d}e.__webglCustomAttributesList.push(m)}e.__inittedArrays=!0}function e8(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function eb(e,r,i,n,o){if(e.__inittedArrays){var a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_,b,w,S,M,C,A,L,F,P,B,D,U,V,z,k,N,O,G,I,W,j,X,q,Y,K=(a=o)instanceof THREE.MeshPhongMaterial==!1&&a.shading===THREE.FlatShading,Q=0,Z=0,J=0,ee=0,et=0,er=0,ei=0,en=0,eo=0,ea=0,es=0,eh=0,el=e.__vertexArray,ec=e.__uvArray,eu=e.__uv2Array,eE=e.__normalArray,ef=e.__tangentArray,ep=e.__colorArray,ed=e.__skinIndexArray,em=e.__skinWeightArray,eT=e.__morphTargetsArrays,e$=e.__morphNormalsArrays,eg=e.__webglCustomAttributesList,ev=e.__faceArray,eR=e.__lineArray,ey=r.geometry,eH=ey.verticesNeedUpdate,ex=ey.elementsNeedUpdate,e_=ey.uvsNeedUpdate,e8=ey.normalsNeedUpdate,eb=ey.tangentsNeedUpdate,ew=ey.colorsNeedUpdate,eS=ey.morphTargetsNeedUpdate,eM=ey.vertices,eC=e.faces3,eA=ey.faces,eL=ey.faceVertexUvs[0],e1=ey.faceVertexUvs[1],eF=ey.skinIndices,e0=ey.skinWeights,eP=ey.morphTargets,eB=ey.morphNormals;if(eH){for(h=0,l=eC.length;h<l;h++)g=eM[(u=eA[eC[h]]).a],v=eM[u.b],R=eM[u.c],el[Z]=g.x,el[Z+1]=g.y,el[Z+2]=g.z,el[Z+3]=v.x,el[Z+4]=v.y,el[Z+5]=v.z,el[Z+6]=R.x,el[Z+7]=R.y,el[Z+8]=R.z,Z+=9;t.bindBuffer(t.ARRAY_BUFFER,e.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,el,i)}if(eS)for(O=0,G=eP.length;O<G;O++){for(h=0,es=0,l=eC.length;h<l;h++)u=eA[j=eC[h]],g=eP[O].vertices[u.a],v=eP[O].vertices[u.b],R=eP[O].vertices[u.c],(I=eT[O])[es]=g.x,I[es+1]=g.y,I[es+2]=g.z,I[es+3]=v.x,I[es+4]=v.y,I[es+5]=v.z,I[es+6]=R.x,I[es+7]=R.y,I[es+8]=R.z,o.morphNormals&&(K?(b=_=eB[O].faceNormals[j],w=_):(_=(X=eB[O].vertexNormals[j]).a,b=X.b,w=X.c),(W=e$[O])[es]=_.x,W[es+1]=_.y,W[es+2]=_.z,W[es+3]=b.x,W[es+4]=b.y,W[es+5]=b.z,W[es+6]=w.x,W[es+7]=w.y,W[es+8]=w.z),es+=9;t.bindBuffer(t.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[O]),t.bufferData(t.ARRAY_BUFFER,eT[O],i),o.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[O]),t.bufferData(t.ARRAY_BUFFER,e$[O],i))}if(e0.length){for(h=0,l=eC.length;h<l;h++)A=e0[(u=eA[eC[h]]).a],L=e0[u.b],F=e0[u.c],em[ea]=A.x,em[ea+1]=A.y,em[ea+2]=A.z,em[ea+3]=A.w,em[ea+4]=L.x,em[ea+5]=L.y,em[ea+6]=L.z,em[ea+7]=L.w,em[ea+8]=F.x,em[ea+9]=F.y,em[ea+10]=F.z,em[ea+11]=F.w,P=eF[u.a],B=eF[u.b],D=eF[u.c],ed[ea]=P.x,ed[ea+1]=P.y,ed[ea+2]=P.z,ed[ea+3]=P.w,ed[ea+4]=B.x,ed[ea+5]=B.y,ed[ea+6]=B.z,ed[ea+7]=B.w,ed[ea+8]=D.x,ed[ea+9]=D.y,ed[ea+10]=D.z,ed[ea+11]=D.w,ea+=12;ea>0&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),t.bufferData(t.ARRAY_BUFFER,ed,i),t.bindBuffer(t.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),t.bufferData(t.ARRAY_BUFFER,em,i))}if(ew){for(h=0,l=eC.length;h<l;h++)p=(u=eA[eC[h]]).vertexColors,d=u.color,3===p.length&&o.vertexColors===THREE.VertexColors?(S=p[0],M=p[1],C=p[2]):(S=d,M=d,C=d),ep[eo]=S.r,ep[eo+1]=S.g,ep[eo+2]=S.b,ep[eo+3]=M.r,ep[eo+4]=M.g,ep[eo+5]=M.b,ep[eo+6]=C.r,ep[eo+7]=C.g,ep[eo+8]=C.b,eo+=9;eo>0&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,ep,i))}if(eb&&ey.hasTangents){for(h=0,l=eC.length;h<l;h++)y=(m=(u=eA[eC[h]]).vertexTangents)[0],H=m[1],x=m[2],ef[ei]=y.x,ef[ei+1]=y.y,ef[ei+2]=y.z,ef[ei+3]=y.w,ef[ei+4]=H.x,ef[ei+5]=H.y,ef[ei+6]=H.z,ef[ei+7]=H.w,ef[ei+8]=x.x,ef[ei+9]=x.y,ef[ei+10]=x.z,ef[ei+11]=x.w,ei+=12;t.bindBuffer(t.ARRAY_BUFFER,e.__webglTangentBuffer),t.bufferData(t.ARRAY_BUFFER,ef,i)}if(e8){for(h=0,l=eC.length;h<l;h++)if(E=(u=eA[eC[h]]).vertexNormals,f=u.normal,3===E.length&&!1===K)for(U=0;U<3;U++)z=E[U],eE[er]=z.x,eE[er+1]=z.y,eE[er+2]=z.z,er+=3;else for(U=0;U<3;U++)eE[er]=f.x,eE[er+1]=f.y,eE[er+2]=f.z,er+=3;t.bindBuffer(t.ARRAY_BUFFER,e.__webglNormalBuffer),t.bufferData(t.ARRAY_BUFFER,eE,i)}if(e_&&eL){for(h=0,l=eC.length;h<l;h++)if(void 0!==(T=eL[c=eC[h]]))for(U=0;U<3;U++)k=T[U],ec[J]=k.x,ec[J+1]=k.y,J+=2;J>0&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglUVBuffer),t.bufferData(t.ARRAY_BUFFER,ec,i))}if(e_&&e1){for(h=0,l=eC.length;h<l;h++)if(void 0!==($=e1[c=eC[h]]))for(U=0;U<3;U++)N=$[U],eu[ee]=N.x,eu[ee+1]=N.y,ee+=2;ee>0&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglUV2Buffer),t.bufferData(t.ARRAY_BUFFER,eu,i))}if(ex){for(h=0,l=eC.length;h<l;h++)ev[et]=Q,ev[et+1]=Q+1,ev[et+2]=Q+2,et+=3,eR[en]=Q,eR[en+1]=Q+1,eR[en+2]=Q,eR[en+3]=Q+2,eR[en+4]=Q+1,eR[en+5]=Q+2,en+=6,Q+=3;t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,ev,i),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,eR,i)}if(eg){for(U=0,V=eg.length;U<V;U++)if((Y=eg[U]).__original.needsUpdate){if(eh=0,1===Y.size){if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)u=eA[eC[h]],Y.array[eh]=Y.value[u.a],Y.array[eh+1]=Y.value[u.b],Y.array[eh+2]=Y.value[u.c],eh+=3;else if("faces"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)q=Y.value[eC[h]],Y.array[eh]=q,Y.array[eh+1]=q,Y.array[eh+2]=q,eh+=3}else if(2===Y.size){if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)u=eA[eC[h]],g=Y.value[u.a],v=Y.value[u.b],R=Y.value[u.c],Y.array[eh]=g.x,Y.array[eh+1]=g.y,Y.array[eh+2]=v.x,Y.array[eh+3]=v.y,Y.array[eh+4]=R.x,Y.array[eh+5]=R.y,eh+=6;else if("faces"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)g=q=Y.value[eC[h]],v=q,R=q,Y.array[eh]=g.x,Y.array[eh+1]=g.y,Y.array[eh+2]=v.x,Y.array[eh+3]=v.y,Y.array[eh+4]=R.x,Y.array[eh+5]=R.y,eh+=6}else if(3===Y.size){if(s="c"===Y.type?["r","g","b"]:["x","y","z"],void 0===Y.boundTo||"vertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)u=eA[eC[h]],g=Y.value[u.a],v=Y.value[u.b],R=Y.value[u.c],Y.array[eh]=g[s[0]],Y.array[eh+1]=g[s[1]],Y.array[eh+2]=g[s[2]],Y.array[eh+3]=v[s[0]],Y.array[eh+4]=v[s[1]],Y.array[eh+5]=v[s[2]],Y.array[eh+6]=R[s[0]],Y.array[eh+7]=R[s[1]],Y.array[eh+8]=R[s[2]],eh+=9;else if("faces"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)g=q=Y.value[eC[h]],v=q,R=q,Y.array[eh]=g[s[0]],Y.array[eh+1]=g[s[1]],Y.array[eh+2]=g[s[2]],Y.array[eh+3]=v[s[0]],Y.array[eh+4]=v[s[1]],Y.array[eh+5]=v[s[2]],Y.array[eh+6]=R[s[0]],Y.array[eh+7]=R[s[1]],Y.array[eh+8]=R[s[2]],eh+=9;else if("faceVertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)g=(q=Y.value[eC[h]])[0],v=q[1],R=q[2],Y.array[eh]=g[s[0]],Y.array[eh+1]=g[s[1]],Y.array[eh+2]=g[s[2]],Y.array[eh+3]=v[s[0]],Y.array[eh+4]=v[s[1]],Y.array[eh+5]=v[s[2]],Y.array[eh+6]=R[s[0]],Y.array[eh+7]=R[s[1]],Y.array[eh+8]=R[s[2]],eh+=9}else if(4===Y.size){if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)u=eA[eC[h]],g=Y.value[u.a],v=Y.value[u.b],R=Y.value[u.c],Y.array[eh]=g.x,Y.array[eh+1]=g.y,Y.array[eh+2]=g.z,Y.array[eh+3]=g.w,Y.array[eh+4]=v.x,Y.array[eh+5]=v.y,Y.array[eh+6]=v.z,Y.array[eh+7]=v.w,Y.array[eh+8]=R.x,Y.array[eh+9]=R.y,Y.array[eh+10]=R.z,Y.array[eh+11]=R.w,eh+=12;else if("faces"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)g=q=Y.value[eC[h]],v=q,R=q,Y.array[eh]=g.x,Y.array[eh+1]=g.y,Y.array[eh+2]=g.z,Y.array[eh+3]=g.w,Y.array[eh+4]=v.x,Y.array[eh+5]=v.y,Y.array[eh+6]=v.z,Y.array[eh+7]=v.w,Y.array[eh+8]=R.x,Y.array[eh+9]=R.y,Y.array[eh+10]=R.z,Y.array[eh+11]=R.w,eh+=12;else if("faceVertices"===Y.boundTo)for(h=0,l=eC.length;h<l;h++)g=(q=Y.value[eC[h]])[0],v=q[1],R=q[2],Y.array[eh]=g.x,Y.array[eh+1]=g.y,Y.array[eh+2]=g.z,Y.array[eh+3]=g.w,Y.array[eh+4]=v.x,Y.array[eh+5]=v.y,Y.array[eh+6]=v.z,Y.array[eh+7]=v.w,Y.array[eh+8]=R.x,Y.array[eh+9]=R.y,Y.array[eh+10]=R.z,Y.array[eh+11]=R.w,eh+=12}t.bindBuffer(t.ARRAY_BUFFER,Y.buffer),t.bufferData(t.ARRAY_BUFFER,Y.array,i)}}n&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function ew(e,r,i,n){for(var o=i.attributes,a=r.attributes,s=r.attributesKeys,h=0,l=s.length;h<l;h++){var c=s[h],u=a[c];if(u>=0){var E=o[c];if(void 0!==E){var f=E.itemSize;t.bindBuffer(t.ARRAY_BUFFER,E.buffer),I.enableAttribute(u),t.vertexAttribPointer(u,f,t.FLOAT,!1,0,n*f*4)}else void 0!==e.defaultAttributeValues&&(2===e.defaultAttributeValues[c].length?t.vertexAttrib2fv(u,e.defaultAttributeValues[c]):3===e.defaultAttributeValues[c].length&&t.vertexAttrib3fv(u,e.defaultAttributeValues[c]))}}I.disableUnusedAttributes()}function eS(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function eM(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function eC(e,t){return t[0]-e[0]}function eA(e,t,r,i,n){for(var o,a=0,s=e.length;a<s;a++){var h=e[a],l=h.object,c=h.buffer;if(eW(l,t),n)o=n;else{if(!(o=h.material))continue;eN(o)}y.setMaterialFaces(o),c instanceof THREE.BufferGeometry?y.renderBufferDirect(t,r,i,o,c,l):y.renderBuffer(t,r,i,o,c,l)}}function eL(e,t,r,i,n,o){for(var a,s=0,h=e.length;s<h;s++){var l=e[s],c=l.object;if(c.visible){if(o)a=o;else{if(!(a=l[t]))continue;eN(a)}y.renderImmediateObject(r,i,n,a,c)}}}function e1(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function eF(e){var t=e.object,r=e.buffer,i=t.geometry,n=t.material;if(n instanceof THREE.MeshFaceMaterial){var o=i instanceof THREE.BufferGeometry?0:r.materialIndex;n=n.materials[o],e.material=n,n.transparent?g.push(e):$.push(e)}else n&&(e.material=n,n.transparent?g.push(e):$.push(e))}this.renderBufferImmediate=function(e,r,i){if(I.initAttributes(),e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=t.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=t.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=t.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=t.createBuffer()),e.hasPositions&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,e.positionArray,t.DYNAMIC_DRAW),I.enableAttribute(r.attributes.position),t.vertexAttribPointer(r.attributes.position,3,t.FLOAT,!1,0,0)),e.hasNormals){if(t.bindBuffer(t.ARRAY_BUFFER,e.__webglNormalBuffer),i instanceof THREE.MeshPhongMaterial==!1&&i.shading===THREE.FlatShading){var n,o,a,s,h,l,c,u,E,f,p,d,m,T,$=3*e.count;for(T=0;T<$;T+=9)s=(m=e.normalArray)[T],c=m[T+1],f=m[T+2],h=m[T+3],u=m[T+4],p=m[T+5],l=m[T+6],E=m[T+7],d=m[T+8],n=(s+h+l)/3,o=(c+u+E)/3,a=(f+p+d)/3,m[T]=n,m[T+1]=o,m[T+2]=a,m[T+3]=n,m[T+4]=o,m[T+5]=a,m[T+6]=n,m[T+7]=o,m[T+8]=a}t.bufferData(t.ARRAY_BUFFER,e.normalArray,t.DYNAMIC_DRAW),I.enableAttribute(r.attributes.normal),t.vertexAttribPointer(r.attributes.normal,3,t.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglUvBuffer),t.bufferData(t.ARRAY_BUFFER,e.uvArray,t.DYNAMIC_DRAW),I.enableAttribute(r.attributes.uv),t.vertexAttribPointer(r.attributes.uv,2,t.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(t.bindBuffer(t.ARRAY_BUFFER,e.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,e.colorArray,t.DYNAMIC_DRAW),I.enableAttribute(r.attributes.color),t.vertexAttribPointer(r.attributes.color,3,t.FLOAT,!1,0,0)),I.disableUnusedAttributes(),t.drawArrays(t.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,r,i,o,a,s){if(!1!==o.visible){eU(s);var h=eO(e,r,i,o,s),l=!1,c=o.wireframe?1:0,u="direct_"+a.id+"_"+h.id+"_"+c;if(u!==w&&(w=u,l=!0),l&&I.initAttributes(),s instanceof THREE.Mesh){var E=!0===o.wireframe?t.LINES:t.TRIANGLES,f=a.attributes.index;if(f){f.array instanceof Uint32Array&&W.get("OES_element_index_uint")?(p=t.UNSIGNED_INT,d=4):(p=t.UNSIGNED_SHORT,d=2);var p,d,m=a.offsets;if(0===m.length)l&&(ew(o,h,a,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,f.array.length,p,0),y.info.render.calls++,y.info.render.vertices+=f.array.length,y.info.render.faces+=f.array.length/3;else{l=!0;for(var T=0,$=m.length;T<$;T++){var g=m[T].index;l&&(ew(o,h,a,g),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,m[T].count,p,m[T].start*d),y.info.render.calls++,y.info.render.vertices+=m[T].count,y.info.render.faces+=m[T].count/3}}}else{l&&ew(o,h,a,0);var v=a.attributes.position;t.drawArrays(E,0,v.array.length/v.itemSize),y.info.render.calls++,y.info.render.vertices+=v.array.length/v.itemSize,y.info.render.faces+=v.array.length/(3*v.itemSize)}}else if(s instanceof THREE.PointCloud){var E=t.POINTS,f=a.attributes.index;if(f){f.array instanceof Uint32Array&&W.get("OES_element_index_uint")?(p=t.UNSIGNED_INT,d=4):(p=t.UNSIGNED_SHORT,d=2);var p,d,m=a.offsets;if(0===m.length)l&&(ew(o,h,a,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,f.array.length,p,0),y.info.render.calls++,y.info.render.points+=f.array.length;else{m.length>1&&(l=!0);for(var T=0,$=m.length;T<$;T++){var g=m[T].index;l&&(ew(o,h,a,g),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,m[T].count,p,m[T].start*d),y.info.render.calls++,y.info.render.points+=m[T].count}}}else{l&&ew(o,h,a,0);var v=a.attributes.position,m=a.offsets;if(0===m.length)t.drawArrays(E,0,v.array.length/3),y.info.render.calls++,y.info.render.points+=v.array.length/3;else for(var T=0,$=m.length;T<$;T++)t.drawArrays(E,m[T].index,m[T].count),y.info.render.calls++,y.info.render.points+=m[T].count}}else if(s instanceof THREE.Line){var E=s.mode===THREE.LineStrip?t.LINE_STRIP:t.LINES;I.setLineWidth(o.linewidth*n);var f=a.attributes.index;if(f){f.array instanceof Uint32Array?(p=t.UNSIGNED_INT,d=4):(p=t.UNSIGNED_SHORT,d=2);var p,d,m=a.offsets;if(0===m.length)l&&(ew(o,h,a,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,f.array.length,p,0),y.info.render.calls++,y.info.render.vertices+=f.array.length;else{m.length>1&&(l=!0);for(var T=0,$=m.length;T<$;T++){var g=m[T].index;l&&(ew(o,h,a,g),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,f.buffer)),t.drawElements(E,m[T].count,p,m[T].start*d),y.info.render.calls++,y.info.render.vertices+=m[T].count}}}else{l&&ew(o,h,a,0);var v=a.attributes.position,m=a.offsets;if(0===m.length)t.drawArrays(E,0,v.array.length/3),y.info.render.calls++,y.info.render.vertices+=v.array.length/3;else for(var T=0,$=m.length;T<$;T++)t.drawArrays(E,m[T].index,m[T].count),y.info.render.calls++,y.info.render.vertices+=m[T].count}}}},this.renderBuffer=function(e,r,i,o,a,s){if(!1!==o.visible){eU(s);var h=eO(e,r,i,o,s),l=h.attributes,c=!1,u=o.wireframe?1:0,E=a.id+"_"+h.id+"_"+u;if(E!==w&&(w=E,c=!0),c&&I.initAttributes(),!o.morphTargets&&l.position>=0?c&&(t.bindBuffer(t.ARRAY_BUFFER,a.__webglVertexBuffer),I.enableAttribute(l.position),t.vertexAttribPointer(l.position,3,t.FLOAT,!1,0,0)):s.morphTargetBase&&function e(r,i,n){var o=r.program.attributes;if(-1!==n.morphTargetBase&&o.position>=0?(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[n.morphTargetBase]),I.enableAttribute(o.position),t.vertexAttribPointer(o.position,3,t.FLOAT,!1,0,0)):o.position>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglVertexBuffer),I.enableAttribute(o.position),t.vertexAttribPointer(o.position,3,t.FLOAT,!1,0,0)),n.morphTargetForcedOrder.length)for(var a,s=0,h=n.morphTargetForcedOrder,l=n.morphTargetInfluences;s<r.numSupportedMorphTargets&&s<h.length;)(a=o["morphTarget"+s])>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[h[s]]),I.enableAttribute(a),t.vertexAttribPointer(a,3,t.FLOAT,!1,0,0)),(a=o["morphNormal"+s])>=0&&r.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[h[s]]),I.enableAttribute(a),t.vertexAttribPointer(a,3,t.FLOAT,!1,0,0)),n.__webglMorphTargetInfluences[s]=l[h[s]],s++;else{var a,c=[],l=n.morphTargetInfluences,u=n.geometry.morphTargets;l.length>u.length&&(console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."),l.length=u.length);for(var E=0,f=l.length;E<f;E++){var p=l[E];c.push([p,E])}c.length>r.numSupportedMorphTargets?(c.sort(eC),c.length=r.numSupportedMorphTargets):c.length>r.numSupportedMorphNormals?c.sort(eC):0===c.length&&c.push([0,0]);for(var s=0,d=r.numSupportedMorphTargets;s<d;s++)if(c[s]){var m=c[s][1];(a=o["morphTarget"+s])>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[m]),I.enableAttribute(a),t.vertexAttribPointer(a,3,t.FLOAT,!1,0,0)),(a=o["morphNormal"+s])>=0&&r.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[m]),I.enableAttribute(a),t.vertexAttribPointer(a,3,t.FLOAT,!1,0,0)),n.__webglMorphTargetInfluences[s]=l[m]}else n.__webglMorphTargetInfluences[s]=0}null!==r.program.uniforms.morphTargetInfluences&&t.uniform1fv(r.program.uniforms.morphTargetInfluences,n.__webglMorphTargetInfluences)}(o,a,s),c){if(a.__webglCustomAttributesList)for(var f=0,p=a.__webglCustomAttributesList.length;f<p;f++){var d=a.__webglCustomAttributesList[f];l[d.buffer.belongsToAttribute]>=0&&(t.bindBuffer(t.ARRAY_BUFFER,d.buffer),I.enableAttribute(l[d.buffer.belongsToAttribute]),t.vertexAttribPointer(l[d.buffer.belongsToAttribute],d.size,t.FLOAT,!1,0,0))}l.color>=0&&(s.geometry.colors.length>0||s.geometry.faces.length>0?(t.bindBuffer(t.ARRAY_BUFFER,a.__webglColorBuffer),I.enableAttribute(l.color),t.vertexAttribPointer(l.color,3,t.FLOAT,!1,0,0)):void 0!==o.defaultAttributeValues&&t.vertexAttrib3fv(l.color,o.defaultAttributeValues.color)),l.normal>=0&&(t.bindBuffer(t.ARRAY_BUFFER,a.__webglNormalBuffer),I.enableAttribute(l.normal),t.vertexAttribPointer(l.normal,3,t.FLOAT,!1,0,0)),l.tangent>=0&&(t.bindBuffer(t.ARRAY_BUFFER,a.__webglTangentBuffer),I.enableAttribute(l.tangent),t.vertexAttribPointer(l.tangent,4,t.FLOAT,!1,0,0)),l.uv>=0&&(s.geometry.faceVertexUvs[0]?(t.bindBuffer(t.ARRAY_BUFFER,a.__webglUVBuffer),I.enableAttribute(l.uv),t.vertexAttribPointer(l.uv,2,t.FLOAT,!1,0,0)):void 0!==o.defaultAttributeValues&&t.vertexAttrib2fv(l.uv,o.defaultAttributeValues.uv)),l.uv2>=0&&(s.geometry.faceVertexUvs[1]?(t.bindBuffer(t.ARRAY_BUFFER,a.__webglUV2Buffer),I.enableAttribute(l.uv2),t.vertexAttribPointer(l.uv2,2,t.FLOAT,!1,0,0)):void 0!==o.defaultAttributeValues&&t.vertexAttrib2fv(l.uv2,o.defaultAttributeValues.uv2)),o.skinning&&l.skinIndex>=0&&l.skinWeight>=0&&(t.bindBuffer(t.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),I.enableAttribute(l.skinIndex),t.vertexAttribPointer(l.skinIndex,4,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),I.enableAttribute(l.skinWeight),t.vertexAttribPointer(l.skinWeight,4,t.FLOAT,!1,0,0)),l.lineDistance>=0&&(t.bindBuffer(t.ARRAY_BUFFER,a.__webglLineDistanceBuffer),I.enableAttribute(l.lineDistance),t.vertexAttribPointer(l.lineDistance,1,t.FLOAT,!1,0,0))}if(I.disableUnusedAttributes(),s instanceof THREE.Mesh){var m=a.__typeArray===Uint32Array?t.UNSIGNED_INT:t.UNSIGNED_SHORT;o.wireframe?(I.setLineWidth(o.wireframeLinewidth*n),c&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),t.drawElements(t.LINES,a.__webglLineCount,m,0)):(c&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),t.drawElements(t.TRIANGLES,a.__webglFaceCount,m,0)),y.info.render.calls++,y.info.render.vertices+=a.__webglFaceCount,y.info.render.faces+=a.__webglFaceCount/3}else if(s instanceof THREE.Line){var T=s.mode===THREE.LineStrip?t.LINE_STRIP:t.LINES;I.setLineWidth(o.linewidth*n),t.drawArrays(T,0,a.__webglLineCount),y.info.render.calls++}else s instanceof THREE.PointCloud&&(t.drawArrays(t.POINTS,0,a.__webglParticleCount),y.info.render.calls++,y.info.render.points+=a.__webglParticleCount)}},this.render=function(e,r,i,n){if(r instanceof THREE.Camera==!1){THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var o,a=e.fog;w="",b=-1,S=null,k=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===r.parent&&r.updateMatrixWorld(),e.traverse(function(e){e instanceof THREE.SkinnedMesh&&e.skeleton.update()}),r.matrixWorldInverse.getInverse(r.matrixWorld),U.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),D.setFromMatrix(U),d.length=0,$.length=0,g.length=0,v.length=0,R.length=0,function e(r){if(!1!==r.visible){if(r instanceof THREE.Scene||r instanceof THREE.Group);else if(function e(r){void 0===r.__webglInit&&(r.__webglInit=!0,r._modelViewMatrix=new THREE.Matrix4,r._normalMatrix=new THREE.Matrix3,r.addEventListener("removed",ep));var i,n,o,a,s,h,l,c,u=r.geometry;if(void 0===u||void 0===u.__webglInit&&((u.__webglInit=!0,u.addEventListener("dispose",ed),u instanceof THREE.BufferGeometry)?y.info.memory.geometries++:r instanceof THREE.Mesh?eB(r,u):r instanceof THREE.Line?void 0===u.__webglVertexBuffer&&((i=u).__webglVertexBuffer=t.createBuffer(),i.__webglColorBuffer=t.createBuffer(),i.__webglLineDistanceBuffer=t.createBuffer(),y.info.memory.geometries++,n=u,o=r,a=n.vertices.length,n.__vertexArray=new Float32Array(3*a),n.__colorArray=new Float32Array(3*a),n.__lineDistanceArray=new Float32Array(1*a),n.__webglLineCount=a,ex(o),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.lineDistancesNeedUpdate=!0):r instanceof THREE.PointCloud&&void 0===u.__webglVertexBuffer&&((s=u).__webglVertexBuffer=t.createBuffer(),s.__webglColorBuffer=t.createBuffer(),y.info.memory.geometries++,h=u,l=r,c=h.vertices.length,h.__vertexArray=new Float32Array(3*c),h.__colorArray=new Float32Array(3*c),h.__webglParticleCount=c,ex(l),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0)),void 0===r.__webglActive){if(r.__webglActive=!0,r instanceof THREE.Mesh){if(u instanceof THREE.BufferGeometry)eD(m,u,r);else if(u instanceof THREE.Geometry)for(var E=e0[u.id],f=0,p=E.length;f<p;f++)eD(m,E[f],r)}else r instanceof THREE.Line||r instanceof THREE.PointCloud?eD(m,u,r):(r instanceof THREE.ImmediateRenderObject||r.immediateRenderCallback)&&function e(t,r){t.push({id:null,object:r,opaque:null,transparent:null,z:0})}(T,r)}}(r),r instanceof THREE.Light)d.push(r);else if(r instanceof THREE.Sprite)v.push(r);else if(r instanceof THREE.LensFlare)R.push(r);else{var i=m[r.id];if(i&&(!1===r.frustumCulled||!0===D.intersectsObject(r)))for(var n=0,o=i.length;n<o;n++){var a=i[n];eF(a),a.render=!0,!0===y.sortObjects&&(V.setFromMatrixPosition(r.matrixWorld),V.applyProjection(U),a.z=V.z)}}for(var n=0,o=r.children.length;n<o;n++)e(r.children[n])}}(e),!0===y.sortObjects&&($.sort(eS),g.sort(eM)),ec.render(e,r),y.info.render.calls=0,y.info.render.vertices=0,y.info.render.faces=0,y.info.render.points=0,this.setRenderTarget(i),(this.autoClear||n)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);for(var s=0,h=T.length;s<h;s++){var l=T[s],c=l.object;c.visible&&(eW(c,r),e1(l))}if(e.overrideMaterial){var u=e.overrideMaterial;eN(u),eA($,r,d,a,u),eA(g,r,d,a,u),eL(T,"",r,d,a,u)}else I.setBlending(THREE.NoBlending),eA($,r,d,a,null),eL(T,"opaque",r,d,a,null),eA(g,r,d,a,null),eL(T,"transparent",r,d,a,null);eu.render(e,r),eE.render(e,r,P,B),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(o=i,o instanceof THREE.WebGLRenderTargetCube?(t.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture),t.generateMipmap(t.TEXTURE_CUBE_MAP),t.bindTexture(t.TEXTURE_CUBE_MAP,null)):(t.bindTexture(t.TEXTURE_2D,o.__webglTexture),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null))),I.setDepthTest(!0),I.setDepthWrite(!0),I.setColorWrite(!0)},this.renderImmediateObject=function(e,r,i,n,o){var a=eO(e,r,i,n,o);w="",y.setMaterialFaces(n),o.immediateRenderCallback?o.immediateRenderCallback(a,t,D):o.render(function(e){y.renderBufferImmediate(e,a,n)})};var e0={},eP=0;function eB(e,t){var r=e.material,i=!1;(void 0===e0[t.id]||!0===t.groupsNeedUpdate)&&(delete m[e.id],e0[t.id]=function e(t,r){for(var i,n,o=W.get("OES_element_index_uint")?4294967296:65535,a={},s=t.morphTargets.length,h=t.morphNormals.length,l={},c=[],u=0,E=t.faces.length;u<E;u++){var f=t.faces[u],p=r?f.materialIndex:0;p in a||(a[p]={hash:p,counter:0}),(n=a[p].hash+"_"+a[p].counter)in l||(i={id:eP++,faces3:[],materialIndex:p,vertices:0,numMorphTargets:s,numMorphNormals:h},l[n]=i,c.push(i)),!(l[n].vertices+3>o)||(a[p].counter+=1,(n=a[p].hash+"_"+a[p].counter)in l||(i={id:eP++,faces3:[],materialIndex:p,vertices:0,numMorphTargets:s,numMorphNormals:h},l[n]=i,c.push(i))),l[n].faces3.push(u),l[n].vertices+=3}return c}(t,r instanceof THREE.MeshFaceMaterial),t.groupsNeedUpdate=!1);for(var n=e0[t.id],o=0,a=n.length;o<a;o++){var s=n[o];void 0===s.__webglVertexBuffer?(ef(s),e_(s,e),t.verticesNeedUpdate=!0,t.morphTargetsNeedUpdate=!0,t.elementsNeedUpdate=!0,t.uvsNeedUpdate=!0,t.normalsNeedUpdate=!0,t.tangentsNeedUpdate=!0,t.colorsNeedUpdate=!0,i=!0):i=!1,(i||void 0===e.__webglActive)&&eD(m,s,e)}e.__webglActive=!0}function eD(e,t,r){var i=r.id;e[i]=e[i]||[],e[i].push({id:i,buffer:t,object:r,material:null,z:0})}function eU(e){var r=e.geometry;if(r instanceof THREE.BufferGeometry)for(var i=r.attributes,n=r.attributesKeys,o=0,a=n.length;o<a;o++){var s=n[o],h=i[s],l="index"===s?t.ELEMENT_ARRAY_BUFFER:t.ARRAY_BUFFER;void 0===h.buffer?(h.buffer=t.createBuffer(),t.bindBuffer(l,h.buffer),t.bufferData(l,h.array,h instanceof THREE.DynamicBufferAttribute?t.DYNAMIC_DRAW:t.STATIC_DRAW),h.needsUpdate=!1):!0===h.needsUpdate&&(t.bindBuffer(l,h.buffer),void 0===h.updateRange||-1===h.updateRange.count?t.bufferSubData(l,0,h.array):0===h.updateRange.count?console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(l,h.updateRange.offset*h.array.BYTES_PER_ELEMENT,h.array.subarray(h.updateRange.offset,h.updateRange.offset+h.updateRange.count)),h.updateRange.count=0),h.needsUpdate=!1)}else if(e instanceof THREE.Mesh){!0===r.groupsNeedUpdate&&eB(e,r);for(var c=e0[r.id],o=0,u=c.length;o<u;o++){var E=c[o],f=e8(e,E),p=f.attributes&&eV(f);(r.verticesNeedUpdate||r.morphTargetsNeedUpdate||r.elementsNeedUpdate||r.uvsNeedUpdate||r.normalsNeedUpdate||r.colorsNeedUpdate||r.tangentsNeedUpdate||p)&&eb(E,e,t.DYNAMIC_DRAW,!r.dynamic,f)}r.verticesNeedUpdate=!1,r.morphTargetsNeedUpdate=!1,r.elementsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.tangentsNeedUpdate=!1,f.attributes&&ez(f)}else if(e instanceof THREE.Line){var f=e8(e,r),p=f.attributes&&eV(f);(r.verticesNeedUpdate||r.colorsNeedUpdate||r.lineDistancesNeedUpdate||p)&&function e(r,i){var n,o,a,s,h,l,c,u,E,f,p,d,m=r.vertices,T=r.colors,$=r.lineDistances,g=m.length,v=T.length,R=$.length,y=r.__vertexArray,H=r.__colorArray,x=r.__lineDistanceArray,_=r.verticesNeedUpdate,b=r.colorsNeedUpdate,w=r.lineDistancesNeedUpdate,S=r.__webglCustomAttributesList;if(_){for(n=0;n<g;n++)s=m[n],y[h=3*n]=s.x,y[h+1]=s.y,y[h+2]=s.z;t.bindBuffer(t.ARRAY_BUFFER,r.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,y,i)}if(b){for(o=0;o<v;o++)l=T[o],H[h=3*o]=l.r,H[h+1]=l.g,H[h+2]=l.b;t.bindBuffer(t.ARRAY_BUFFER,r.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,H,i)}if(w){for(a=0;a<R;a++)x[a]=$[a];t.bindBuffer(t.ARRAY_BUFFER,r.__webglLineDistanceBuffer),t.bufferData(t.ARRAY_BUFFER,x,i)}if(S){for(c=0,u=S.length;c<u;c++)if((d=S[c]).needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(h=0,f=d.value.length,1===d.size)for(E=0;E<f;E++)d.array[E]=d.value[E];else if(2===d.size)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,h+=2;else if(3===d.size){if("c"===d.type)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.r,d.array[h+1]=p.g,d.array[h+2]=p.b,h+=3;else for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,d.array[h+2]=p.z,h+=3}else if(4===d.size)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,d.array[h+2]=p.z,d.array[h+3]=p.w,h+=4;t.bindBuffer(t.ARRAY_BUFFER,d.buffer),t.bufferData(t.ARRAY_BUFFER,d.array,i),d.needsUpdate=!1}}}(r,t.DYNAMIC_DRAW),r.verticesNeedUpdate=!1,r.colorsNeedUpdate=!1,r.lineDistancesNeedUpdate=!1,f.attributes&&ez(f)}else if(e instanceof THREE.PointCloud){var f=e8(e,r),p=f.attributes&&eV(f);(r.verticesNeedUpdate||r.colorsNeedUpdate||p)&&function e(r,i,n){var o,a,s,h,l,c,u,E,f,p,d,m=r.vertices,T=m.length,$=r.colors,g=$.length,v=r.__vertexArray,R=r.__colorArray,y=r.verticesNeedUpdate,H=r.colorsNeedUpdate,x=r.__webglCustomAttributesList;if(y){for(o=0;o<T;o++)s=m[o],v[h=3*o]=s.x,v[h+1]=s.y,v[h+2]=s.z;t.bindBuffer(t.ARRAY_BUFFER,r.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,v,i)}if(H){for(a=0;a<g;a++)l=$[a],R[h=3*a]=l.r,R[h+1]=l.g,R[h+2]=l.b;t.bindBuffer(t.ARRAY_BUFFER,r.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,R,i)}if(x)for(c=0,u=x.length;c<u;c++){if((d=x[c]).needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(f=d.value.length,h=0,1===d.size)for(E=0;E<f;E++)d.array[E]=d.value[E];else if(2===d.size)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,h+=2;else if(3===d.size){if("c"===d.type)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.r,d.array[h+1]=p.g,d.array[h+2]=p.b,h+=3;else for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,d.array[h+2]=p.z,h+=3}else if(4===d.size)for(E=0;E<f;E++)p=d.value[E],d.array[h]=p.x,d.array[h+1]=p.y,d.array[h+2]=p.z,d.array[h+3]=p.w,h+=4}t.bindBuffer(t.ARRAY_BUFFER,d.buffer),t.bufferData(t.ARRAY_BUFFER,d.array,i),d.needsUpdate=!1}}(r,t.DYNAMIC_DRAW,e),r.verticesNeedUpdate=!1,r.colorsNeedUpdate=!1,f.attributes&&ez(f)}}function eV(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function ez(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}var ek={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};function eN(e){!0===e.transparent?I.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha):I.setBlending(THREE.NoBlending),I.setDepthTest(e.depthTest),I.setDepthWrite(e.depthWrite),I.setColorWrite(e.colorWrite),I.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function eO(e,i,n,a,s){M=0,a.needsUpdate&&(a.program&&eH(a),function e(r,i,n,a){r.addEventListener("dispose",e$);var s=ek[r.type];if(s){var h=THREE.ShaderLib[s];r.__webglShader={uniforms:THREE.UniformsUtils.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}}else r.__webglShader={uniforms:r.uniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader};var l=function e(t){for(var r=0,i=0,n=0,o=0,a=0,s=t.length;a<s;a++){var h=t[a];!h.onlyShadow&&!1!==h.visible&&(h instanceof THREE.DirectionalLight&&r++,h instanceof THREE.PointLight&&i++,h instanceof THREE.SpotLight&&n++,h instanceof THREE.HemisphereLight&&o++)}return{directional:r,point:i,spot:n,hemi:o}}(i),c=function e(t){for(var r=0,i=0,n=t.length;i<n;i++){var o=t[i];o.castShadow&&(o instanceof THREE.SpotLight&&r++,o instanceof THREE.DirectionalLight&&!o.shadowCascade&&r++)}return r}(i),u=function e(r){if(et&&r&&r.skeleton&&r.skeleton.useVertexTexture)return 1024;var i=Math.floor((t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS)-20)/4);return void 0!==r&&r instanceof THREE.SkinnedMesh&&(i=Math.min(r.skeleton.bones.length,i))<r.skeleton.bones.length&&THREE.warn("WebGLRenderer: too many bones - "+r.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)"),i}(a),f={precision:o,supportsVertexTextures:ee,map:!!r.map,envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,lightMap:!!r.lightMap,bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,combine:r.combine,vertexColors:r.vertexColors,fog:n,useFog:r.fog,fogExp:n instanceof THREE.FogExp2,flatShading:r.shading===THREE.FlatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:E,skinning:r.skinning,maxBones:u,useVertexTexture:et&&a&&a.skeleton&&a.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:y.maxMorphTargets,maxMorphNormals:y.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:c,shadowMapEnabled:y.shadowMapEnabled&&a.receiveShadow&&c>0,shadowMapType:y.shadowMapType,shadowMapDebug:y.shadowMapDebug,shadowMapCascade:y.shadowMapCascade,alphaTest:r.alphaTest,metal:r.metal,wrapAround:r.wrapAround,doubleSided:r.side===THREE.DoubleSide,flipSided:r.side===THREE.BackSide},p=[];if(s?p.push(s):(p.push(r.fragmentShader),p.push(r.vertexShader)),void 0!==r.defines)for(var d in r.defines)p.push(d),p.push(r.defines[d]);for(var d in f)p.push(d),p.push(f[d]);for(var m=p.join(),T=0,$=H.length;T<$;T++){var g=H[T];if(g.code===m){R=g,R.usedTimes++;break}}void 0===R&&(R=new THREE.WebGLProgram(y,m,r,f),H.push(R),y.info.memory.programs=H.length),r.program=R;var v=R.attributes;if(r.morphTargets){r.numSupportedMorphTargets=0;for(var R,x,_="morphTarget",b=0;b<y.maxMorphTargets;b++)v[x=_+b]>=0&&r.numSupportedMorphTargets++}if(r.morphNormals){r.numSupportedMorphNormals=0;var x,_="morphNormal";for(b=0;b<y.maxMorphNormals;b++)v[x=_+b]>=0&&r.numSupportedMorphNormals++}for(var w in r.uniformsList=[],r.__webglShader.uniforms){var S=r.program.uniforms[w];S&&r.uniformsList.push([r.__webglShader.uniforms[w],S])}}(a,i,n,s),a.needsUpdate=!1),a.morphTargets&&!s.__webglMorphTargetInfluences&&(s.__webglMorphTargetInfluences=new Float32Array(y.maxMorphTargets));var h,l,c,u,f,p,d,m,T,$,g,v,R=!1,_=!1,w=!1,C=a.program,A=C.uniforms,L=a.__webglShader.uniforms;if(C.id!==x&&(t.useProgram(C.program),x=C.id,R=!0,_=!0,w=!0),a.id!==b&&(-1===b&&(w=!0),b=a.id,_=!0),(R||e!==S)&&(t.uniformMatrix4fv(A.projectionMatrix,!1,e.projectionMatrix.elements),E&&t.uniform1f(A.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==S&&(S=e),(a instanceof THREE.ShaderMaterial||a instanceof THREE.MeshPhongMaterial||a.envMap)&&null!==A.cameraPosition&&(V.setFromMatrixPosition(e.matrixWorld),t.uniform3f(A.cameraPosition,V.x,V.y,V.z)),(a instanceof THREE.MeshPhongMaterial||a instanceof THREE.MeshLambertMaterial||a instanceof THREE.MeshBasicMaterial||a instanceof THREE.ShaderMaterial||a.skinning)&&null!==A.viewMatrix&&t.uniformMatrix4fv(A.viewMatrix,!1,e.matrixWorldInverse.elements)),a.skinning){if(s.bindMatrix&&null!==A.bindMatrix&&t.uniformMatrix4fv(A.bindMatrix,!1,s.bindMatrix.elements),s.bindMatrixInverse&&null!==A.bindMatrixInverse&&t.uniformMatrix4fv(A.bindMatrixInverse,!1,s.bindMatrixInverse.elements),et&&s.skeleton&&s.skeleton.useVertexTexture){if(null!==A.boneTexture){var F=e2();t.uniform1i(A.boneTexture,F),y.setTexture(s.skeleton.boneTexture,F)}null!==A.boneTextureWidth&&t.uniform1i(A.boneTextureWidth,s.skeleton.boneTextureWidth),null!==A.boneTextureHeight&&t.uniform1i(A.boneTextureHeight,s.skeleton.boneTextureHeight)}else s.skeleton&&s.skeleton.boneMatrices&&null!==A.boneGlobalMatrices&&t.uniformMatrix4fv(A.boneGlobalMatrices,!1,s.skeleton.boneMatrices)}return _&&(n&&a.fog&&(h=L,l=n,h.fogColor.value=l.color,l instanceof THREE.Fog?(h.fogNear.value=l.near,h.fogFar.value=l.far):l instanceof THREE.FogExp2&&(h.fogDensity.value=l.density)),(a instanceof THREE.MeshPhongMaterial||a instanceof THREE.MeshLambertMaterial||a.lights)&&(k&&(w=!0,function e(t){var r,i,n,o,a,s,h,l,c=0,u=0,E=0,f=N,p=f.directional.colors,d=f.directional.positions,m=f.point.colors,T=f.point.positions,$=f.point.distances,g=f.point.decays,v=f.spot.colors,R=f.spot.positions,y=f.spot.distances,H=f.spot.directions,x=f.spot.anglesCos,_=f.spot.exponents,b=f.spot.decays,w=f.hemi.skyColors,S=f.hemi.groundColors,M=f.hemi.positions,C=0,A=0,L=0,F=0,P=0,B=0,D=0,U=0,k=0,O=0,G=0,I=0;for(r=0,i=t.length;r<i;r++)if(!(n=t[r]).onlyShadow){if(o=n.color,h=n.intensity,l=n.distance,n instanceof THREE.AmbientLight){if(!n.visible)continue;c+=o.r,u+=o.g,E+=o.b}else if(n instanceof THREE.DirectionalLight){if(P+=1,!n.visible)continue;z.setFromMatrixPosition(n.matrixWorld),V.setFromMatrixPosition(n.target.matrixWorld),z.sub(V),z.normalize(),d[k=3*C]=z.x,d[k+1]=z.y,d[k+2]=z.z,e3(p,k,o,h),C+=1}else if(n instanceof THREE.PointLight){if(B+=1,!n.visible)continue;e3(m,O=3*A,o,h),V.setFromMatrixPosition(n.matrixWorld),T[O]=V.x,T[O+1]=V.y,T[O+2]=V.z,$[A]=l,g[A]=0===n.distance?0:n.decay,A+=1}else if(n instanceof THREE.SpotLight){if(D+=1,!n.visible)continue;e3(v,G=3*L,o,h),z.setFromMatrixPosition(n.matrixWorld),R[G]=z.x,R[G+1]=z.y,R[G+2]=z.z,y[L]=l,V.setFromMatrixPosition(n.target.matrixWorld),z.sub(V),z.normalize(),H[G]=z.x,H[G+1]=z.y,H[G+2]=z.z,x[L]=Math.cos(n.angle),_[L]=n.exponent,b[L]=0===n.distance?0:n.decay,L+=1}else if(n instanceof THREE.HemisphereLight){if(U+=1,!n.visible)continue;z.setFromMatrixPosition(n.matrixWorld),z.normalize(),M[I=3*F]=z.x,M[I+1]=z.y,M[I+2]=z.z,a=n.color,s=n.groundColor,e3(w,I,a,h),e3(S,I,s,h),F+=1}}for(r=3*C,i=Math.max(p.length,3*P);r<i;r++)p[r]=0;for(r=3*A,i=Math.max(m.length,3*B);r<i;r++)m[r]=0;for(r=3*L,i=Math.max(v.length,3*D);r<i;r++)v[r]=0;for(r=3*F,i=Math.max(w.length,3*U);r<i;r++)w[r]=0;for(r=3*F,i=Math.max(S.length,3*U);r<i;r++)S[r]=0;f.directional.length=C,f.point.length=A,f.spot.length=L,f.hemi.length=F,f.ambient[0]=c,f.ambient[1]=u,f.ambient[2]=E}(i),k=!1),w?(c=L,u=N,c.ambientLightColor.value=u.ambient,c.directionalLightColor.value=u.directional.colors,c.directionalLightDirection.value=u.directional.positions,c.pointLightColor.value=u.point.colors,c.pointLightPosition.value=u.point.positions,c.pointLightDistance.value=u.point.distances,c.pointLightDecay.value=u.point.decays,c.spotLightColor.value=u.spot.colors,c.spotLightPosition.value=u.spot.positions,c.spotLightDistance.value=u.spot.distances,c.spotLightDirection.value=u.spot.directions,c.spotLightAngleCos.value=u.spot.anglesCos,c.spotLightExponent.value=u.spot.exponents,c.spotLightDecay.value=u.spot.decays,c.hemisphereLightSkyColor.value=u.hemi.skyColors,c.hemisphereLightGroundColor.value=u.hemi.groundColors,c.hemisphereLightDirection.value=u.hemi.positions,eI(L,!0)):eI(L,!1)),(a instanceof THREE.MeshBasicMaterial||a instanceof THREE.MeshLambertMaterial||a instanceof THREE.MeshPhongMaterial)&&function e(t,r){if(t.opacity.value=r.opacity,t.diffuse.value=r.color,t.map.value=r.map,t.lightMap.value=r.lightMap,t.specularMap.value=r.specularMap,t.alphaMap.value=r.alphaMap,r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale)),r.map?i=r.map:r.specularMap?i=r.specularMap:r.normalMap?i=r.normalMap:r.bumpMap?i=r.bumpMap:r.alphaMap&&(i=r.alphaMap),void 0!==i){var i,n=i.offset,o=i.repeat;t.offsetRepeat.value.set(n.x,n.y,o.x,o.y)}t.envMap.value=r.envMap,t.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio}(L,a),a instanceof THREE.LineBasicMaterial?eG(L,a):a instanceof THREE.LineDashedMaterial?(eG(L,a),f=L,p=a,f.dashSize.value=p.dashSize,f.totalSize.value=p.dashSize+p.gapSize,f.scale.value=p.scale):a instanceof THREE.PointCloudMaterial?function e(t,i){if(t.psColor.value=i.color,t.opacity.value=i.opacity,t.size.value=i.size,t.scale.value=r.height/2,t.map.value=i.map,null!==i.map){var n=i.map.offset,o=i.map.repeat;t.offsetRepeat.value.set(n.x,n.y,o.x,o.y)}}(L,a):a instanceof THREE.MeshPhongMaterial?(d=L,m=a,d.shininess.value=m.shininess,d.emissive.value=m.emissive,d.specular.value=m.specular,m.wrapAround&&d.wrapRGB.value.copy(m.wrapRGB)):a instanceof THREE.MeshLambertMaterial?(T=L,$=a,T.emissive.value=$.emissive,$.wrapAround&&T.wrapRGB.value.copy($.wrapRGB)):a instanceof THREE.MeshDepthMaterial?(L.mNear.value=e.near,L.mFar.value=e.far,L.opacity.value=a.opacity):a instanceof THREE.MeshNormalMaterial&&(L.opacity.value=a.opacity),s.receiveShadow&&!a._shadowPass&&function e(t,r){if(t.shadowMatrix)for(var i=0,n=0,o=r.length;n<o;n++){var a=r[n];a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(t.shadowMap.value[i]=a.shadowMap,t.shadowMapSize.value[i]=a.shadowMapSize,t.shadowMatrix.value[i]=a.shadowMatrix,t.shadowDarkness.value[i]=a.shadowDarkness,t.shadowBias.value[i]=a.shadowBias,i++)}}(L,i),function e(r){for(var i,n,o,a=0,s=r.length;a<s;a++){var h=r[a][0];if(!1!==h.needsUpdate){var l=h.type,c=h.value,u=r[a][1];switch(l){case"1i":case"i":t.uniform1i(u,c);break;case"1f":case"f":t.uniform1f(u,c);break;case"2f":t.uniform2f(u,c[0],c[1]);break;case"3f":t.uniform3f(u,c[0],c[1],c[2]);break;case"4f":t.uniform4f(u,c[0],c[1],c[2],c[3]);break;case"1iv":case"iv1":t.uniform1iv(u,c);break;case"3iv":case"iv":t.uniform3iv(u,c);break;case"1fv":case"fv1":t.uniform1fv(u,c);break;case"2fv":t.uniform2fv(u,c);break;case"3fv":case"fv":t.uniform3fv(u,c);break;case"4fv":t.uniform4fv(u,c);break;case"Matrix3fv":t.uniformMatrix3fv(u,!1,c);break;case"Matrix4fv":t.uniformMatrix4fv(u,!1,c);break;case"v2":t.uniform2f(u,c.x,c.y);break;case"v3":t.uniform3f(u,c.x,c.y,c.z);break;case"v4":t.uniform4f(u,c.x,c.y,c.z,c.w);break;case"c":t.uniform3f(u,c.r,c.g,c.b);break;case"v2v":void 0===h._array&&(h._array=new Float32Array(2*c.length));for(var E=0,f=c.length;E<f;E++)o=2*E,h._array[o]=c[E].x,h._array[o+1]=c[E].y;t.uniform2fv(u,h._array);break;case"v3v":void 0===h._array&&(h._array=new Float32Array(3*c.length));for(var E=0,f=c.length;E<f;E++)o=3*E,h._array[o]=c[E].x,h._array[o+1]=c[E].y,h._array[o+2]=c[E].z;t.uniform3fv(u,h._array);break;case"v4v":void 0===h._array&&(h._array=new Float32Array(4*c.length));for(var E=0,f=c.length;E<f;E++)o=4*E,h._array[o]=c[E].x,h._array[o+1]=c[E].y,h._array[o+2]=c[E].z,h._array[o+3]=c[E].w;t.uniform4fv(u,h._array);break;case"m3":t.uniformMatrix3fv(u,!1,c.elements);break;case"m3v":void 0===h._array&&(h._array=new Float32Array(9*c.length));for(var E=0,f=c.length;E<f;E++)c[E].flattenToArrayOffset(h._array,9*E);t.uniformMatrix3fv(u,!1,h._array);break;case"m4":t.uniformMatrix4fv(u,!1,c.elements);break;case"m4v":void 0===h._array&&(h._array=new Float32Array(16*c.length));for(var E=0,f=c.length;E<f;E++)c[E].flattenToArrayOffset(h._array,16*E);t.uniformMatrix4fv(u,!1,h._array);break;case"t":if(i=c,n=e2(),t.uniform1i(u,n),!i)continue;i instanceof THREE.CubeTexture||i.image instanceof Array&&6===i.image.length?e4(i,n):i instanceof THREE.WebGLRenderTargetCube?e6(i,n):y.setTexture(i,n);break;case"tv":void 0===h._array&&(h._array=[]);for(var E=0,f=h.value.length;E<f;E++)h._array[E]=e2();t.uniform1iv(u,h._array);for(var E=0,f=h.value.length;E<f;E++)i=h.value[E],n=h._array[E],i&&y.setTexture(i,n);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+l)}}}}(a.uniformsList)),g=A,v=s,t.uniformMatrix4fv(g.modelViewMatrix,!1,v._modelViewMatrix.elements),g.normalMatrix&&t.uniformMatrix3fv(g.normalMatrix,!1,v._normalMatrix.elements),null!==A.modelMatrix&&t.uniformMatrix4fv(A.modelMatrix,!1,s.matrixWorld.elements),C}function eG(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function eI(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLightColor.needsUpdate=t,e.directionalLightDirection.needsUpdate=t,e.pointLightColor.needsUpdate=t,e.pointLightPosition.needsUpdate=t,e.pointLightDistance.needsUpdate=t,e.pointLightDecay.needsUpdate=t,e.spotLightColor.needsUpdate=t,e.spotLightPosition.needsUpdate=t,e.spotLightDistance.needsUpdate=t,e.spotLightDirection.needsUpdate=t,e.spotLightAngleCos.needsUpdate=t,e.spotLightExponent.needsUpdate=t,e.spotLightDecay.needsUpdate=t,e.hemisphereLightSkyColor.needsUpdate=t,e.hemisphereLightGroundColor.needsUpdate=t,e.hemisphereLightDirection.needsUpdate=t}function e2(){var e=M;return e>=K&&THREE.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+K),M+=1,e}function eW(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function e3(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function ej(e,r,i){var n;i?(t.texParameteri(e,t.TEXTURE_WRAP_S,e5(r.wrapS)),t.texParameteri(e,t.TEXTURE_WRAP_T,e5(r.wrapT)),t.texParameteri(e,t.TEXTURE_MAG_FILTER,e5(r.magFilter)),t.texParameteri(e,t.TEXTURE_MIN_FILTER,e5(r.minFilter))):(t.texParameteri(e,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(e,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),(r.wrapS!==THREE.ClampToEdgeWrapping||r.wrapT!==THREE.ClampToEdgeWrapping)&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+r.sourceFile+" )"),t.texParameteri(e,t.TEXTURE_MAG_FILTER,eY(r.magFilter)),t.texParameteri(e,t.TEXTURE_MIN_FILTER,eY(r.minFilter)),r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+r.sourceFile+" )")),(n=W.get("EXT_texture_filter_anisotropic"))&&r.type!==THREE.FloatType&&r.type!==THREE.HalfFloatType&&(r.anisotropy>1||r.__currentAnisotropy)&&(t.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,y.getMaxAnisotropy())),r.__currentAnisotropy=r.anisotropy)}function eX(e,t){if(e.width>t||e.height>t){var r=t/Math.max(e.width,e.height),i=document.createElement("canvas");return i.width=Math.floor(e.width*r),i.height=Math.floor(e.height*r),i.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i.width,i.height),THREE.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+i.width+"x"+i.height,e),i}return e}function e4(e,r){if(6===e.image.length){if(e.needsUpdate){!e.image.__webglTextureCube&&(e.addEventListener("dispose",em),e.image.__webglTextureCube=t.createTexture(),y.info.memory.textures++),t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var i=e instanceof THREE.CompressedTexture,n=e.image[0]instanceof THREE.DataTexture,o=[],a=0;a<6;a++)!y.autoScaleCubemaps||i||n?o[a]=n?e.image[a].image:e.image[a]:o[a]=eX(e.image[a],J);var s=o[0],h=THREE.Math.isPowerOfTwo(s.width)&&THREE.Math.isPowerOfTwo(s.height),l=e5(e.format),c=e5(e.type);ej(t.TEXTURE_CUBE_MAP,e,h);for(var a=0;a<6;a++)if(i)for(var u,E=o[a].mipmaps,f=0,p=E.length;f<p;f++)u=E[f],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?ea().indexOf(l)>-1?t.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+a,f,l,u.width,u.height,0,u.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+a,f,l,u.width,u.height,0,l,c,u.data);else n?t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,l,o[a].width,o[a].height,0,l,c,o[a].data):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,l,l,c,o[a]);e.generateMipmaps&&h&&t.generateMipmap(t.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}}function e6(e,r){t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture)}function e7(e,r,i){t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,i,r.__webglTexture,0)}function eq(e,r){t.bindRenderbuffer(t.RENDERBUFFER,e),r.depthBuffer&&!r.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,r.width,r.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):r.depthBuffer&&r.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,r.width,r.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,r.width,r.height)}function eY(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?t.NEAREST:t.LINEAR}function e5(e){var r;if(e===THREE.RepeatWrapping)return t.REPEAT;if(e===THREE.ClampToEdgeWrapping)return t.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return t.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return t.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return t.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return t.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return t.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return t.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return t.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return t.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return t.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return t.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return t.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return t.BYTE;if(e===THREE.ShortType)return t.SHORT;if(e===THREE.UnsignedShortType)return t.UNSIGNED_SHORT;if(e===THREE.IntType)return t.INT;if(e===THREE.UnsignedIntType)return t.UNSIGNED_INT;if(e===THREE.FloatType)return t.FLOAT;if(null!==(r=W.get("OES_texture_half_float"))&&e===THREE.HalfFloatType)return r.HALF_FLOAT_OES;if(e===THREE.AlphaFormat)return t.ALPHA;if(e===THREE.RGBFormat)return t.RGB;if(e===THREE.RGBAFormat)return t.RGBA;if(e===THREE.LuminanceFormat)return t.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return t.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return t.FUNC_ADD;if(e===THREE.SubtractEquation)return t.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return t.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return t.ZERO;if(e===THREE.OneFactor)return t.ONE;if(e===THREE.SrcColorFactor)return t.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return t.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return t.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return t.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return t.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return t.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return t.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return t.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return t.SRC_ALPHA_SATURATE;if(null!==(r=W.get("WEBGL_compressed_texture_s3tc"))){if(e===THREE.RGB_S3TC_DXT1_Format)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(r=W.get("WEBGL_compressed_texture_pvrtc"))){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(r=W.get("EXT_blend_minmax"))){if(e===THREE.MinEquation)return r.MIN_EXT;if(e===THREE.MaxEquation)return r.MAX_EXT}return 0}this.setFaceCulling=function(e,r){e===THREE.CullFaceNone?t.disable(t.CULL_FACE):(r===THREE.FrontFaceDirectionCW?t.frontFace(t.CW):t.frontFace(t.CCW),e===THREE.CullFaceBack?t.cullFace(t.BACK):e===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK),t.enable(t.CULL_FACE))},this.setMaterialFaces=function(e){I.setDoubleSided(e.side===THREE.DoubleSide),I.setFlipSided(e.side===THREE.BackSide)},this.uploadTexture=function(e){void 0===e.__webglInit&&(e.__webglInit=!0,e.addEventListener("dispose",em),e.__webglTexture=t.createTexture(),y.info.memory.textures++),t.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,e.unpackAlignment),e.image=eX(e.image,Z);var r=e.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=e5(e.format),o=e5(e.type);ej(t.TEXTURE_2D,e,i);var a,s=e.mipmaps;if(e instanceof THREE.DataTexture){if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)a=s[h],t.texImage2D(t.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);e.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data)}else if(e instanceof THREE.CompressedTexture)for(var h=0,l=s.length;h<l;h++)a=s[h],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?ea().indexOf(n)>-1?t.compressedTexImage2D(t.TEXTURE_2D,h,n,a.width,a.height,0,a.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(t.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);else if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)a=s[h],t.texImage2D(t.TEXTURE_2D,h,n,n,o,a);e.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&i&&t.generateMipmap(t.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()},this.setTexture=function(e,r){t.activeTexture(t.TEXTURE0+r),e.needsUpdate?y.uploadTexture(e):t.bindTexture(t.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var r,i,n,o,a,s=e instanceof THREE.WebGLRenderTargetCube;if(e&&void 0===e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",eT),e.__webglTexture=t.createTexture(),y.info.memory.textures++;var h=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),l=e5(e.format),c=e5(e.type);if(s){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],t.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture),ej(t.TEXTURE_CUBE_MAP,e,h);for(var u=0;u<6;u++)e.__webglFramebuffer[u]=t.createFramebuffer(),e.__webglRenderbuffer[u]=t.createRenderbuffer(),t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,l,e.width,e.height,0,l,c,null),e7(e.__webglFramebuffer[u],e,t.TEXTURE_CUBE_MAP_POSITIVE_X+u),eq(e.__webglRenderbuffer[u],e);h&&t.generateMipmap(t.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=t.createFramebuffer(),e.shareDepthFrom?e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:e.__webglRenderbuffer=t.createRenderbuffer(),t.bindTexture(t.TEXTURE_2D,e.__webglTexture),ej(t.TEXTURE_2D,e,h),t.texImage2D(t.TEXTURE_2D,0,l,e.width,e.height,0,l,c,null),e7(e.__webglFramebuffer,e,t.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e.__webglRenderbuffer):eq(e.__webglRenderbuffer,e),h&&t.generateMipmap(t.TEXTURE_2D);s?t.bindTexture(t.TEXTURE_CUBE_MAP,null):t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null)}e?(r=s?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,n=e.height,o=0,a=0):(r=null,i=L,n=F,o=C,a=A),r!==_&&(t.bindFramebuffer(t.FRAMEBUFFER,r),t.viewport(o,a,i,n),_=r),P=i,B=n},this.readRenderTargetPixels=function(e,r,i,n,o,a){if(!(e instanceof THREE.WebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}if(e.__webglFramebuffer){if(e.format!==THREE.RGBAFormat){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");return}var s=!1;e.__webglFramebuffer!==_&&(t.bindFramebuffer(t.FRAMEBUFFER,e.__webglFramebuffer),s=!0),t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE?t.readPixels(r,i,n,o,t.RGBA,t.UNSIGNED_BYTE,a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."),s&&t.bindFramebuffer(t.FRAMEBUFFER,_)}},this.initMaterial=function(){THREE.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){THREE.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=void 0!==r.shareDepthFrom?r.shareDepthFrom:null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e,this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLExtensions=function(e){var t={};this.get=function(r){var i;if(void 0!==t[r])return t[r];switch(r){case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(r)}return null===i&&THREE.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=i,i}},THREE.WebGLProgram=function(){var e=0,t=function(e){var t,r,i=[];for(var n in e)!1!==(t=e[n])&&(r="#define "+n+" "+t,i.push(r));return i.join("\n")},r=function(e,t,r){for(var i={},n=0,o=r.length;n<o;n++){var a=r[n];i[a]=e.getUniformLocation(t,a)}return i},i=function(e,t,r){for(var i={},n=0,o=r.length;n<o;n++){var a=r[n];i[a]=e.getAttribLocation(t,a)}return i};return function(n,o,a,s){var h,l,c=n,u=c.context,E=a.defines,f=a.__webglShader.uniforms,p=a.attributes,d=a.__webglShader.vertexShader,m=a.__webglShader.fragmentShader,T=a.index0AttributeName;void 0===T&&!0===s.morphTargets&&(T="position");var $="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?$="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&($="SHADOWMAP_TYPE_PCF_SOFT");var g="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",R="ENVMAP_BLENDING_MULTIPLY";if(s.envMap){switch(a.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:g="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:g="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:g="ENVMAP_TYPE_SPHERE"}switch(a.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:v="ENVMAP_MODE_REFRACTION"}switch(a.combine){case THREE.MultiplyOperation:R="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:R="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:R="ENVMAP_BLENDING_ADD"}}var y=n.gammaFactor>0?n.gammaFactor:1,H=t(E),x=u.createProgram();a instanceof THREE.RawShaderMaterial?(h="",l=""):(h=["precision "+s.precision+" float;","precision "+s.precision+" int;",H,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",c.gammaInput?"#define GAMMA_INPUT":"",c.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+y,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+v:"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.flatShading?"#define FLAT_SHADED":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+$:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),l=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap||s.flatShading?"#extension GL_OES_standard_derivatives : enable":"",H,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",c.gammaInput?"#define GAMMA_INPUT":"",c.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+y,s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+g:"",s.envMap?"#define "+v:"",s.envMap?"#define "+R:"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.flatShading?"#define FLAT_SHADED":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+$:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var _=new THREE.WebGLShader(u,u.VERTEX_SHADER,h+d),b=new THREE.WebGLShader(u,u.FRAGMENT_SHADER,l+m);u.attachShader(x,_),u.attachShader(x,b),void 0!==T&&u.bindAttribLocation(x,0,T),u.linkProgram(x);var w=u.getProgramInfoLog(x);!1===u.getProgramParameter(x,u.LINK_STATUS)&&THREE.error("THREE.WebGLProgram: shader error: "+u.getError(),"gl.VALIDATE_STATUS",u.getProgramParameter(x,u.VALIDATE_STATUS),"gl.getPRogramInfoLog",w),""!==w&&THREE.warn("THREE.WebGLProgram: gl.getProgramInfoLog()"+w),u.deleteShader(_),u.deleteShader(b);var S=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];for(var M in s.useVertexTexture?(S.push("boneTexture"),S.push("boneTextureWidth"),S.push("boneTextureHeight")):S.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&S.push("logDepthBufFC"),f)S.push(M);this.uniforms=r(u,x,S),S=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var C=0;C<s.maxMorphTargets;C++)S.push("morphTarget"+C);for(var C=0;C<s.maxMorphNormals;C++)S.push("morphNormal"+C);for(var A in p)S.push(A);return this.attributes=i(u,x,S),this.attributesKeys=Object.keys(this.attributes),this.id=e++,this.code=o,this.usedTimes=1,this.program=x,this.vertexShader=_,this.fragmentShader=b,this}}(),THREE.WebGLShader=function(){var e=function(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")};return function(t,r,i){var n=t.createShader(r);return t.shaderSource(n,i),t.compileShader(n),!1===t.getShaderParameter(n,t.COMPILE_STATUS)&&THREE.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(n)&&THREE.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(n),e(i)),n}}(),THREE.WebGLState=function(e,t){var r=new Uint8Array(16),i=new Uint8Array(16),n=null,o=null,a=null,s=null,h=null,l=null,c=null,u=null,E=null,f=null,p=null,d=null,m=null,T=null,$=null,g=null;this.initAttributes=function(){for(var e=0,t=r.length;e<t;e++)r[e]=0},this.enableAttribute=function(t){r[t]=1,0===i[t]&&(e.enableVertexAttribArray(t),i[t]=1)},this.disableUnusedAttributes=function(){for(var t=0,n=i.length;t<n;t++)i[t]!==r[t]&&(e.disableVertexAttribArray(t),i[t]=0)},this.setBlending=function(r,i,u,E,f,p,d){r!==n&&(r===THREE.NoBlending?e.disable(e.BLEND):r===THREE.AdditiveBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):r===THREE.SubtractiveBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):r===THREE.MultiplyBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):r===THREE.CustomBlending?e.enable(e.BLEND):(e.enable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),n=r),r===THREE.CustomBlending?(f=f||i,p=p||u,d=d||E,(i!==o||f!==h)&&(e.blendEquationSeparate(t(i),t(f)),o=i,h=f),(u!==a||E!==s||p!==l||d!==c)&&(e.blendFuncSeparate(t(u),t(E),t(p),t(d)),a=u,s=E,l=p,c=d)):(o=null,a=null,s=null,h=null,l=null,c=null)},this.setDepthTest=function(t){u!==t&&(t?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),u=t)},this.setDepthWrite=function(t){E!==t&&(e.depthMask(t),E=t)},this.setColorWrite=function(t){f!==t&&(e.colorMask(t,t,t,t),f=t)},this.setDoubleSided=function(t){p!==t&&(t?e.disable(e.CULL_FACE):e.enable(e.CULL_FACE),p=t)},this.setFlipSided=function(t){d!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),d=t)},this.setLineWidth=function(t){t!==m&&(e.lineWidth(t),m=t)},this.setPolygonOffset=function(t,r,i){T!==t&&(t?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),T=t),t&&($!==r||g!==i)&&(e.polygonOffset(r,i),$=r,g=i)},this.reset=function(){for(var e=0;e<i.length;e++)i[e]=0;n=null,u=null,E=null,f=null,p=null,d=null}},THREE.LensFlarePlugin=function(e,t){var r,i,n,o,a,s,h,l,c=e.context,u=function(){var t,u,E,f,p,d,m=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),T=new Uint16Array([0,1,2,0,2,3]);r=c.createBuffer(),i=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,r),c.bufferData(c.ARRAY_BUFFER,m,c.STATIC_DRAW),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,i),c.bufferData(c.ELEMENT_ARRAY_BUFFER,T,c.STATIC_DRAW),h=c.createTexture(),l=c.createTexture(),c.bindTexture(c.TEXTURE_2D,h),c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,16,0,c.RGB,c.UNSIGNED_BYTE,null),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.bindTexture(c.TEXTURE_2D,l),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),n=(u=t=(s=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0)?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},E=c.createProgram(),f=c.createShader(c.FRAGMENT_SHADER),p=c.createShader(c.VERTEX_SHADER),d="precision "+e.getPrecision()+" float;\n",c.shaderSource(f,d+u.fragmentShader),c.shaderSource(p,d+u.vertexShader),c.compileShader(f),c.compileShader(p),c.attachShader(E,f),c.attachShader(E,p),c.linkProgram(E),E),o={vertex:c.getAttribLocation(n,"position"),uv:c.getAttribLocation(n,"uv")},a={renderType:c.getUniformLocation(n,"renderType"),map:c.getUniformLocation(n,"map"),occlusionMap:c.getUniformLocation(n,"occlusionMap"),opacity:c.getUniformLocation(n,"opacity"),color:c.getUniformLocation(n,"color"),scale:c.getUniformLocation(n,"scale"),rotation:c.getUniformLocation(n,"rotation"),screenPosition:c.getUniformLocation(n,"screenPosition")}};this.render=function(E,f,p,d){if(0!==t.length){var m=new THREE.Vector3,T=d/p,$=.5*p,g=.5*d,v=16/d,R=new THREE.Vector2(v*T,v),y=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1);void 0===n&&u(),c.useProgram(n),c.enableVertexAttribArray(o.vertex),c.enableVertexAttribArray(o.uv),c.uniform1i(a.occlusionMap,0),c.uniform1i(a.map,1),c.bindBuffer(c.ARRAY_BUFFER,r),c.vertexAttribPointer(o.vertex,2,c.FLOAT,!1,16,0),c.vertexAttribPointer(o.uv,2,c.FLOAT,!1,16,8),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,i),c.disable(c.CULL_FACE),c.depthMask(!1);for(var x=0,_=t.length;x<_;x++){v=16/d,R.set(v*T,v);var b=t[x];if(m.set(b.matrixWorld.elements[12],b.matrixWorld.elements[13],b.matrixWorld.elements[14]),m.applyMatrix4(f.matrixWorldInverse),m.applyProjection(f.projectionMatrix),y.copy(m),H.x=y.x*$+$,H.y=y.y*g+g,s||H.x>0&&H.x<p&&H.y>0&&H.y<d){c.activeTexture(c.TEXTURE1),c.bindTexture(c.TEXTURE_2D,h),c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,H.x-8,H.y-8,16,16,0),c.uniform1i(a.renderType,0),c.uniform2f(a.scale,R.x,R.y),c.uniform3f(a.screenPosition,y.x,y.y,y.z),c.disable(c.BLEND),c.enable(c.DEPTH_TEST),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0),c.activeTexture(c.TEXTURE0),c.bindTexture(c.TEXTURE_2D,l),c.copyTexImage2D(c.TEXTURE_2D,0,c.RGBA,H.x-8,H.y-8,16,16,0),c.uniform1i(a.renderType,1),c.disable(c.DEPTH_TEST),c.activeTexture(c.TEXTURE1),c.bindTexture(c.TEXTURE_2D,h),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0),b.positionScreen.copy(y),b.customUpdateCallback?b.customUpdateCallback(b):b.updateLensFlares(),c.uniform1i(a.renderType,2),c.enable(c.BLEND);for(var w=0,S=b.lensFlares.length;w<S;w++){var M=b.lensFlares[w];M.opacity>.001&&M.scale>.001&&(y.x=M.x,y.y=M.y,y.z=M.z,v=M.size*M.scale/d,R.x=v*T,R.y=v,c.uniform3f(a.screenPosition,y.x,y.y,y.z),c.uniform2f(a.scale,R.x,R.y),c.uniform1f(a.rotation,M.rotation),c.uniform1f(a.opacity,M.opacity),c.uniform3f(a.color,M.color.r,M.color.g,M.color.b),e.state.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),e.setTexture(M.texture,1),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0))}}}c.enable(c.CULL_FACE),c.enable(c.DEPTH_TEST),c.depthMask(!0),e.resetGLState()}}},THREE.ShadowMapPlugin=function(e,t,r,i){var n,o,a,s,h=e.context,l=new THREE.Frustum,c=new THREE.Matrix4,u=new THREE.Vector3,E=new THREE.Vector3,f=new THREE.Vector3,p=[],d=THREE.ShaderLib.depthRGBA,m=THREE.UniformsUtils.clone(d.uniforms);function T(e,t,i){if(t.visible){var n=r[t.id];if(n&&t.castShadow&&(!1===t.frustumCulled||!0===l.intersectsObject(t)))for(var o=0,a=n.length;o<a;o++){var s=n[o];t._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),p.push(s)}for(var o=0,a=t.children.length;o<a;o++)T(e,t.children[o],i)}}function $(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,n=r.pointsFrustum,o=0;o<8;o++)i[o]=new THREE.Vector3,n[o]=new THREE.Vector3;var a=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return n[0].set(-1,-1,a),n[1].set(1,-1,a),n[2].set(-1,1,a),n[3].set(1,1,a),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function g(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],n=e.shadowCascadeFarZ[t],o=r.pointsFrustum;o[0].z=i,o[1].z=i,o[2].z=i,o[3].z=i,o[4].z=n,o[5].z=n,o[6].z=n,o[7].z=n}function v(e,t){var r=t.shadowCamera,i=t.pointsFrustum,n=t.pointsWorld;u.set(1/0,1/0,1/0),E.set(-1/0,-1/0,-1/0);for(var o=0;o<8;o++){var a=n[o];a.copy(i[o]),a.unproject(e),a.applyMatrix4(r.matrixWorldInverse),a.x<u.x&&(u.x=a.x),a.x>E.x&&(E.x=a.x),a.y<u.y&&(u.y=a.y),a.y>E.y&&(E.y=a.y),a.z<u.z&&(u.z=a.z),a.z>E.z&&(E.z=a.z)}r.left=u.x,r.right=E.x,r.top=E.y,r.bottom=u.y,r.updateProjectionMatrix()}function R(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}n=new THREE.ShaderMaterial({uniforms:m,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}),o=new THREE.ShaderMaterial({uniforms:m,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,morphTargets:!0}),a=new THREE.ShaderMaterial({uniforms:m,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,skinning:!0}),s=new THREE.ShaderMaterial({uniforms:m,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,morphTargets:!0,skinning:!0}),n._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0,s._shadowPass=!0,this.render=function(r,u){if(!1!==e.shadowMapEnabled){var E,d,m,y,H,x,_,b,w,S,M,C,A,L=[],F=0;for(h.clearColor(1,1,1,1),h.disable(h.BLEND),h.enable(h.CULL_FACE),h.frontFace(h.CCW),e.shadowMapCullFace===THREE.CullFaceFront?h.cullFace(h.FRONT):h.cullFace(h.BACK),e.state.setDepthTest(!0),E=0,d=t.length;E<d;E++)if((A=t[E]).castShadow){if(A instanceof THREE.DirectionalLight&&A.shadowCascade)for(H=0;H<A.shadowCascadeCount;H++){if(A.shadowCascadeArray[H])B=A.shadowCascadeArray[H];else{(B=$(A,H)).originalCamera=u;var P=new THREE.Gyroscope;P.position.copy(A.shadowCascadeOffset),P.add(B),P.add(B.target),u.add(P),A.shadowCascadeArray[H]=B}g(A,H),L[F]=B,F++}else L[F]=A,F++}for(E=0,d=L.length;E<d;E++){if(!(A=L[E]).shadowMap){var B,D,U,V,z=THREE.LinearFilter;e.shadowMapType===THREE.PCFSoftShadowMap&&(z=THREE.NearestFilter);var k={minFilter:z,magFilter:z,format:THREE.RGBAFormat};A.shadowMap=new THREE.WebGLRenderTarget(A.shadowMapWidth,A.shadowMapHeight,k),A.shadowMapSize=new THREE.Vector2(A.shadowMapWidth,A.shadowMapHeight),A.shadowMatrix=new THREE.Matrix4}if(!A.shadowCamera){if(A instanceof THREE.SpotLight)A.shadowCamera=new THREE.PerspectiveCamera(A.shadowCameraFov,A.shadowMapWidth/A.shadowMapHeight,A.shadowCameraNear,A.shadowCameraFar);else if(A instanceof THREE.DirectionalLight)A.shadowCamera=new THREE.OrthographicCamera(A.shadowCameraLeft,A.shadowCameraRight,A.shadowCameraTop,A.shadowCameraBottom,A.shadowCameraNear,A.shadowCameraFar);else{THREE.error("THREE.ShadowMapPlugin: Unsupported light type for shadow",A);continue}r.add(A.shadowCamera),!0===r.autoUpdate&&r.updateMatrixWorld()}for(A.shadowCameraVisible&&!A.cameraHelper&&(A.cameraHelper=new THREE.CameraHelper(A.shadowCamera),r.add(A.cameraHelper)),A.isVirtual&&B.originalCamera==u&&v(u,A),x=A.shadowMap,_=A.shadowMatrix,(b=A.shadowCamera).position.setFromMatrixPosition(A.matrixWorld),f.setFromMatrixPosition(A.target.matrixWorld),b.lookAt(f),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),A.cameraHelper&&(A.cameraHelper.visible=A.shadowCameraVisible),A.shadowCameraVisible&&A.cameraHelper.update(),_.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),_.multiply(b.projectionMatrix),_.multiply(b.matrixWorldInverse),c.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),l.setFromMatrix(c),e.setRenderTarget(x),e.clear(),p.length=0,T(r,r,b),m=0,y=p.length;m<y;m++)C=(M=p[m]).object,w=M.buffer,D=R(C),U=void 0!==C.geometry.morphTargets&&C.geometry.morphTargets.length>0&&D.morphTargets,V=C instanceof THREE.SkinnedMesh&&D.skinning,S=C.customDepthMaterial?C.customDepthMaterial:V?U?s:a:U?o:n,e.setMaterialFaces(D),w instanceof THREE.BufferGeometry?e.renderBufferDirect(b,t,null,S,w,C):e.renderBuffer(b,t,null,S,w,C);for(m=0,y=i.length;m<y;m++)(C=(M=i[m]).object).visible&&C.castShadow&&(C._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,C.matrixWorld),e.renderImmediateObject(b,t,null,n,C))}var N=e.getClearColor(),O=e.getClearAlpha();h.clearColor(N.r,N.g,N.b,O),h.enable(h.BLEND),e.shadowMapCullFace===THREE.CullFaceFront&&h.cullFace(h.BACK),e.resetGLState()}}},THREE.SpritePlugin=function(e,t){var r,i,n,o,a,s,h=e.context,l=new THREE.Vector3,c=new THREE.Quaternion,u=new THREE.Vector3,E=function(){var t,l,c,u=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),E=new Uint16Array([0,1,2,0,2,3]);r=h.createBuffer(),i=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,r),h.bufferData(h.ARRAY_BUFFER,u,h.STATIC_DRAW),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,i),h.bufferData(h.ELEMENT_ARRAY_BUFFER,E,h.STATIC_DRAW),n=(t=h.createProgram(),l=h.createShader(h.VERTEX_SHADER),c=h.createShader(h.FRAGMENT_SHADER),h.shaderSource(l,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),h.shaderSource(c,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),h.compileShader(l),h.compileShader(c),h.attachShader(t,l),h.attachShader(t,c),h.linkProgram(t),t),o={position:h.getAttribLocation(n,"position"),uv:h.getAttribLocation(n,"uv")},a={uvOffset:h.getUniformLocation(n,"uvOffset"),uvScale:h.getUniformLocation(n,"uvScale"),rotation:h.getUniformLocation(n,"rotation"),scale:h.getUniformLocation(n,"scale"),color:h.getUniformLocation(n,"color"),map:h.getUniformLocation(n,"map"),opacity:h.getUniformLocation(n,"opacity"),modelViewMatrix:h.getUniformLocation(n,"modelViewMatrix"),projectionMatrix:h.getUniformLocation(n,"projectionMatrix"),fogType:h.getUniformLocation(n,"fogType"),fogDensity:h.getUniformLocation(n,"fogDensity"),fogNear:h.getUniformLocation(n,"fogNear"),fogFar:h.getUniformLocation(n,"fogFar"),fogColor:h.getUniformLocation(n,"fogColor"),alphaTest:h.getUniformLocation(n,"alphaTest")};var f=document.createElement("canvas");f.width=8,f.height=8;var p=f.getContext("2d");p.fillStyle="white",p.fillRect(0,0,8,8),(s=new THREE.Texture(f)).needsUpdate=!0};function f(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}this.render=function(p,d){if(0!==t.length){void 0===n&&E(),h.useProgram(n),h.enableVertexAttribArray(o.position),h.enableVertexAttribArray(o.uv),h.disable(h.CULL_FACE),h.enable(h.BLEND),h.bindBuffer(h.ARRAY_BUFFER,r),h.vertexAttribPointer(o.position,2,h.FLOAT,!1,16,0),h.vertexAttribPointer(o.uv,2,h.FLOAT,!1,16,8),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,i),h.uniformMatrix4fv(a.projectionMatrix,!1,d.projectionMatrix.elements),h.activeTexture(h.TEXTURE0),h.uniform1i(a.map,0);var m=0,T=0,$=p.fog;$?(h.uniform3f(a.fogColor,$.color.r,$.color.g,$.color.b),$ instanceof THREE.Fog?(h.uniform1f(a.fogNear,$.near),h.uniform1f(a.fogFar,$.far),h.uniform1i(a.fogType,1),m=1,T=1):$ instanceof THREE.FogExp2&&(h.uniform1f(a.fogDensity,$.density),h.uniform1i(a.fogType,2),m=2,T=2)):(h.uniform1i(a.fogType,0),m=0,T=0);for(var g=0,v=t.length;g<v;g++){var R=t[g];R._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,R.matrixWorld),R.z=-R._modelViewMatrix.elements[14]}t.sort(f);for(var y=[],g=0,v=t.length;g<v;g++){var R=t[g],H=R.material;h.uniform1f(a.alphaTest,H.alphaTest),h.uniformMatrix4fv(a.modelViewMatrix,!1,R._modelViewMatrix.elements),R.matrixWorld.decompose(l,c,u),y[0]=u.x,y[1]=u.y;var x=0;p.fog&&H.fog&&(x=T),m!==x&&(h.uniform1i(a.fogType,x),m=x),null!==H.map?(h.uniform2f(a.uvOffset,H.map.offset.x,H.map.offset.y),h.uniform2f(a.uvScale,H.map.repeat.x,H.map.repeat.y)):(h.uniform2f(a.uvOffset,0,0),h.uniform2f(a.uvScale,1,1)),h.uniform1f(a.opacity,H.opacity),h.uniform3f(a.color,H.color.r,H.color.g,H.color.b),h.uniform1f(a.rotation,H.rotation),h.uniform2fv(a.scale,y),e.state.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),e.state.setDepthTest(H.depthTest),e.state.setDepthWrite(H.depthWrite),H.map&&H.map.image&&H.map.image.width?e.setTexture(H.map,0):e.setTexture(s,0),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0)}h.enable(h.CULL_FACE),e.resetGLState()}}},THREE.GeometryUtils={merge:function(e,t,r){var i;THREE.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,r)},center:function(e){return THREE.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,t);return n.load(e,function(e){o.image=e,o.needsUpdate=!0,r&&r(o)},void 0,function(e){i&&i(e)}),o.sourceFile=e,o},loadTextureCube:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture([],t);o.flipY=!1;for(var a=0,s=function(t){n.load(e[t],function(e){o.images[t]=e,6===(a+=1)&&(o.needsUpdate=!0,r&&r(o))},void 0,i)},h=0,l=e.length;h<l;++h)s(h);return o},loadCompressedTexture:function(){THREE.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){THREE.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(e,t){var r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]};t|=1;var i=e.width,n=e.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;c<i;c++)for(var u=0;u<n;u++){var E=u-1<0?0:u-1,f=u+1>n-1?n-1:u+1,p=c-1<0?0:c-1,d=c+1>i-1?i-1:c+1,m=[],T=[0,0,s[(u*i+c)*4]/255*t];m.push([-1,0,s[(u*i+p)*4]/255*t]),m.push([-1,-1,s[(E*i+p)*4]/255*t]),m.push([0,-1,s[(E*i+c)*4]/255*t]),m.push([1,-1,s[(E*i+d)*4]/255*t]),m.push([1,0,s[(u*i+d)*4]/255*t]),m.push([1,1,s[(f*i+d)*4]/255*t]),m.push([0,1,s[(f*i+c)*4]/255*t]),m.push([-1,1,s[(f*i+p)*4]/255*t]);for(var $=[],g=m.length,v=0;v<g;v++){var R,y,H=m[v],x=m[(v+1)%g];H=r(H,T),x=r(x,T),$.push(function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]}((R=H,y=x,[R[1]*y[2]-R[2]*y[1],R[2]*y[0]-R[0]*y[2],R[0]*y[1]-R[1]*y[0]])))}for(var _=[0,0,0],v=0;v<$.length;v++)_[0]+=$[v][0],_[1]+=$[v][1],_[2]+=$[v][2];_[0]/=$.length,_[1]/=$.length,_[2]/=$.length;var b=(u*i+c)*4;l[b]=(_[0]+1)/2*255|0,l[b+1]=(_[1]+1)/2*255|0,l[b+2]=255*_[2]|0,l[b+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,r){for(var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;h<i;h++)n[3*h]=o,n[3*h+1]=a,n[3*h+2]=s;var l=new THREE.DataTexture(n,e,t,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;i<n;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(e){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;return r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,n=0,o=String(e).split(""),a=o.length,s=[];for(t=0;t<a;t++){var h=new THREE.Path,l=this.extractGlyphPoints(o[t],r,i,n,h);n+=l.offset,s.push(l.path)}return{paths:s,offset:n/2}},extractGlyphPoints:function(e,t,r,i,n){var o,a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x=[],_=t.glyphs[e]||t.glyphs["?"];if(_){if(_.o)for(o=0,c=(h=_._cachedOutline||(_._cachedOutline=_.o.split(" "))).length,u=r,E=r;o<c;)switch(l=h[o++]){case"m":f=h[o++]*u+i,p=h[o++]*E,n.moveTo(f,p);break;case"l":f=h[o++]*u+i,p=h[o++]*E,n.lineTo(f,p);break;case"q":if(d=h[o++]*u+i,m=h[o++]*E,g=h[o++]*u+i,v=h[o++]*E,n.quadraticCurveTo(g,v,d,m),H=x[x.length-1])for(a=1,T=H.x,$=H.y,s=this.divisions;a<=s;a++){var b=a/s;THREE.Shape.Utils.b2(b,T,g,d),THREE.Shape.Utils.b2(b,$,v,m)}break;case"b":if(d=h[o++]*u+i,m=h[o++]*E,g=h[o++]*u+i,v=h[o++]*E,R=h[o++]*u+i,y=h[o++]*E,n.bezierCurveTo(g,v,R,y,d,m),H=x[x.length-1])for(a=1,T=H.x,$=H.y,s=this.divisions;a<=s;a++){var b=a/s;THREE.Shape.Utils.b3(b,T,g,R,d),THREE.Shape.Utils.b3(b,$,v,y,m)}}return{offset:_.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){var r=void 0!==(t=t||{}).size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,n=void 0!==t.font?t.font:"helvetiker",o=void 0!==t.weight?t.weight:"normal",a=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=o,THREE.FontUtils.style=a;for(var s=THREE.FontUtils.drawText(e).paths,h=[],l=0,c=s.length;l<c;l++)Array.prototype.push.apply(h,s[l].toShapes());return h},function(e){var t=function(e,t){var n,o,a,s,h,l,c,u,E=e.length;if(E<3)return null;var f=[],p=[],d=[];if(r(e)>0)for(o=0;o<E;o++)p[o]=o;else for(o=0;o<E;o++)p[o]=E-1-o;var m=E,T=2*m;for(o=m-1;m>2;){if(T--<=0){if(THREE.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()"),t)return d;return f}if(m<=(n=o)&&(n=0),m<=(o=n+1)&&(o=0),m<=(a=o+1)&&(a=0),i(e,n,o,a,m,p)){for(s=p[n],h=p[o],l=p[a],f.push([e[s],e[h],e[l]]),d.push([p[n],p[o],p[a]]),c=o,u=o+1;u<m;c++,u++)p[c]=p[u];T=2*--m}}return t?d:f},r=function(e){for(var t=e.length,r=0,i=t-1,n=0;n<t;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return .5*r},i=function(e,t,r,i,n,o){var a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_,b,w,S,M;if(s=e[o[t]].x,h=e[o[t]].y,l=e[o[r]].x,c=e[o[r]].y,u=e[o[i]].x,1e-10>(l-s)*((E=e[o[i]].y)-h)-(c-h)*(u-s))return!1;for(a=0,d=u-l,m=E-c,T=s-u,$=h-E,g=l-s,v=c-h;a<n;a++)if(f=e[o[a]].x,p=e[o[a]].y,(f!==s||p!==h)&&(f!==l||p!==c)&&(f!==u||p!==E)&&(R=f-s,y=p-h,H=f-l,x=p-c,_=f-u,b=p-E,M=d*x-m*H,w=g*y-v*R,S=T*b-$*_,M>=-.0000000001&&S>=-.0000000001&&w>=-.0000000001))return!1;return!0};e.Triangulate=t,e.Triangulate.area=r}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Audio=function(e){THREE.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.isPlaying=!1},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.load=function(e){var t=this,r=new XMLHttpRequest;return r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(e){t.context.decodeAudioData(this.response,function(e){t.source.buffer=e,t.autoplay&&t.play()})},r.send(),this},THREE.Audio.prototype.play=function(){if(!0===this.isPlaying){THREE.warn("THREE.Audio: Audio is already playing.");return}var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.connect(this.panner),e.start(0,this.startTime),this.isPlaying=!0,this.source=e},THREE.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},THREE.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(e){this.source.loop=e},THREE.Audio.prototype.setRefDistance=function(e){this.panner.refDistance=e},THREE.Audio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},THREE.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},THREE.Audio.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3,t=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a);var s=this.context.listener,h=this.up;this.matrixWorld.decompose(e,t,r),i.set(0,0,-1).applyQuaternion(t),n.subVectors(e,o),s.setPosition(e.x,e.y,e.z),s.setOrientation(i.x,i.y,i.z,h.x,h.y,h.z),s.setVelocity(n.x,n.y,n.z),o.copy(e)}}(),THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return THREE.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=e;r++)i.push(o+=(t=this.getPoint(r/e)).distanceTo(n)),n=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r=this.getLengths(),i=0,n=r.length;o=t||e*r[n-1];for(var o,a,s=0,h=n-1;s<=h;)if((a=r[i=Math.floor(s+(h-s)/2)]-o)<0)s=i+1;else if(a>0)h=i-1;else{h=i;break}if(r[i=h]==o){var l=i/(n-1);return l}var c=r[i],u=r[i+1],l=(i+(o-c)/(u-c))/(n-1);return l},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,r=e+1e-4;t<0&&(t=0),r>1&&(r=1);var i=this.getPoint(t);return this.getPoint(r).clone().sub(i).normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return -3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e,t,r,i,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,n){var o=(r-e)*.5,a=(i-t)*.5,s=n*n;return(2*t-2*r+o+a)*(n*s)+(-3*t+3*r-2*o-a)*s+o*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r,i=e*this.getLength(),n=this.getCurveLengths(),o=0;o<n.length;){if(n[o]>=i){var a=1-(t=n[o]-i)/(r=this.curves[o]).getLength();return r.getPointAt(a)}o++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;e<i;e++)t.push(r+=this.curves[e].getLength());return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,n,o,a,s,h,l,c=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var u=c[0]instanceof THREE.Vector3;for(s=0,l=u?new THREE.Vector3:new THREE.Vector2,h=c.length;s<h;s++)(a=c[s]).x>e?e=a.x:a.x<i&&(i=a.x),a.y>t?t=a.y:a.y<n&&(n=a.y),u&&(a.z>r?r=a.z:a.z<o&&(o=a.z)),l.add(a);var E={minX:i,minY:n,maxX:e,maxY:t};return u&&(E.maxZ=r,E.minZ=o),E},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,n=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,n=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=e.length;r<i;r++){o=(n=e[r]).x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o);var l=t.getPoint(s),c=t.getTangent(s);c.set(-c.y,c.x).multiplyScalar(a),n.x=l.x+c.x,n.y=l.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3,t=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Quaternion,o=new THREE.Vector3;return function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(i,n,o),this.matrix.decompose(e,t,r),this.matrixWorld.compose(i,t,o)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var s=0,h=this.children.length;s<h;s++)this.children[s].updateMatrixWorld(a)}}(),THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],o=i[i.length-1],a=new THREE.LineCurve(new THREE.Vector2(n,o),new THREE.Vector2(e,t));this.curves.push(a),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,a=o[o.length-2],s=o[o.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],o=[new THREE.Vector2(i,n)];Array.prototype.push.apply(o,e);var a=new THREE.SplineCurve(o);this.curves.push(a),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],h=a[a.length-1];this.absarc(e+s,t+h,r,i,n,o)},THREE.Path.prototype.absarc=function(e,t,r,i,n,o){this.absellipse(e,t,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,o,a){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(e+h,t+l,r,i,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,n,o,a);this.curves.push(h);var l=h.getPoint(1);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;i<e;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r=[];for(a=0,s=this.actions.length;a<s;a++)switch(l=(h=this.actions[a]).action,c=h.args,l){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(c[0],c[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(u=c[2],E=c[3],d=c[0],m=c[1],r.length>0?(T=(g=r[r.length-1]).x,$=g.y):(T=(g=this.actions[a-1].args)[g.length-2],$=g[g.length-1]),v=1;v<=e;v++)R=v/e,y=THREE.Shape.Utils.b2(R,T,d,u),H=THREE.Shape.Utils.b2(R,$,m,E),r.push(new THREE.Vector2(y,H));break;case THREE.PathActions.BEZIER_CURVE_TO:for(u=c[4],E=c[5],d=c[0],m=c[1],f=c[2],p=c[3],r.length>0?(T=(g=r[r.length-1]).x,$=g.y):(T=(g=this.actions[a-1].args)[g.length-2],$=g[g.length-1]),v=1;v<=e;v++)R=v/e,y=THREE.Shape.Utils.b3(R,T,d,f,u),H=THREE.Shape.Utils.b3(R,$,m,p,E),r.push(new THREE.Vector2(y,H));break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[a-1].args;var i=[new THREE.Vector2(g[g.length-2],g[g.length-1])],n=e*c[0].length;i=i.concat(c[0]);var o=new THREE.SplineCurve(i);for(v=1;v<=n;v++)r.push(o.getPointAt(v/n));break;case THREE.PathActions.ARC:var a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_=c[0],b=c[1],w=c[2],S=c[3],M=c[4],C=!!c[5],A=M-S,L=2*e;for(v=1;v<=L;v++)R=v/L,C||(R=1-R),y=_+w*Math.cos(x=S+R*A),H=b+w*Math.sin(x),r.push(new THREE.Vector2(y,H));break;case THREE.PathActions.ELLIPSE:var x,_=c[0],b=c[1],F=c[2],P=c[3],S=c[4],M=c[5],C=!!c[6],A=M-S,L=2*e;for(v=1;v<=L;v++)R=v/L,C||(R=1-R),y=_+F*Math.cos(x=S+R*A),H=b+P*Math.sin(x),r.push(new THREE.Vector2(y,H))}var B=r[r.length-1];return 1e-10>Math.abs(B.x-r[0].x)&&1e-10>Math.abs(B.y-r[0].y)&&r.splice(r.length-1,1),t&&r.push(r[0]),r},THREE.Path.prototype.toShapes=function(e,t){function r(e){for(var t=[],r=0,i=e.length;r<i;r++){var n=e[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,t.push(o)}return t}function i(e,t){for(var r=t.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=t[n],s=t[o],h=s.x-a.x,l=s.y-a.y;if(Math.abs(l)>1e-10){if(l<0&&(a=t[o],h=-h,s=t[n],l=-l),e.y<a.y||e.y>s.y)continue;if(e.y==a.y){if(e.x==a.x)return!0}else{var c=l*(e.x-a.x)-h*(e.y-a.y);if(0==c)return!0;if(c<0)continue;i=!i}}else{if(e.y!=a.y)continue;if(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x)return!0}}return i}var n,o,a,s,h,l,c=function e(t){var r,i,n,o,a,s=[],h=new THREE.Path;for(r=0,i=t.length;r<i;r++)a=(n=t[r]).args,(o=n.action)==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(s.push(h),h=new THREE.Path),h[o].apply(h,a);return 0!=h.actions.length&&s.push(h),s}(this.actions);if(0==c.length)return[];if(!0===t)return r(c);var u,E,f,p=[];if(1==c.length)return E=c[0],(f=new THREE.Shape).actions=E.actions,f.curves=E.curves,p.push(f),p;var d=!THREE.Shape.Utils.isClockWise(c[0].getPoints());d=e?!d:d;var m=[],T=[],$=[],g=0;for(o=0,T[g]=void 0,$[g]=[],a=c.length;o<a;o++)n=(E=c[o]).getPoints(),u=THREE.Shape.Utils.isClockWise(n),(u=e?!u:u)?(!d&&T[g]&&g++,T[g]={s:new THREE.Shape,p:n},T[g].s.actions=E.actions,T[g].s.curves=E.curves,d&&g++,$[g]=[]):$[g].push({h:E,p:n[0]});if(!T[0])return r(c);if(T.length>1){for(var v=!1,R=[],y=0,H=T.length;y<H;y++)m[y]=[];for(var y=0,H=T.length;y<H;y++)for(var x=$[y],_=0;_<x.length;_++){for(var b=x[_],w=!0,S=0;S<T.length;S++)i(b.p,T[S].p)&&(y!=S&&R.push({froms:y,tos:S,hole:_}),w?(w=!1,m[S].push(b)):v=!0);w&&m[y].push(b)}R.length>0&&!v&&($=m)}for(o=0,a=T.length;o<a;o++)for(p.push(f=T[o].s),s=$[o],h=0,l=s.length;h<l;h++)f.holes.push(s[h].h);return p},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-i.x,l=n.y-i.y,c=e.x-i.x,u=e.y-i.y,E=s*h-a*l,f=s*c-a*u;if(Math.abs(E)>1e-10){if(E>0){if(f<0||f>E||(p=l*c-h*u)<0||p>E)return[]}else if(f>0||f<E||(p=l*c-h*u)>0||p<E)return[];if(0==p)return o&&(0==f||f==E)?[]:[e];if(p==E)return o&&(0==f||f==E)?[]:[t];if(0==f)return[i];if(f==E)return[n];var p,d=p/E;return[{x:e.x+d*a,y:e.y+d*s}]}if(0!=f||l*c!=h*u)return[];var m,T,$,g,v,R,y,H,x=0==a&&0==s,_=0==h&&0==l;if(x&&_)return e.x!=i.x||e.y!=i.y?[]:[e];if(x)return r(i,n,e)?[e]:[];if(_)return r(e,t,i)?[i]:[];if(0!=a?(e.x<t.x?(m=e,$=e.x,T=t,g=t.x):(m=t,$=t.x,T=e,g=e.x),i.x<n.x?(v=i,y=i.x,R=n,H=n.x):(v=n,y=n.x,R=i,H=i.x)):(e.y<t.y?(m=e,$=e.y,T=t,g=t.y):(m=t,$=t.y,T=e,g=e.y),i.y<n.y?(v=i,y=i.y,R=n,H=n.y):(v=n,y=n.y,R=i,H=i.y)),$<=y)return g<y?[]:g==y?o?[]:[v]:g<=H?[v,T]:[v,R];return $>H?[]:$==H?o?[]:[m]:g<=H?[m,T]:[m,R]}function n(e,t,r,i){var n=t.x-e.x,o=t.y-e.y,a=r.x-e.x,s=r.y-e.y,h=i.x-e.x,l=i.y-e.y,c=n*s-o*a,u=n*l-o*h;if(!(Math.abs(c)>1e-10))return u>0;var E=h*s-l*a;return c>0?u>=0&&E>=0:u>=0||E>=0}for(var o,a,s,h,l,c,u={},E=e.concat(),f=0,p=t.length;f<p;f++)Array.prototype.push.apply(E,t[f]);for(o=0,a=E.length;o<a;o++)void 0!==u[l=E[o].x+":"+E[o].y]&&THREE.warn("THREE.Shape: Duplicate point",l),u[l]=o;var d=function e(t,r){var o=t.concat();function a(e,t){var r=o.length-1,i=e-1;i<0&&(i=r);var a=e+1;a>r&&(a=0);var s=n(o[e],o[i],o[a],c[t]);if(!s)return!1;var h=c.length-1,l=t-1;l<0&&(l=h);var u=t+1;return u>h&&(u=0),!!(s=n(c[t],c[l],c[u],o[e]))}function s(e,t){var r,n,a;for(r=0;r<o.length;r++)if(n=r+1,n%=o.length,(a=i(e,t,o[r],o[n],!0)).length>0)return!0;return!1}var h=[];function l(e,t){var n,o,a,s,l;for(n=0;n<h.length;n++)for(a=0,o=r[h[n]];a<o.length;a++)if(s=a+1,s%=o.length,(l=i(e,t,o[a],o[s],!0)).length>0)return!0;return!1}for(var c,u,E,f,p,d,m,T,$,g,v,R=[],y=0,H=r.length;y<H;y++)h.push(y);for(var x=0,_=2*h.length;h.length>0;){if(--_<0){console.log("Infinite Loop! Holes left:"+h.length+", Probably Hole outside Shape!");break}for(E=x;E<o.length;E++){f=o[E],u=-1;for(var y=0;y<h.length;y++)if(d=h[y],void 0===R[m=f.x+":"+f.y+":"+d]){c=r[d];for(var b=0;b<c.length;b++)if(p=c[b],!(!a(E,b)||s(f,p))&&!l(f,p)){u=b,h.splice(y,1),T=o.slice(0,E+1),$=o.slice(E),g=c.slice(u),v=c.slice(0,u+1),o=T.concat(g).concat(v).concat($),x=E;break}if(u>=0)break;R[m]=!0}if(u>=0)break}}return o}(e,t),m=THREE.FontUtils.Triangulate(d,!1);for(o=0,a=m.length;o<a;o++)for(s=0,h=m[o];s<3;s++)void 0!==(c=u[l=h[s].x+":"+h[s].y])&&(h[s]=c);return m.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=new THREE.Vector2;return t.x=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),t},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=new THREE.Vector2;return t.x=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t.normalize()},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var t,r,i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(e){var t=this.points,r=(t.length-1)*e,i=Math.floor(r),n=r-i,o=t[0==i?i:i-1],a=t[i],s=t[i>t.length-2?t.length-1:i+1],h=t[i>t.length-3?t.length-1:i+2],l=new THREE.Vector2;return l.x=THREE.Curve.Utils.interpolate(o.x,a.x,s.x,h.x,n),l.y=THREE.Curve.Utils.interpolate(o.y,a.y,s.y,h.y,n),l},THREE.EllipseCurve=function(e,t,r,i,n,o,a){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(e){var t,r=this.aEndAngle-this.aStartAngle;r<0&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-r):this.aStartAngle+e*r;var i=new THREE.Vector2;return i.x=this.aX+this.xRadius*Math.cos(t),i.y=this.aY+this.yRadius*Math.sin(t),i},THREE.ArcCurve=function(e,t,r,i,n,o){THREE.EllipseCurve.call(this,e,t,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),t.z=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),t}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t.y=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t.z=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),t}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points,r=(t.length-1)*e,i=Math.floor(r),n=r-i,o=t[0==i?i:i-1],a=t[i],s=t[i>t.length-2?t.length-1:i+1],h=t[i>t.length-3?t.length-1:i+2],l=new THREE.Vector3;return l.x=THREE.Curve.Utils.interpolate(o.x,a.x,s.x,h.x,n),l.y=THREE.Curve.Utils.interpolate(o.y,a.y,s.y,h.y,n),l.z=THREE.Curve.Utils.interpolate(o.z,a.z,s.z,h.z,n),l}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points,r=(t.length-0)*e,i=Math.floor(r),n=r-i,o=t[((i+=i>0?0:(Math.floor(Math.abs(i)/t.length)+1)*t.length)-1)%t.length],a=t[i%t.length],s=t[(i+1)%t.length],h=t[(i+2)%t.length],l=new THREE.Vector3;return l.x=THREE.Curve.Utils.interpolate(o.x,a.x,s.x,h.x,n),l.y=THREE.Curve.Utils.interpolate(o.y,a.y,s.y,h.y,n),l.z=THREE.Curve.Utils.interpolate(o.z,a.z,s.z,h.z,n),l}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){THREE.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){THREE.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(!0===e.initialized)return e;for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion().fromArray(i)}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(var n={},r=0;r<e.hierarchy[t].keys.length;r++)for(var o=0;o<e.hierarchy[t].keys[r].morphTargets.length;o++){var a=e.hierarchy[t].keys[r].morphTargets[o];n[a]=-1}e.hierarchy[t].usedMorphTargets=n;for(var r=0;r<e.hierarchy[t].keys.length;r++){var s={};for(var a in n){for(var o=0;o<e.hierarchy[t].keys[r].morphTargets.length;o++)if(e.hierarchy[t].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[t].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[t].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=s}}for(var r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(var r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}return e.initialized=!0,e},parse:function(e){var t=function(e,r){r.push(e);for(var i=0;i<e.children.length;i++)t(e.children[i],r)},r=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.skeleton.bones.length;i++)r.push(e.skeleton.bones[i]);else t(e,r);return r},play:function(e){-1===this.animations.indexOf(e)&&this.animations.push(e)},stop:function(e){var t=this.animations.indexOf(e);-1!==t&&this.animations.splice(t,1)},update:function(e){for(var t=0;t<this.animations.length;t++)this.animations[t].resetBlendWeights();for(var t=0;t<this.animations.length;t++)this.animations[t].update(e)}},THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype={constructor:THREE.Animation,keyTypes:["pos","rot","scl"],play:function(e,t){this.currentTime=void 0!==e?e:0,this.weight=void 0!==t?t:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},reset:function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var r=this.hierarchy[e];void 0===r.animationCache&&(r.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});var i=this.data.name,n=r.animationCache.animations,o=n[i];void 0===o&&(o={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:r.matrix},n[i]=o);for(var a=0;a<3;a++){for(var s=this.keyTypes[a],h=this.data.hierarchy[e].keys[0],l=this.getNextKeyWith(s,e,1);l.time<this.currentTime&&l.index>h.index;)h=l,l=this.getNextKeyWith(s,e,l.index+1);o.prevKey[s]=h,o.nextKey[s]=l}}},resetBlendWeights:function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var r=this.hierarchy[e].animationCache;if(void 0!==r){var i=r.blending;i.positionWeight=0,i.quaternionWeight=0,i.scaleWeight=0}}},update:function(){var e=[],t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(e,t){var r,i,n,a,s,h,l,c,u,E=[],f=[];return i=Math.floor(r=(e.length-1)*t),n=r-i,E[0]=0===i?i:i-1,E[1]=i,E[2]=i>e.length-2?i:i+1,E[3]=i>e.length-3?i:i+2,h=e[E[0]],l=e[E[1]],c=e[E[2]],u=e[E[3]],a=n*n,s=n*a,f[0]=o(h[0],l[0],c[0],u[0],n,a,s),f[1]=o(h[1],l[1],c[1],u[1],n,a,s),f[2]=o(h[2],l[2],c[2],u[2],n,a,s),f},o=function(e,t,r,i,n,o,a){var s=(r-e)*.5,h=(i-t)*.5;return(2*(t-r)+s+h)*a+(-3*(t-r)-2*s-h)*o+s*n+t};return function(o){if(!1!==this.isPlaying&&(this.currentTime+=o*this.timeScale,0!==this.weight)){var a=this.data.length;(this.currentTime>a||this.currentTime<0)&&(this.loop?(this.currentTime%=a,this.currentTime<0&&(this.currentTime+=a),this.reset()):this.stop());for(var s=0,h=this.hierarchy.length;s<h;s++)for(var l=this.hierarchy[s],c=l.animationCache.animations[this.data.name],u=l.animationCache.blending,E=0;E<3;E++){var f=this.keyTypes[E],p=c.prevKey[f],d=c.nextKey[f];if(this.timeScale>0&&d.time<=this.currentTime||this.timeScale<0&&p.time>=this.currentTime){for(p=this.data.hierarchy[s].keys[0],d=this.getNextKeyWith(f,s,1);d.time<this.currentTime&&d.index>p.index;)p=d,d=this.getNextKeyWith(f,s,d.index+1);c.prevKey[f]=p,c.nextKey[f]=d}var m=(this.currentTime-p.time)/(d.time-p.time),T=p[f],$=d[f];if(m<0&&(m=0),m>1&&(m=1),"pos"===f){if(this.interpolationType===THREE.AnimationHandler.LINEAR){r.x=T[0]+($[0]-T[0])*m,r.y=T[1]+($[1]-T[1])*m,r.z=T[2]+($[2]-T[2])*m;var g=this.weight/(this.weight+u.positionWeight);l.position.lerp(r,g),u.positionWeight+=this.weight}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){e[0]=this.getPrevKeyWith("pos",s,p.index-1).pos,e[1]=T,e[2]=$,e[3]=this.getNextKeyWith("pos",s,d.index+1).pos;var v=n(e,m=.33*m+.33),g=this.weight/(this.weight+u.positionWeight);u.positionWeight+=this.weight;var R=l.position;if(R.x=R.x+(v[0]-R.x)*g,R.y=R.y+(v[1]-R.y)*g,R.z=R.z+(v[2]-R.z)*g,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var y=n(e,1.01*m);t.set(y[0],y[1],y[2]),t.sub(R),t.y=0,t.normalize();var H=Math.atan2(t.x,t.z);l.rotation.set(0,H,0)}}}else if("rot"===f){if(THREE.Quaternion.slerp(T,$,i,m),0===u.quaternionWeight)l.quaternion.copy(i),u.quaternionWeight=this.weight;else{var g=this.weight/(this.weight+u.quaternionWeight);THREE.Quaternion.slerp(l.quaternion,i,l.quaternion,g),u.quaternionWeight+=this.weight}}else if("scl"===f){r.x=T[0]+($[0]-T[0])*m,r.y=T[1]+($[1]-T[1])*m,r.z=T[2]+($[2]-T[2])*m;var g=this.weight/(this.weight+u.scaleWeight);l.scale.lerp(r,g),u.scaleWeight+=this.weight}}return!0}}}(),getNextKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},getPrevKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]}},THREE.KeyFrameAnimation=function(e){this.root=e.node,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var t=0,r=this.hierarchy.length;t<r;t++){var i=this.data.hierarchy[t].keys,n=this.data.hierarchy[t].sids,o=this.hierarchy[t];if(i.length&&n){for(var a=0;a<n.length;a++){var s=n[a],h=this.getNextKeyWith(s,t,0);h&&h.apply(s)}o.matrixAutoUpdate=!1,this.data.hierarchy[t].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(e){if(this.currentTime=void 0!==e?e:0,!1===this.isPlaying){this.isPlaying=!0;var t,r,i,n=this.hierarchy.length;for(t=0;t<n;t++){r=this.hierarchy[t],void 0===(i=this.data.hierarchy[t]).animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=r.matrix);var o=this.data.hierarchy[t].keys;o.length&&(i.animationCache.prevKey=o[0],i.animationCache.nextKey=o[1],this.startTime=Math.min(o[0].time,this.startTime),this.endTime=Math.max(o[o.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(t.matrix),t.matrix=i,delete r.animationCache}}},update:function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale;var t=this.data.length;!0===this.loop&&this.currentTime>t&&(this.currentTime%=t),this.currentTime=Math.min(this.currentTime,t);for(var r=0,i=this.hierarchy.length;r<i;r++){var n=this.hierarchy[r],o=this.data.hierarchy[r],a=o.keys,s=o.animationCache;if(a.length){var h=s.prevKey,l=s.nextKey;if(l.time<=this.currentTime){for(;l.time<this.currentTime&&l.index>h.index;)l=a[(h=l).index+1];s.prevKey=h,s.nextKey=l}l.time>=this.currentTime?h.interpolate(l,this.currentTime):h.interpolate(l,l.time),this.data.hierarchy[r].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},getPrevKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]}},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.lastFrame=0,this.currentFrame=0,this.isPlaying=!1},THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(e){if(!1!==this.isPlaying){this.currentTime+=e,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var t=this.duration/this.frames,r=Math.floor(this.currentTime/t),i=this.mesh.morphTargetInfluences;r!=this.currentFrame&&(i[this.lastFrame]=0,i[this.currentFrame]=1,i[r]=0,this.lastFrame=this.currentFrame,this.currentFrame=r),i[r]=this.currentTime%t/t,i[this.lastFrame]=1-i[r]}}},THREE.BoxGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var a=this,s=e/2,h=t/2,l=r/2;function c(e,t,r,i,n,o,s,h){var l,c,u,E=a.widthSegments,f=a.heightSegments,p=n/2,d=o/2,m=a.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",f=a.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",E=a.depthSegments);var T=E+1,$=f+1,g=n/E,v=o/f,R=new THREE.Vector3;for(u=0,R[l]=s>0?1:-1;u<$;u++)for(c=0;c<T;c++){var y=new THREE.Vector3;y[e]=(c*g-p)*r,y[t]=(u*v-d)*i,y[l]=s,a.vertices.push(y)}for(u=0;u<f;u++)for(c=0;c<E;c++){var H=c+T*u,x=c+T*(u+1),_=c+1+T*(u+1),b=c+1+T*u,w=new THREE.Vector2(c/E,1-u/f),S=new THREE.Vector2(c/E,1-(u+1)/f),M=new THREE.Vector2((c+1)/E,1-(u+1)/f),C=new THREE.Vector2((c+1)/E,1-u/f),A=new THREE.Face3(H+m,x+m,b+m);A.normal.copy(R),A.vertexNormals.push(R.clone(),R.clone(),R.clone()),A.materialIndex=h,a.faces.push(A),a.faceVertexUvs[0].push([w,S,C]),(A=new THREE.Face3(x+m,_+m,b+m)).normal.copy(R),A.vertexNormals.push(R.clone(),R.clone(),R.clone()),A.materialIndex=h,a.faces.push(A),a.faceVertexUvs[0].push([S.clone(),M,C.clone()])}}c("z","y",-1,-1,r,t,s,0),c("z","y",1,-1,r,t,-s,1),c("x","z",1,1,e,r,h,2),c("x","z",1,-1,e,r,-h,3),c("x","y",1,-1,e,t,l,4),c("x","y",-1,-1,e,t,-l,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:i},e=e||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[],a=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(a),o.push(s),n=0;n<=t;n++){var h=new THREE.Vector3,l=r+n/t*i;h.x=e*Math.cos(l),h.y=e*Math.sin(l),this.vertices.push(h),o.push(new THREE.Vector2((h.x/e+1)/2,(h.y/e+1)/2))}var c=new THREE.Vector3(0,0,1);for(n=1;n<=t;n++)this.faces.push(new THREE.Face3(n,n+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),s.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CubeGeometry=function(e,t,r,i,n,o){return THREE.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(e,t,r,i,n,o)},THREE.CylinderGeometry=function(e,t,r,i,n,o,a,s){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var h,l,c,u,E=r/2,f=[],p=[];for(u=0;u<=n;u++){var d=[],m=[],T=u/n,$=T*(t-e)+e;for(c=0;c<=i;c++){var g=c/i,v=new THREE.Vector3;v.x=$*Math.sin(g*s+a),v.y=-T*r+E,v.z=$*Math.cos(g*s+a),this.vertices.push(v),d.push(this.vertices.length-1),m.push(new THREE.Vector2(g,1-T))}f.push(d),p.push(m)}var R=(t-e)/r;for(c=0;c<i;c++)for(0!==e?(h=this.vertices[f[0][c]].clone(),l=this.vertices[f[0][c+1]].clone()):(h=this.vertices[f[1][c]].clone(),l=this.vertices[f[1][c+1]].clone()),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*R).normalize(),l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*R).normalize(),u=0;u<n;u++){var y=f[u][c],H=f[u+1][c],x=f[u+1][c+1],_=f[u][c+1],b=h.clone(),w=h.clone(),S=l.clone(),M=l.clone(),C=p[u][c].clone(),A=p[u+1][c].clone(),L=p[u+1][c+1].clone(),F=p[u][c+1].clone();this.faces.push(new THREE.Face3(y,H,_,[b,w,M])),this.faceVertexUvs[0].push([C,A,F]),this.faces.push(new THREE.Face3(H,x,_,[w.clone(),S,M.clone()])),this.faceVertexUvs[0].push([A.clone(),L,F.clone()])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,E,0)),c=0;c<i;c++){var y=f[0][c],H=f[0][c+1],x=this.vertices.length-1,b=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),S=new THREE.Vector3(0,1,0),C=p[0][c].clone(),A=p[0][c+1].clone(),L=new THREE.Vector2(A.x,0);this.faces.push(new THREE.Face3(y,H,x,[b,w,S])),this.faceVertexUvs[0].push([C,A,L])}if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-E,0)),c=0;c<i;c++){var y=f[n][c+1],H=f[n][c],x=this.vertices.length-1,b=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),S=new THREE.Vector3(0,-1,0),C=p[n][c+1].clone(),A=p[n][c].clone(),L=new THREE.Vector2(A.x,1);this.faces.push(new THREE.Face3(y,H,x,[b,w,S])),this.faceVertexUvs[0].push([C,A,L])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(e,t){if(void 0===e){e=[];return}THREE.Geometry.call(this),this.type="ExtrudeGeometry",e=e instanceof Array?e:[e],this.addShapeList(e,t),this.computeFaceNormals()},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;i<r;i++){var n=e[i];this.addShape(n,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){var r,i,n=void 0!==t.amount?t.amount:100,o=void 0!==t.bevelThickness?t.bevelThickness:6,a=void 0!==t.bevelSize?t.bevelSize:o-2,s=void 0!==t.bevelSegments?t.bevelSegments:3,h=void 0===t.bevelEnabled||t.bevelEnabled,l=void 0!==t.curveSegments?t.curveSegments:12,c=void 0!==t.steps?t.steps:1,u=t.extrudePath,E=!1,f=t.material,p=t.extrudeMaterial,d=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;u&&(i=u.getSpacedPoints(c),E=!0,h=!1,_=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(u,c,!1),b=new THREE.Vector3,w=new THREE.Vector3,S=new THREE.Vector3),h||(s=0,o=0,a=0);var m=this,T=this.vertices.length,$=e.extractPoints(l),g=$.shape,v=$.holes,R=!THREE.Shape.Utils.isClockWise(g);if(R){for(C=0,g=g.reverse(),A=v.length;C<A;C++)M=v[C],THREE.Shape.Utils.isClockWise(M)&&(v[C]=M.reverse());R=!1}var y=THREE.Shape.Utils.triangulateShape(g,v),H=g;for(C=0,A=v.length;C<A;C++)M=v[C],g=g.concat(M);function x(e,t,r){return t||THREE.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}var _,b,w,S,M,C,A,L,F,P,B,D,U,V=g.length,z=y.length;function k(e,t,r){var i,n,o=1,a=e.x-t.x,s=e.y-t.y,h=r.x-e.x,l=r.y-e.y,c=a*a+s*s;if(Math.abs(a*l-s*h)>1e-10){var u,E=Math.sqrt(c),f=Math.sqrt(h*h+l*l),p=t.x-s/E,d=t.y+a/E,m=((r.x-l/f-p)*l-(r.y+h/f-d)*h)/(a*l-s*h),T=(i=p+a*m-e.x)*i+(n=d+s*m-e.y)*n;if(T<=2)return new THREE.Vector2(i,n);o=Math.sqrt(T/2)}else{var $=!1;a>1e-10?h>1e-10&&($=!0):a<-.0000000001?h<-.0000000001&&($=!0):Math.sign(s)==Math.sign(l)&&($=!0),$?(i=-s,n=a,o=Math.sqrt(c)):(i=a,n=s,o=Math.sqrt(c/2))}return new THREE.Vector2(i/o,n/o)}for(var N=[],O=0,G=H.length,I=G-1,W=O+1;O<G;O++,I++,W++)I===G&&(I=0),W===G&&(W=0),N[O]=k(H[O],H[I],H[W]);var j,X=[],q=N.concat();for(C=0,A=v.length;C<A;C++){for(O=0,M=v[C],j=[],I=(G=M.length)-1,W=O+1;O<G;O++,I++,W++)I===G&&(I=0),W===G&&(W=0),j[O]=k(M[O],M[I],M[W]);X.push(j),q=q.concat(j)}for(L=0;L<s;L++){for(O=0,B=o*(1-(P=L/s)),F=a*Math.sin(P*Math.PI/2),G=H.length;O<G;O++)K((D=x(H[O],N[O],F)).x,D.y,-B);for(C=0,A=v.length;C<A;C++)for(O=0,M=v[C],j=X[C],G=M.length;O<G;O++)K((D=x(M[O],j[O],F)).x,D.y,-B)}for(O=0,F=a;O<V;O++)D=h?x(g[O],q[O],F):g[O],E?(w.copy(_.normals[0]).multiplyScalar(D.x),b.copy(_.binormals[0]).multiplyScalar(D.y),S.copy(i[0]).add(w).add(b),K(S.x,S.y,S.z)):K(D.x,D.y,0);for(r=1;r<=c;r++)for(O=0;O<V;O++)D=h?x(g[O],q[O],F):g[O],E?(w.copy(_.normals[r]).multiplyScalar(D.x),b.copy(_.binormals[r]).multiplyScalar(D.y),S.copy(i[r]).add(w).add(b),K(S.x,S.y,S.z)):K(D.x,D.y,n/c*r);for(L=s-1;L>=0;L--){for(O=0,B=o*(1-(P=L/s)),F=a*Math.sin(P*Math.PI/2),G=H.length;O<G;O++)K((D=x(H[O],N[O],F)).x,D.y,n+B);for(C=0,A=v.length;C<A;C++)for(O=0,M=v[C],j=X[C],G=M.length;O<G;O++)D=x(M[O],j[O],F),E?K(D.x,D.y+i[c-1].y,i[c-1].x+B):K(D.x,D.y,n+B)}function Y(e,t){var r,i;for(O=e.length;--O>=0;){r=O,(i=O-1)<0&&(i=e.length-1);var n=0,o=c+2*s;for(n=0;n<o;n++){var a,h=V*n,l=V*(n+1),u=t+r+h,E=t+i+h;Z(u,E,t+i+l,t+r+l,e,n,o,r,i)}}}function K(e,t,r){m.vertices.push(new THREE.Vector3(e,t,r))}function Q(e,t,r){e+=T,t+=T,r+=T,m.faces.push(new THREE.Face3(e,t,r,null,null,f));var i=d.generateTopUV(m,e,t,r);m.faceVertexUvs[0].push(i)}function Z(e,t,r,i,n,o,a,s,h){e+=T,t+=T,r+=T,i+=T,m.faces.push(new THREE.Face3(e,t,i,null,null,p)),m.faces.push(new THREE.Face3(t,r,i,null,null,p));var l=d.generateSideWallUV(m,e,t,r,i);m.faceVertexUvs[0].push([l[0],l[1],l[3]]),m.faceVertexUvs[0].push([l[1],l[2],l[3]])}(function e(){if(h){var t=0,r=V*t;for(O=0;O<z;O++)Q((U=y[O])[2]+r,U[1]+r,U[0]+r);for(O=0,r=V*(t=c+2*s);O<z;O++)Q((U=y[O])[0]+r,U[1]+r,U[2]+r)}else{for(O=0;O<z;O++)Q((U=y[O])[2],U[1],U[0]);for(O=0;O<z;O++)Q((U=y[O])[0]+V*c,U[1]+V*c,U[2]+V*c)}})(),function e(){var t=0;for(Y(H,t),t+=H.length,C=0,A=v.length;C<A;C++)Y(M=v[C],t),t+=M.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i){var n=e.vertices,o=n[t],a=n[r],s=n[i];return[new THREE.Vector2(o.x,o.y),new THREE.Vector2(a.x,a.y),new THREE.Vector2(s.x,s.y)]},generateSideWallUV:function(e,t,r,i,n){var o=e.vertices,a=o[t],s=o[r],h=o[i],l=o[n];return .01>Math.abs(a.y-s.y)?[new THREE.Vector2(a.x,1-a.z),new THREE.Vector2(s.x,1-s.z),new THREE.Vector2(h.x,1-h.z),new THREE.Vector2(l.x,1-l.z)]:[new THREE.Vector2(a.y,1-a.z),new THREE.Vector2(s.y,1-s.z),new THREE.Vector2(h.y,1-h.z),new THREE.Vector2(l.y,1-l.z)]}},THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),this.type="ShapeGeometry",e instanceof Array==!1&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;r<i;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=void 0!==t.curveSegments?t.curveSegments:12,i=t.material,n=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,o=this.vertices.length,a=e.extractPoints(r),s=a.shape,h=a.holes,l=!THREE.Shape.Utils.isClockWise(s);if(l){for(u=0,s=s.reverse(),E=h.length;u<E;u++)f=h[u],THREE.Shape.Utils.isClockWise(f)&&(h[u]=f.reverse());l=!1}var c=THREE.Shape.Utils.triangulateShape(s,h);for(u=0,E=h.length;u<E;u++)f=h[u],s=s.concat(f);var u,E,f,p,d,m=s.length,T=c.length;for(u=0;u<m;u++)p=s[u],this.vertices.push(new THREE.Vector3(p.x,p.y,0));for(u=0;u<T;u++){var $=(d=c[u])[0]+o,g=d[1]+o,v=d[2]+o;this.faces.push(new THREE.Face3($,g,v,null,null,i)),this.faceVertexUvs[0].push(n.generateTopUV(this,$,g,v))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:i},t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;a<=s;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),u=0,E=e.length;u<E;u++){var f=e[u],p=new THREE.Vector3;p.x=l*f.x-c*f.y,p.y=c*f.x+l*f.y,p.z=f.z,this.vertices.push(p)}for(var d=e.length,a=0,s=t;a<s;a++)for(var u=0,E=e.length-1;u<E;u++){var m=u+d*a,T=m,$=m+d,l=m+1+d,g=m+1,v=a*o,R=u*n,y=v+o,H=R+n;this.faces.push(new THREE.Face3(T,$,g)),this.faceVertexUvs[0].push([new THREE.Vector2(v,R),new THREE.Vector2(y,R),new THREE.Vector2(v,H)]),this.faces.push(new THREE.Face3($,l,g)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(y,H),new THREE.Vector2(v,H)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,r,i){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."),THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,r,i))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(e,t,r,i){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};for(var n=e/2,o=t/2,a=r||1,s=i||1,h=a+1,l=s+1,c=e/a,u=t/s,E=new Float32Array(h*l*3),f=new Float32Array(h*l*3),p=new Float32Array(h*l*2),d=0,m=0,T=0;T<l;T++)for(var $=T*u-o,g=0;g<h;g++){var v=g*c-n;E[d]=v,E[d+1]=-$,f[d+2]=1,p[m]=g/a,p[m+1]=1-T/s,d+=3,m+=2}d=0;for(var R=new(E.length/3>65535?Uint32Array:Uint16Array)(a*s*6),T=0;T<s;T++)for(var g=0;g<a;g++){var y=g+h*T,H=g+h*(T+1),x=g+1+h*(T+1),_=g+1+h*T;R[d]=y,R[d+1]=H,R[d+2]=_,R[d+3]=H,R[d+4]=x,R[d+5]=_,d+=6}this.addAttribute("index",new THREE.BufferAttribute(R,1)),this.addAttribute("position",new THREE.BufferAttribute(E,3)),this.addAttribute("normal",new THREE.BufferAttribute(f,3)),this.addAttribute("uv",new THREE.BufferAttribute(p,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},e=e||0,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var a,s,h=[],l=e,c=(t-e)/(i=void 0!==i?Math.max(1,i):8);for(a=0;a<i+1;a++){for(s=0;s<r+1;s++){var u=new THREE.Vector3,E=n+s/r*o;u.x=l*Math.cos(E),u.y=l*Math.sin(E),this.vertices.push(u),h.push(new THREE.Vector2((u.x/t+1)/2,(u.y/t+1)/2))}l+=c}var f=new THREE.Vector3(0,0,1);for(a=0;a<i;a++){var p=a*(r+1);for(s=0;s<r;s++){var E=s+p,d=E,m=E+r+1,T=E+r+2;this.faces.push(new THREE.Face3(d,m,T,[f.clone(),f.clone(),f.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[T].clone()]),d=E,m=E+r+2,T=E+1,this.faces.push(new THREE.Face3(d,m,T,[f.clone(),f.clone(),f.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[T].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],E=[];for(s=0;s<=t;s++){var f=s/t,p=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+f*n)*Math.sin(o+p*a),d.y=e*Math.cos(o+p*a),d.z=e*Math.sin(i+f*n)*Math.sin(o+p*a),this.vertices.push(d),u.push(this.vertices.length-1),E.push(new THREE.Vector2(f,1-p))}l.push(u),c.push(E)}for(h=0;h<r;h++)for(s=0;s<t;s++){var m=l[h][s+1],T=l[h][s],$=l[h+1][s],g=l[h+1][s+1],v=this.vertices[m].clone().normalize(),R=this.vertices[T].clone().normalize(),y=this.vertices[$].clone().normalize(),H=this.vertices[g].clone().normalize(),x=c[h][s+1].clone(),_=c[h][s].clone(),b=c[h+1][s].clone(),w=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===e?(x.x=(x.x+_.x)/2,this.faces.push(new THREE.Face3(m,$,g,[v,y,H])),this.faceVertexUvs[0].push([x,b,w])):Math.abs(this.vertices[$].y)===e?(b.x=(b.x+w.x)/2,this.faces.push(new THREE.Face3(m,T,$,[v,R,y])),this.faceVertexUvs[0].push([x,_,b])):(this.faces.push(new THREE.Face3(m,T,g,[v,R,H])),this.faceVertexUvs[0].push([x,_,w]),this.faces.push(new THREE.Face3(T,$,g,[R.clone(),y,H.clone()])),this.faceVertexUvs[0].push([_.clone(),b,w.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t),this.type="TextGeometry"},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,arc:n},e=e||100,t=t||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=e*Math.cos(c),o.y=e*Math.sin(c);var E=new THREE.Vector3;E.x=(e+t*Math.cos(u))*Math.cos(c),E.y=(e+t*Math.cos(u))*Math.sin(c),E.z=t*Math.sin(u),this.vertices.push(E),a.push(new THREE.Vector2(l/i,h/r)),s.push(E.clone().sub(o).normalize())}for(var h=1;h<=r;h++)for(var l=1;l<=i;l++){var f=(i+1)*h+l-1,p=(i+1)*(h-1)+l-1,d=(i+1)*(h-1)+l,m=(i+1)*h+l,T=new THREE.Face3(f,p,m,[s[f].clone(),s[p].clone(),s[m].clone()]);this.faces.push(T),this.faceVertexUvs[0].push([a[f].clone(),a[p].clone(),a[m].clone()]),T=new THREE.Face3(p,d,m,[s[p].clone(),s[d].clone(),s[m].clone()]),this.faces.push(T),this.faceVertexUvs[0].push([a[p].clone(),a[d].clone(),a[m].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},e=e||100,t=t||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var s=Array(r),h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,u=0;u<r;++u){s[u]=Array(i);var E=u/r*2*n*Math.PI,f=C(E,o,n,e,a),p=C(E+.01,o,n,e,a);h.subVectors(p,f),l.addVectors(p,f),c.crossVectors(h,l),l.crossVectors(c,h),c.normalize(),l.normalize();for(var d=0;d<i;++d){var m=d/i*2*Math.PI,T=-t*Math.cos(m),$=t*Math.sin(m),g=new THREE.Vector3;g.x=f.x+T*l.x+$*c.x,g.y=f.y+T*l.y+$*c.y,g.z=f.z+T*l.z+$*c.z,s[u][d]=this.vertices.push(g)-1}}for(var u=0;u<r;++u)for(var d=0;d<i;++d){var v=(u+1)%r,R=(d+1)%i,y=s[u][d],H=s[v][d],x=s[v][R],_=s[u][R],b=new THREE.Vector2(u/r,d/i),w=new THREE.Vector2((u+1)/r,d/i),S=new THREE.Vector2((u+1)/r,(d+1)/i),M=new THREE.Vector2(u/r,(d+1)/i);this.faces.push(new THREE.Face3(y,H,_)),this.faceVertexUvs[0].push([b,w,M]),this.faces.push(new THREE.Face3(H,x,_)),this.faceVertexUvs[0].push([w.clone(),S,M.clone()])}function C(e,t,r,i,n){var o=Math.cos(e),a=Math.sin(e),s=t/r*e,h=Math.cos(s),l=n*i*Math.sin(s)*.5;return new THREE.Vector3(i*(2+h)*.5*o,i*(2+h)*a*.5,l)}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:r,radialSegments:i,closed:n},t=t||64,r=r||1,i=i||8,n=n||!1,o=o||THREE.TubeGeometry.NoTaper;var a,s,h,l,c,u,E,f,p,d,m,T,$,g,v,R,y,H,x,_,b,w=[],S=this,M=t+1,C=new THREE.Vector3,A=new THREE.TubeGeometry.FrenetFrames(e,t,n),L=A.tangents,F=A.normals,P=A.binormals;function B(e,t,r){return S.vertices.push(new THREE.Vector3(e,t,r))-1}for(d=0,this.tangents=L,this.normals=F,this.binormals=P;d<M;d++)for(m=0,w[d]=[],l=d/(M-1),p=e.getPointAt(l),a=L[d],s=F[d],h=P[d],u=r*o(l);m<i;m++)E=-u*Math.cos(c=m/i*2*Math.PI),f=u*Math.sin(c),C.copy(p),C.x+=E*s.x+f*h.x,C.y+=E*s.y+f*h.y,C.z+=E*s.z+f*h.z,w[d][m]=B(C.x,C.y,C.z);for(d=0;d<t;d++)for(m=0;m<i;m++)T=n?(d+1)%t:d+1,$=(m+1)%i,g=w[d][m],v=w[T][m],R=w[T][$],y=w[d][$],H=new THREE.Vector2(d/t,m/i),x=new THREE.Vector2((d+1)/t,m/i),_=new THREE.Vector2((d+1)/t,(m+1)/i),b=new THREE.Vector2(d/t,(m+1)/i),this.faces.push(new THREE.Face3(g,v,y)),this.faceVertexUvs[0].push([H,x,b]),this.faces.push(new THREE.Face3(v,R,y)),this.faceVertexUvs[0].push([x.clone(),_,b.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(e){return 1},THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},THREE.TubeGeometry.FrenetFrames=function(e,t,r){var i,n,o,a,s,h,l,c=new THREE.Vector3,u=[],E=[],f=[],p=new THREE.Vector3,d=new THREE.Matrix4,m=t+1;for(h=0,this.tangents=u,this.normals=E,this.binormals=f;h<m;h++)l=h/(m-1),u[h]=e.getTangentAt(l),u[h].normalize();for(E[0]=new THREE.Vector3,f[0]=new THREE.Vector3,n=Number.MAX_VALUE,o=Math.abs(u[0].x),a=Math.abs(u[0].y),s=Math.abs(u[0].z),o<=n&&(n=o,c.set(1,0,0)),a<=n&&(n=a,c.set(0,1,0)),s<=n&&c.set(0,0,1),p.crossVectors(u[0],c).normalize(),E[0].crossVectors(u[0],p),f[0].crossVectors(u[0],E[0]),h=1;h<m;h++)E[h]=E[h-1].clone(),f[h]=f[h-1].clone(),p.crossVectors(u[h-1],u[h]),p.length()>1e-4&&(p.normalize(),i=Math.acos(THREE.Math.clamp(u[h-1].dot(u[h]),-1,1)),E[h].applyMatrix4(d.makeRotationAxis(p,i))),f[h].crossVectors(u[h],E[h]);if(r)for(i=Math.acos(THREE.Math.clamp(E[0].dot(E[m-1]),-1,1)),i/=m-1,u[0].dot(p.crossVectors(E[0],E[m-1]))>0&&(i=-i),h=1;h<m;h++)E[h].applyMatrix4(d.makeRotationAxis(u[h],i*h)),f[h].crossVectors(u[h],E[h])},THREE.PolyhedronGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:i},r=r||1,i=i||0;for(var n=this,o=0,a=e.length;o<a;o+=3)g(new THREE.Vector3(e[o],e[o+1],e[o+2]));for(var s=this.vertices,h=[],o=0,l=0,a=t.length;o<a;o+=3,l++){var c=s[t[o]],u=s[t[o+1]],E=s[t[o+2]];h[l]=new THREE.Face3(c.index,u.index,E.index,[c.clone(),u.clone(),E.clone()])}for(var f=new THREE.Vector3,o=0,a=h.length;o<a;o++)R(h[o],i);for(var o=0,a=this.faceVertexUvs[0].length;o<a;o++){var p=this.faceVertexUvs[0][o],d=p[0].x,m=p[1].x,T=p[2].x,$=Math.min(d,Math.min(m,T));Math.max(d,Math.max(m,T))>.9&&$<.1&&(d<.2&&(p[0].x+=1),m<.2&&(p[1].x+=1),T<.2&&(p[2].x+=1))}for(var o=0,a=this.vertices.length;o<a;o++)this.vertices[o].multiplyScalar(r);function g(e){var t,r=e.normalize().clone();r.index=n.vertices.push(r)-1;var i=y(e)/2/Math.PI+.5,o=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);return r.uv=new THREE.Vector2(i,1-o),r}function v(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);n.faces.push(i),f.copy(e).add(t).add(r).divideScalar(3);var o=y(f);n.faceVertexUvs[0].push([H(e.uv,e,o),H(t.uv,t,o),H(r.uv,r,o)])}function R(e,t){for(var r=Math.pow(2,t),i=g(n.vertices[e.a]),o=g(n.vertices[e.b]),a=g(n.vertices[e.c]),s=[],h=0;h<=r;h++){s[h]=[];for(var l=g(i.clone().lerp(a,h/r)),c=g(o.clone().lerp(a,h/r)),u=r-h,E=0;E<=u;E++)0==E&&h==r?s[h][E]=l:s[h][E]=g(l.clone().lerp(c,E/u))}for(var h=0;h<r;h++)for(var E=0;E<2*(r-h)-1;E++){var f=Math.floor(E/2);E%2==0?v(s[h][f+1],s[h+1][f],s[h][f]):v(s[h][f+1],s[h+1][f+1],s[h+1][f])}}function y(e){return Math.atan2(e.z,-e.x)}function H(e,t,r){return r<0&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=(1+Math.sqrt(5))/2,i=1/r;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t)},THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t},THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r};var i,n,o,a,s,h,l,c,u,E,f,p,d,m=this.vertices,T=this.faces,$=this.faceVertexUvs[0],g=t+1;for(i=0;i<=r;i++)for(n=0,s=i/r;n<=t;n++)o=e(a=n/t,s),m.push(o);for(i=0;i<r;i++)for(n=0;n<t;n++)h=i*g+n,l=i*g+n+1,c=(i+1)*g+n+1,u=(i+1)*g+n,E=new THREE.Vector2(n/t,i/r),f=new THREE.Vector2((n+1)/t,i/r),p=new THREE.Vector2((n+1)/t,(i+1)/r),d=new THREE.Vector2(n/t,(i+1)/r),T.push(new THREE.Face3(h,l,u)),$.push([E,f,d]),T.push(new THREE.Face3(l,c,u)),$.push([f.clone(),p,d.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.BufferAttribute(t,3)),i.addAttribute("color",new THREE.BufferAttribute(r,3));var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,i,n,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);return t.applyMatrix(new THREE.Matrix4().makeTranslation(0,-.5,0)),function(r,i,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(i),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(r.z,0,-r.x).normalize(),e=Math.acos(r.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,e-t,1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,i=t.boundingBox.max,n=this.geometry.attributes.position.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=r.x,n[4]=i.y,n[5]=i.z,n[6]=r.x,n[7]=i.y,n[8]=i.z,n[9]=r.x,n[10]=r.y,n[11]=i.z,n[12]=r.x,n[13]=r.y,n[14]=i.z,n[15]=i.x,n[16]=r.y,n[17]=i.z,n[18]=i.x,n[19]=r.y,n[20]=i.z,n[21]=i.x,n[22]=i.y,n[23]=i.z,n[24]=i.x,n[25]=i.y,n[26]=r.z,n[27]=r.x,n[28]=i.y,n[29]=r.z,n[30]=r.x,n[31]=i.y,n[32]=r.z,n[33]=r.x,n[34]=r.y,n[35]=r.z,n[36]=r.x,n[37]=r.y,n[38]=r.z,n[39]=i.x,n[40]=r.y,n[41]=r.z,n[42]=i.x,n[43]=r.y,n[44]=r.z,n[45]=i.x,n[46]=i.y,n[47]=r.z,n[48]=i.x,n[49]=i.y,n[50]=i.z,n[51]=i.x,n[52]=i.y,n[53]=r.z,n[54]=r.x,n[55]=i.y,n[56]=i.z,n[57]=r.x,n[58]=i.y,n[59]=r.z,n[60]=r.x,n[61]=r.y,n[62]=i.z,n[63]=r.x,n[64]=r.y,n[65]=r.z,n[66]=i.x,n[67]=r.y,n[68]=i.z,n[69]=i.x,n[70]=r.y,n[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.BoundingBoxHelper=function(e,t){this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:void 0!==t?t:8947848,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){var t=new THREE.Geometry,r=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};function n(e,t,r){o(e,r),o(t,r)}function o(e,r){t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(r)),void 0===i[e]&&(i[e]=[]),i[e].push(t.vertices.length-1)}n("n1","n2",16755200),n("n2","n4",16755200),n("n4","n3",16755200),n("n3","n1",16755200),n("f1","f2",16755200),n("f2","f4",16755200),n("f4","f3",16755200),n("f3","f1",16755200),n("n1","f1",16755200),n("n2","f2",16755200),n("n3","f3",16755200),n("n4","f4",16755200),n("p","n1",16711680),n("p","n2",16711680),n("p","n3",16711680),n("p","n4",16711680),n("u1","u2",43775),n("u2","u3",43775),n("u3","u1",43775),n("c","t",16777215),n("p","c",3355443),n("cn1","cn2",3355443),n("cn3","cn4",3355443),n("cf1","cf2",3355443),n("cf3","cf4",3355443),THREE.Line.call(this,t,r,THREE.LinePieces),this.camera=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){var e,t,r=new THREE.Vector3,i=new THREE.Camera,n=function(n,o,a,s){r.set(o,a,s).unproject(i);var h=t[n];if(void 0!==h)for(var l=0,c=h.length;l<c;l++)e.vertices[h[l]].copy(r)};return function(){e=this.geometry,t=this.pointMap,i.projectionMatrix.copy(this.camera.projectionMatrix),n("c",0,0,-1),n("t",0,0,1),n("n1",-1,-1,-1),n("n2",1,-1,-1),n("n3",-1,1,-1),n("n4",1,1,-1),n("f1",-1,-1,1),n("f2",1,-1,1),n("f3",-1,1,1),n("f4",1,1,1),n("u1",.7,1.1,-1),n("u2",-.7,1.1,-1),n("u3",0,2,-1),n("cf1",-1,0,1),n("cf2",1,0,1),n("cf3",0,-1,1),n("cf4",0,1,1),n("cn1",-1,0,-1),n("cn2",1,0,-1),n("cn3",0,-1,-1),n("cn4",0,1,-1),e.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),(r=new THREE.Geometry).vertices.push(new THREE.Vector3,new THREE.Vector3),(i=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t,r){r=void 0!==r?r:1;var i,n=Math.cos(THREE.Math.degToRad(r)),o=[0,0],a={},s=function(e,t){return e-t},h=["a","b","c"],l=new THREE.BufferGeometry;e.geometry instanceof THREE.BufferGeometry?(i=new THREE.Geometry).fromBufferGeometry(e.geometry):i=e.geometry.clone(),i.mergeVertices(),i.computeFaceNormals();for(var c=i.vertices,u=i.faces,E=0,f=0,p=u.length;f<p;f++)for(var d=u[f],m=0;m<3;m++){o[0]=d[h[m]],o[1]=d[h[(m+1)%3]],o.sort(s);var T=o.toString();void 0===a[T]?(a[T]={vert1:o[0],vert2:o[1],face1:f,face2:void 0},E++):a[T].face2=f}var $=new Float32Array(6*E),g=0;for(var T in a){var v=a[T];if(void 0===v.face2||u[v.face1].normal.dot(u[v.face2].normal)<=n){var R=c[v.vert1];$[g++]=R.x,$[g++]=R.y,$[g++]=R.z,R=c[v.vert2],$[g++]=R.x,$[g++]=R.y,$[g++]=R.z}}l.addAttribute("position",new THREE.BufferAttribute($,3)),THREE.Line.call(this,l,new THREE.LineBasicMaterial({color:void 0!==t?t:16777215}),THREE.LinePieces),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=new THREE.Geometry,o=this.object.geometry.faces,a=0,s=o.length;a<s;a++)n.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:void 0!==r?r:16776960,linewidth:void 0!==i?i:1}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,r=t.geometry.vertices,i=t.geometry.faces,n=t.matrixWorld;t.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=0,a=0,s=i.length;o<s;o++,a+=2){var h=i[o];e[a].copy(r[h.a]).add(r[h.b]).add(r[h.c]).divideScalar(3).applyMatrix4(n),e[a+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[a])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;n<=e;n+=t){r.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(t,4,2);r.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));for(var i=0;i<8;i++)r.faces[i].color=this.colors[i<4?0:1];var n=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(r,n),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,t,i,THREE.LinePieces),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t},THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=new THREE.Matrix4().getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(t,o.matrixWorld),e.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[i+1].setFromMatrixPosition(r),i+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix(new THREE.Matrix4().makeTranslation(0,-.5,0)),t.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=new THREE.Geometry,o=e.geometry.faces,a=0,s=o.length;a<s;a++)for(var h=o[a],l=0,c=h.vertexNormals.length;l<c;l++)n.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:void 0!==r?r:16711680,linewidth:void 0!==i?i:1}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,o=this.object.geometry.faces,a=this.object.matrixWorld,s=0,h=0,l=o.length;h<l;h++)for(var c=o[h],u=0,E=c.vertexNormals.length;u<E;u++){var f=n[c[r[u]]],p=c.vertexNormals[u];i[s].copy(f).applyMatrix4(a),t.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=new THREE.Geometry,o=e.geometry.faces,a=0,s=o.length;a<s;a++)for(var h=o[a],l=0,c=h.vertexTangents.length;l<c;l++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:void 0!==r?r:255,linewidth:void 0!==i?i:1}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper,THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,o=this.object.geometry.faces,a=this.object.matrixWorld,s=0,h=0,l=o.length;h<l;h++)for(var c=o[h],u=0,E=c.vertexTangents.length;u<E;u++){var f=n[c[r[u]]],p=c.vertexTangents[u];i[s].copy(f).applyMatrix4(a),t.copy(p).transformDirection(a).multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=[0,0],i={},n=function(e,t){return e-t},o=["a","b","c"],a=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var s=e.geometry.vertices,h=e.geometry.faces,l=0,c=new Uint32Array(6*h.length),u=0,E=h.length;u<E;u++)for(var f=h[u],p=0;p<3;p++){r[0]=f[o[p]],r[1]=f[o[(p+1)%3]],r.sort(n);var d=r.toString();void 0===i[d]&&(c[2*l]=r[0],c[2*l+1]=r[1],i[d]=!0,l++)}for(var m=new Float32Array(6*l),u=0,E=l;u<E;u++)for(var p=0;p<2;p++){var T=s[c[2*u+p]],$=6*u+3*p;m[$+0]=T.x,m[$+1]=T.y,m[$+2]=T.z}a.addAttribute("position",new THREE.BufferAttribute(m,3))}else if(e.geometry instanceof THREE.BufferGeometry){if(void 0!==e.geometry.attributes.index){var s=e.geometry.attributes.position.array,g=e.geometry.attributes.index.array,v=e.geometry.drawcalls,l=0;0===v.length&&(v=[{count:g.length,index:0,start:0}]);for(var c=new Uint32Array(2*g.length),R=0,y=v.length;R<y;++R)for(var H=v[R].start,x=v[R].count,$=v[R].index,u=H,_=H+x;u<_;u+=3)for(var p=0;p<3;p++){r[0]=$+g[u+p],r[1]=$+g[u+(p+1)%3],r.sort(n);var d=r.toString();void 0===i[d]&&(c[2*l]=r[0],c[2*l+1]=r[1],i[d]=!0,l++)}for(var m=new Float32Array(6*l),u=0,E=l;u<E;u++)for(var p=0;p<2;p++){var $=6*u+3*p,b=3*c[2*u+p];m[$+0]=s[b],m[$+1]=s[b+1],m[$+2]=s[b+2]}a.addAttribute("position",new THREE.BufferAttribute(m,3))}else{for(var s=e.geometry.attributes.position.array,l=s.length/3,w=l/3,m=new Float32Array(6*l),u=0,E=w;u<E;u++)for(var p=0;p<3;p++){var $=18*u+6*p,S=9*u+3*p;m[$+0]=s[S],m[$+1]=s[S+1],m[$+2]=s[S+2];var b=9*u+3*((p+1)%3);m[$+3]=s[b],m[$+4]=s[b+1],m[$+5]=s[b+2]}a.addAttribute("position",new THREE.BufferAttribute(m,3))}}THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:void 0!==t?t:16777215}),THREE.LinePieces),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default";this.createAnimation(i,0,r-1,r/1),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var n={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(r);if(s&&s.length>1){var h=s[1];i[h]||(i[h]={start:1/0,end:-1/0});var l=i[h];o<l.start&&(l.start=o),o>l.end&&(l.end=o),t||(t=h)}}for(var h in i){var l=i[h];this.createAnimation(h,l.start,l.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):THREE.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o);var s=i.time%n/n;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*a,this.morphTargetInfluences[i.lastFrame]=(1-s)*a}}};